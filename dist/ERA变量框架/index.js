var __webpack_modules__ = {
  "./src/ERA变量框架/api.ts": 
  /*!****************************!*\
  !*** ./src/ERA变量框架/api.ts ***!
  \****************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteByObject: () => (/* binding */ deleteByObject),\n/* harmony export */   deleteByPath: () => (/* binding */ deleteByPath),\n/* harmony export */   emitWriteDoneEvent: () => (/* binding */ emitWriteDoneEvent),\n/* harmony export */   insertByObject: () => (/* binding */ insertByObject),\n/* harmony export */   insertByPath: () => (/* binding */ insertByPath),\n/* harmony export */   updateByObject: () => (/* binding */ updateByObject),\n/* harmony export */   updateByPath: () => (/* binding */ updateByPath)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ \"lodash\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"./src/ERA变量框架/constants.ts\");\n/* harmony import */ var _message_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./message_utils */ \"./src/ERA变量框架/message_utils.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"./src/ERA变量框架/utils.ts\");\n/**\n * @file ERA 变量框架 - 外部事件 API 实现模块\n * @description\n * 该模块是 ERA 框架与外部脚本交互的接口层。它实现了一系列自定义事件的处理器。\n *\n * **设计理念**:\n * ERA 框架不直接向外暴露函数调用接口。外部脚本与 ERA 交互的**唯一**方式是通过酒馆的\n * `eventEmit(eventName, eventData)` 函数，发送特定格式的事件。\n *\n * `index.ts` 模块会监听这些 `era:*` 前缀的事件，并将其推入 `event_queue.ts` 中进行处理。\n * 事件队列最终会调用本文件中对应的处理器函数（如 `insertByObject`）。\n *\n * 本模块中的函数通过一种巧妙、解耦的方式工作：它们在最新的 AI 消息末尾动态注入\n * `<VariableInsert>` 或 `<VariableEdit>` 指令块，然后调用酒馆的 `setChatMessages` 更新消息。\n * 这次修改会触发 `character_message_rendered` 等事件，被 ERA 的主监听器捕获，\n * 从而将 API 调用无缝地整合到 ERA 的原生解析和同步流程中。\n */\n\n\n\n\nconst logger = new _utils__WEBPACK_IMPORTED_MODULE_3__.Logger('api');\n// 使用 lodash.debounce 创建一个防抖函数来发送 API 写入事件\nconst debouncedEmitApiWrite = lodash__WEBPACK_IMPORTED_MODULE_0___default().debounce(() => {\n    eventEmit(_constants__WEBPACK_IMPORTED_MODULE_1__.ERA_EVENT_EMITTER.API_WRITE);\n    logger.log('debouncedEmitApiWrite', `已触发合并后的 ${_constants__WEBPACK_IMPORTED_MODULE_1__.ERA_EVENT_EMITTER.API_WRITE} 事件。`);\n}, 700, { leading: false, trailing: true });\n// ==================================================================\n// API 事件参考\n// (事件名称的常量定义见于 `constants.ts` 中的 `ERA_API_EVENTS` 对象)\n// ==================================================================\n/**\n * @section API Event: 'era:insertByObject'\n * @description 通过一个对象，非破坏性地插入新变量。只会写入不存在的路径。\n * @param {object} detail - 要插入的变量对象。\n * @example\n * eventEmit('era:insertByObject', {\n *   player: { name: \"勇者\", hp: 100, inventory: [] }\n * });\n */\n/**\n * @section API Event: 'era:updateByObject'\n * @description 通过一个对象，修改已存在的变量。如果路径不存在，则忽略。\n * @param {object} detail - 要更新的变量对象。\n * @example\n * eventEmit('era:updateByObject', {\n *   player: { hp: 120, status: 'blessed' }\n * });\n */\n/**\n * @section API Event: 'era:insertByPath'\n * @description 通过指定路径和值，非破坏性地插入一个新变量。\n * @param {object} detail - 包含路径和值的对象。\n * @param {string} detail.path - 变量的路径，使用点或方括号表示法。\n * @param {*} detail.value - 要插入的值。\n * @example\n * eventEmit('era:insertByPath', {\n *   path: 'player.inventory[0]',\n *   value: { name: '生命药水', count: 3 }\n * });\n */\n/**\n * @section API Event: 'era:updateByPath'\n * @description 通过指定路径和值，修改一个已存在的变量。\n * @param {object} detail - 包含路径和值的对象。\n * @param {string} detail.path - 变量的路径。\n * @param {*} detail.value - 要设置的新值。可以是直接的值，也可以是运算表达式。\n * @example\n * eventEmit('era:updateByPath', {\n *   path: 'player.hp',\n *   value: '+=10'\n * });\n */\n/**\n * @section API Event: 'era:deleteByObject'\n * @description 通过一个对象，删除已存在的变量。\n * @param {object} detail - 描述要删除路径的结构。值的结构决定了删除行为。\n * @example\n * // 准备删除 player.gold。指令中 gold 的值必须是空对象 {}\n * eventEmit('era:deleteByObject', { player: { gold: {} } });\n *\n * // 准备删除整个 player 对象。\n * eventEmit('era:deleteByObject', { player: {} });\n *\n * // **重要**: 如果 player 对象包含 gold 和 mana 两个属性，\n * // 以下指令只会删除 gold 和 mana，而 player 对象本身会被保留（变为空对象）。\n * // 这与 `eventEmit('era:deleteByObject', { player: {} })` 的效果是不同的。\n * eventEmit('era:deleteByObject', { player: { gold: {}, mana: {} } });\n */\n/**\n * @section API Event: 'era:deleteByPath'\n * @description 通过指定路径，删除一个已存在的变量。\n * @param {object} detail - 包含路径的对象。\n * @param {string} detail.path - 要删除的变量的路径。\n * @example\n * eventEmit('era:deleteByPath', { path: 'player.inventory[0]' });\n */\n// ==================================================================\n// 内部核心函数\n// ==================================================================\n/**\n * 在聊天记录中查找并返回最后一条由 AI 发送的消息。\n * 这是注入变量修改指令的目标消息。\n * @returns {Promise<any | null>} 返回找到的消息对象，如果不存在 AI 消息则返回 null。\n */\n/**\n * 执行一次 API 写入操作。\n * 它将指定的变量修改块追加到最后一条 AI 消息的末尾，然后调度一个 'era:apiWrite' 事件。\n * @param {ApiWriteJob} job - 要执行的写入任务。\n */\nasync function performApiWrite(job) {\n    // 1. 生成指令块\n    const contentString = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.J)(job.blockContent);\n    const block = `\\n<${job.blockTag}>\\n${contentString}\\n</${job.blockTag}>`;\n    // 2. 查找目标消息并追加内容\n    const lastAiMessage = await (0,_message_utils__WEBPACK_IMPORTED_MODULE_2__.findLastAiMessage)();\n    if (!lastAiMessage) {\n        logger.warn('performApiWrite', '找不到任何 AI 消息，无法执行 API 写入。');\n        return;\n    }\n    const originalContent = (0,_message_utils__WEBPACK_IMPORTED_MODULE_2__.getMessageContent)(lastAiMessage) ?? '';\n    const newContent = originalContent + block;\n    logger.log('performApiWrite', `实时写入 API 任务 (${job.blockTag}) 到消息 ID ${lastAiMessage.message_id}...`);\n    // 3. 实时更新消息内容\n    await (0,_utils__WEBPACK_IMPORTED_MODULE_3__.updateMessageContent)(lastAiMessage, newContent);\n    // 4. 调用防抖函数来调度写入事件的发送\n    debouncedEmitApiWrite();\n}\n// ==================================================================\n// 事件处理器实现 (由 event_queue.ts 调用)\n// ==================================================================\n/**\n * **【处理器】** 处理 `era:insertByObject` 事件。\n * @param {object} data - 从事件的 `detail` 中获取的变量对象。\n */\nfunction insertByObject(data) {\n    performApiWrite({ blockTag: 'VariableInsert', blockContent: data });\n}\n/**\n * **【处理器】** 处理 `era:updateByObject` 事件。\n * @param {object} data - 从事件的 `detail` 中获取的变量对象。\n */\nfunction updateByObject(data) {\n    performApiWrite({ blockTag: 'VariableEdit', blockContent: data });\n}\n/**\n * **【处理器】** 处理 `era:insertByPath` 事件。\n * @param {string} path - 从事件 `detail` 的 `path` 属性获取。\n * @param {*} value - 从事件 `detail` 的 `value` 属性获取。\n */\nfunction insertByPath(path, value) {\n    const block = lodash__WEBPACK_IMPORTED_MODULE_0___default().set({}, path, value);\n    performApiWrite({ blockTag: 'VariableInsert', blockContent: block });\n}\n/**\n * **【处理器】** 处理 `era:updateByPath` 事件。\n * @param {string} path - 从事件 `detail` 的 `path` 属性获取。\n * @param {*} value - 从事件 `detail` 的 `value` 属性获取。\n */\nfunction updateByPath(path, value) {\n    const block = lodash__WEBPACK_IMPORTED_MODULE_0___default().set({}, path, value);\n    performApiWrite({ blockTag: 'VariableEdit', blockContent: block });\n}\n/**\n * **【处理器】** 处理 `era:deleteByObject` 事件。\n * @param {object} data - 从事件的 `detail` 中获取的变量结构。\n */\nfunction deleteByObject(data) {\n    performApiWrite({ blockTag: 'VariableDelete', blockContent: data });\n}\n/**\n * **【处理器】** 处理 `era:deleteByPath` 事件。\n * @param {string} path - 从事件 `detail` 的 `path` 属性获取。\n */\nfunction deleteByPath(path) {\n    // 对于删除操作，我们用一个空对象作为值来表示删除该路径的意图\n    const block = lodash__WEBPACK_IMPORTED_MODULE_0___default().set({}, path, {});\n    performApiWrite({ blockTag: 'VariableDelete', blockContent: block });\n}\n/**\n * **【广播器】** 触发 `era:writeDone` 事件。\n * 当一次完整的变量写入操作（包括增、删、改）在 `variable_change_processor.ts` 中成功完成后，\n * 应调用此函数。它向外部脚本广播一个事件，通知它们变量状态已发生改变，并提供详细的上下文。\n *\n * @param {WriteDonePayload} payload - 包含写入操作关键信息的事件负载。\n * @example\n * // 这是一个在外部脚本中监听此事件的示例：\n * eventOn('era:writeDone', (detail) => {\n *   const { mk, message_id, actions, selectedMks, editLogs, stat, statWithoutMeta } = detail;\n *   console.log(`ERA 变量已更新！消息 ID: ${message_id}, MK: ${mk}`);\n *   console.log('执行的操作:', actions);\n *\n *   // 你可以根据需要使用 stat (带 meta) 或 statWithoutMeta (不带 meta)\n *   console.log('最新的纯净状态数据:', statWithoutMeta);\n *\n *   // 此时可以根据最新的状态数据更新你自己的 UI 或执行其他逻辑\n * });\n */\nfunction emitWriteDoneEvent(payload) {\n    // 在广播前，对需要暴露给外部的数据进行反转义\n    const unescapedPayload = {\n        ...payload,\n        stat: (0,_utils__WEBPACK_IMPORTED_MODULE_3__.unescapeEraData)(payload.stat),\n        statWithoutMeta: (0,_utils__WEBPACK_IMPORTED_MODULE_3__.unescapeEraData)(payload.statWithoutMeta),\n    };\n    logger.debug('emitWriteDoneEvent', 'writeDone事件广播数据反转义', {\n        before: { stat: payload.stat, statWithoutMeta: payload.statWithoutMeta },\n        after: { stat: unescapedPayload.stat, statWithoutMeta: unescapedPayload.statWithoutMeta },\n    });\n    eventEmit(_constants__WEBPACK_IMPORTED_MODULE_1__.ERA_EVENT_EMITTER.WRITE_DONE, unescapedPayload);\n    logger.log('emitWriteDoneEvent', `已触发 ${_constants__WEBPACK_IMPORTED_MODULE_1__.ERA_EVENT_EMITTER.WRITE_DONE} 事件。操作: ${JSON.stringify(payload.actions)}, MK: ${payload.mk}, MsgID: ${payload.message_id}`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/api.ts\n\n}");
  },
  "./src/ERA变量框架/constants.ts": 
  /*!**********************************!*\
  !*** ./src/ERA变量框架/constants.ts ***!
  \**********************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CHAT_SCOPE: () => (/* binding */ CHAT_SCOPE),\n/* harmony export */   ERA_API_EVENTS: () => (/* binding */ ERA_API_EVENTS),\n/* harmony export */   ERA_DATA_REGEX: () => (/* binding */ ERA_DATA_REGEX),\n/* harmony export */   ERA_DATA_TAG: () => (/* binding */ ERA_DATA_TAG),\n/* harmony export */   ERA_EVENT_EMITTER: () => (/* binding */ ERA_EVENT_EMITTER),\n/* harmony export */   EVENT_COLLISION_MAP: () => (/* binding */ EVENT_COLLISION_MAP),\n/* harmony export */   EVENT_GROUPS: () => (/* binding */ EVENT_GROUPS),\n/* harmony export */   LOGS_PATH: () => (/* binding */ LOGS_PATH),\n/* harmony export */   LOG_CONFIG: () => (/* binding */ LOG_CONFIG),\n/* harmony export */   META_DATA_PATH: () => (/* binding */ META_DATA_PATH),\n/* harmony export */   RENDER_EVENTS_TO_IGNORE_AFTER_MK_INJECTION: () => (/* binding */ RENDER_EVENTS_TO_IGNORE_AFTER_MK_INJECTION),\n/* harmony export */   SEL_PATH: () => (/* binding */ SEL_PATH),\n/* harmony export */   STAT_DATA_PATH: () => (/* binding */ STAT_DATA_PATH)\n/* harmony export */ });\n/**\n * @file ERA 变量框架 - 核心常量模块\n * @description\n * 该文件集中定义了整个 ERA 框架所使用的关键常量。\n * 这些常量主要用作在酒馆 `chat` 变量中存储和检索 ERA 核心数据的路径（键名）。\n *\n * **核心数据结构**:\n * ERA 的数据被分为两部分，存储在 `chat` 变量下：\n * 1. **元数据 (ERAMetaData)**: 包含框架自身运行所需的核心数据，如 `EditLogs` 和 `SelectedMks`。\n * 2. **状态数据 (stat_data)**: 包含所有由用户和 AI 管理的游戏/故事变量，如 `player`、`world_state` 等。\n *\n * 其结构大致如下：\n * ```json\n * {\n *   \"ERAMetaData\": {\n *     \"EditLogs\": { ... },\n *     \"SelectedMks\": [ ... ]\n *   },\n *   \"stat_data\": {\n *     \"player\": { \"hp\": 100, \"gold\": 50 },\n *     \"world_state\": { ... }\n *   }\n * }\n * ```\n * 将这些路径定义为常量，有助于：\n * 1. **避免硬编码**：减少因拼写错误导致的 bug。\n * 2. **提高可维护性**：如果未来需要调整数据结构，只需修改此文件即可。\n * 3. **增强代码可读性**：常量的名称清晰地表达了其所指向的数据的含义。\n */\n\n/**\n * @constant {object} CHAT_SCOPE\n * @description\n * 用于酒馆助手 `getVariables` 和 `replaceVariables` 系列函数的 `scope` 参数。\n * 它指定了操作的目标是当前**聊天（Chat）**级别的变量。\n * ERA 框架的所有核心数据和用户变量都存储在此作用域下。\n */\nconst CHAT_SCOPE = { type: 'chat' };\n/**\n * @constant {string} META_DATA_PATH\n * @description 在 `chat` 变量中，存储 ERA 框架**元数据**的根对象的键名。\n */\nconst META_DATA_PATH = 'ERAMetaData';\n/**\n * @constant {string} STAT_DATA_PATH\n * @description 在 `chat` 变量中，存储用户**状态数据**的根对象的键名。\n */\nconst STAT_DATA_PATH = 'stat_data';\n/**\n * @constant {string} LOGS_PATH\n * @description\n * 在 `ERAMetaData` 对象中，存储**编辑日志（Edit Logs）**的对象的键名，即 `\"EditLogs\"`。\n * `EditLogs` 是一个以**消息密钥（MK）**为键，以该消息引发的变量变更记录数组为值的对象。\n * 这是实现“逆序回滚”功能的基础数据。\n *\n * @example\n * // chat.ERAMetaData.EditLogs 的一个条目\n * \"era_mk_1759246942209_jipmrj\": [\n *   { \"op\": \"insert\", \"path\": \"testData.inventory\", \"value_new\": { \"gold\": 100, \"slots\": [\"sword\", \"shield\"] } },\n *   { \"op\": \"update\", \"path\": \"player.hp\", \"value_old\": 90, \"value_new\": 100 }\n * ]\n */\nconst LOGS_PATH = 'EditLogs';\n/**\n * @constant {string} SEL_PATH\n * @description\n * 在 `ERAMetaData` 对象中，存储**已选择消息密钥链（Selected Message Keys）**的数组的键名，即 `\"SelectedMks\"`。\n * `SelectedMks` 是一个稀疏数组，其**索引约等于消息 ID**，值是该楼层消息的 MK。\n * 这个数组是 ERA 框架的“脊梁”，是连接抽象变量状态与具体聊天历史的桥梁。\n * 框架通过比对 `SelectedMks` 与实际消息流中的 MK，来判断数据是否需要同步。\n *\n * @example\n * // chat.ERAMetaData.SelectedMks\n * [ , \"era_mk_greeting\", \"era_mk_abc123\", , \"era_mk_xyz789\"]\n */\nconst SEL_PATH = 'SelectedMks';\n/**\n * @constant {string} ERA_DATA_TAG\n * @description\n * 用于在消息内容中包裹 ERA 元数据（如消息密钥 MK）的 XML 风格标签名。\n * e.g., `<era_data>{...}</era_data>`\n */\nconst ERA_DATA_TAG = 'era_data';\n/**\n * @constant {RegExp} ERA_DATA_REGEX\n * @description\n * 用于从消息内容字符串中匹配和提取 `<era_data>` 块的正则表达式。\n * 这个常量被定义在这里，以避免 `message_key.ts` 和 `message_utils.ts` 之间的循环依赖。\n */\nconst ERA_DATA_REGEX = new RegExp(`<${ERA_DATA_TAG}>({.*?})<\\\\/${ERA_DATA_TAG}>`);\n/**\n * @constant {object} ERA_API_EVENTS\n * @description\n * 定义了所有供外部脚本通过 `eventEmit` 调用的自定义 API 事件名称。\n * 使用这些常量可以避免在代码中使用硬编码的字符串。\n */\nconst ERA_API_EVENTS = {\n    INSERT_BY_OBJECT: 'era:insertByObject',\n    UPDATE_BY_OBJECT: 'era:updateByObject',\n    INSERT_BY_PATH: 'era:insertByPath',\n    UPDATE_BY_PATH: 'era:updateByPath',\n    DELETE_BY_OBJECT: 'era:deleteByObject',\n    DELETE_BY_PATH: 'era:deleteByPath',\n};\n/**\n * @constant {object} ERA_EVENT_EMITTER\n * @description 定义了所有由 ERA 框架**向外发出**的事件。\n */\nconst ERA_EVENT_EMITTER = {\n    /** 当变量写入完成时触发 */\n    WRITE_DONE: 'era:writeDone',\n    /** 当API执行写入时触发 */\n    API_WRITE: 'era:apiWrite',\n};\n/**\n * @description 定义需要监听的事件的分组\n */\nconst EVENT_GROUPS = {\n    WRITE: [\n        //tavern_events.CHARACTER_MESSAGE_RENDERED,\n        tavern_events.APP_READY,\n        'manual_write',\n        ERA_EVENT_EMITTER.API_WRITE,\n        //tavern_events.MESSAGE_RECEIVED,\n    ],\n    SYNC: [\n        tavern_events.MESSAGE_RECEIVED,\n        tavern_events.MESSAGE_DELETED,\n        tavern_events.MESSAGE_SWIPED,\n        tavern_events.CHAT_CHANGED,\n        'manual_sync',\n        'manual_full_sync',\n    ],\n    API: Object.values(ERA_API_EVENTS),\n    /** 仅更新MK的事件 */\n    UPDATE_MK_ONLY: [tavern_events.MESSAGE_SENT],\n    /** 仅用于对冲检测的事件，本身不触发逻辑 */\n    COLLISION_DETECTORS: [tavern_events.GENERATION_STARTED],\n};\n/**\n * @constant {Map<string, string>} EVENT_COLLISION_MAP\n * @description\n * 定义了事件对冲规则。\n * 如果在事件队列的同一次批处理中，同时出现了 key 事件和 value 事件，\n * 则这两个事件都将被忽略。\n *\n * @example\n * // 当用户快速左滑然后点击生成时，会依次触发 `MESSAGE_SWIPED` 和 `GENERATION_STARTED`。\n * // 这条规则会捕获这种模式并同时忽略这两个事件，避免不必要的同步。\n * new Map([\n *   [tavern_events.MESSAGE_SWIPED, tavern_events.GENERATION_STARTED]\n * ])\n */\nconst EVENT_COLLISION_MAP = new Map([\n    [tavern_events.MESSAGE_SWIPED, tavern_events.GENERATION_STARTED],\n]);\n/**\n * @constant {number} RENDER_EVENTS_TO_IGNORE_AFTER_MK_INJECTION\n * @description 当 `ensureMessageKey` 注入一个新的 MK 后，需要忽略的由该操作触发的 `character_message_rendered` 事件的数量。\n * 通常设置为 1，因为一次消息内容更新通常只会触发一次渲染事件。\n */\nconst RENDER_EVENTS_TO_IGNORE_AFTER_MK_INJECTION = 1;\n/**\n * @constant {object} LOG_CONFIG\n * @description\n * 用于控制日志输出的配置对象。\n */\nconst LOG_CONFIG = {\n    // 定义所有可用的日志级别及其权重。数字越小，级别越低。\n    levels: {\n        debug: 0,\n        log: 1,\n        warn: 2,\n        error: 3,\n    },\n    // 设置当前全局日志级别。只有权重等于或高于此级别的日志才会被输出。\n    currentLevel: 0, // 默认为 'debug'\n    // 'debug' 级别的白名单。只有当 currentLevel 为 debug 时，此列表才生效。\n    // 只有在此列表中的模块才会输出 debug 日志。\n    debugWhitelist: [\n        'api',\n        'delete',\n        'event_queue',\n        'force_macro_render',\n        'insert',\n        'message_key',\n        'message_utils',\n        'query',\n        'rollback',\n        'sync',\n        'template',\n        'update',\n        'variable_change_processor',\n    ],\n};\n// 初始化时将 currentLevel 设置为 debug 级别\nLOG_CONFIG.currentLevel = LOG_CONFIG.levels.debug;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/constants.ts\n\n}");
  },
  "./src/ERA变量框架/delete.ts": 
  /*!*******************************!*\
  !*** ./src/ERA变量框架/delete.ts ***!
  \*******************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   processDeleteBlocks: () => (/* binding */ processDeleteBlocks)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/ERA变量框架/utils.ts\");\n/**\n * @file ERA 变量框架 - 变量删除模块\n * @description\n * 该模块负责处理 `<VariableDelete>` 指令，实现对已存在变量的删除，并生成相应的 `EditLog`。\n *\n * **设计理念**:\n * - **指令驱动**: 递归行为由指令对象的结构驱动。空对象 `{}` 表示删除当前节点，非空对象表示递归删除子节点。\n * - **安全第一**: 删除是破坏性操作，因此引入了 `$meta.necessary` 权限机制来防止误删。\n * - **精确豁免**: `necessary` 的保护只有在删除指令明确指向 `necessary` 属性自身时才会被绕过。\n * - **原子性日志**: 为每一次删除生成单一、精确的 `EditLog`，确保操作可完全回滚。\n */\n\n\nconst logger = new _utils__WEBPACK_IMPORTED_MODULE_0__.Logger('delete');\n/**\n * **【递归删除】**\n * 实现了 `<VariableDelete>` 的核心逻辑，其行为由指令 `patchObj` 的结构驱动。\n *\n * @param {any} statData - 状态数据对象 (即 `stat_data`)。\n * @param {string} basePath - 当前递归层级的基础路径。\n * @param {any} patchObj - 从指令中解析出的、与 `basePath` 对应的部分。\n * @param {any[]} editLog - 用于收集变更记录的日志数组。\n */\nfunction applyDeleteAtLevel(statData, basePath, patchObj, editLog) {\n    // --- 1. 入口守卫和状态获取 ---\n    const currentNodeInVars = basePath ? _.get(statData, basePath) : statData;\n    if (currentNodeInVars === undefined) {\n        logger.warn('applyDeleteAtLevel', `VariableDelete 跳过：路径不存在 -> ${basePath || '(root)'}`);\n        return;\n    }\n    const necessary = _.get(currentNodeInVars, ['$meta', 'necessary']);\n    // 精确判断豁免条件\n    const metaPatch = _.get(patchObj, '$meta');\n    const isBypassingProtection = \n    // 场景1: 指令要删除整个 $meta 对象\n    (_.isPlainObject(metaPatch) && _.isEmpty(metaPatch)) ||\n        // 场景2: 指令明确要删除 $meta.necessary 键\n        _.has(patchObj, ['$meta', 'necessary']);\n    // --- 2. 判断意图：递归删除子节点 vs 删除当前节点 ---\n    if (_.isPlainObject(patchObj) && !_.isEmpty(patchObj)) {\n        // **意图：递归删除子节点**\n        // 权限检查：如果节点受 'all' 保护，且指令不满足豁免条件，则禁止深入。\n        if (necessary === 'all' && !isBypassingProtection) {\n            logger.warn('applyDeleteAtLevel', `VariableDelete 失败：路径 <${basePath}> 受 \"necessary: all\" 保护，其子节点无法被删除。`);\n            return;\n        }\n        // 权限通过，或存在豁免，继续向内递归。\n        for (const key of Object.keys(patchObj)) {\n            const fullPath = basePath ? `${basePath}.${key}` : key;\n            const subPatchObj = patchObj[key];\n            applyDeleteAtLevel(statData, fullPath, subPatchObj, editLog);\n        }\n        return; // 子节点处理完毕，返回。\n    }\n    // --- 3. 执行删除当前节点 ---\n    // (能走到这里，说明 patchObj 是空对象、非对象或 null)\n    // **意图：删除当前节点 `basePath`**\n    // 权限检查：'self' 或 'all' 都会阻止当前节点的直接删除。\n    // 直接删除节点的意图无法豁免保护，必须通过递归意图删除 '$meta' 来解除保护。\n    if (necessary === 'self' || necessary === 'all') {\n        logger.warn('applyDeleteAtLevel', `VariableDelete 失败：路径 <${basePath}> 受 \"necessary: ${necessary}\" 保护，无法被直接删除。`);\n        return;\n    }\n    // 根节点（basePath 为 ''）不应被删除。\n    if (basePath === '') {\n        logger.error('applyDeleteAtLevel', 'VariableDelete 失败：不允许删除根对象。');\n        return;\n    }\n    // 执行原子性删除\n    const valOld = _.cloneDeep(currentNodeInVars);\n    _.unset(statData, basePath);\n    editLog.push({ op: 'delete', path: basePath, value_old: valOld });\n    logger.debug('applyDeleteAtLevel', `成功删除节点: ${basePath}`);\n}\n/**\n * 处理所有 `<VariableDelete>` 指令块。\n *\n * @param {any[]} allDeletes - 从消息中解析出的所有 delete 指令对象。\n * @param {any[]} editLog - 用于收集变更记录的日志数组。\n */\nasync function processDeleteBlocks(allDeletes, editLog) {\n    if (allDeletes.length > 0) {\n        for (const deleteRoot of allDeletes) {\n            if (!_.isPlainObject(deleteRoot) || _.isEmpty(deleteRoot))\n                continue;\n            try {\n                await (0,_utils__WEBPACK_IMPORTED_MODULE_0__.updateEraStatData)(stat => {\n                    logger.debug('processDeleteBlocks', `处理 deleteRoot: ${JSON.stringify(deleteRoot)}`);\n                    // 从根路径开始递归\n                    applyDeleteAtLevel(stat, '', deleteRoot, editLog);\n                    return stat;\n                });\n            }\n            catch (e) {\n                logger.error('processDeleteBlocks', `处理 deleteRoot 失败: ${e?.message || e}`, e);\n            }\n        }\n        logger.log('processDeleteBlocks', '所有 VariableDelete 操作完成');\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/delete.ts\n\n}");
  },
  "./src/ERA变量框架/event_queue.ts": 
  /*!************************************!*\
  !*** ./src/ERA变量框架/event_queue.ts ***!
  \************************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pushToQueue: () => (/* binding */ pushToQueue)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ \"lodash\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api */ \"./src/ERA变量框架/api.ts\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants */ \"./src/ERA变量框架/constants.ts\");\n/* harmony import */ var _force_macro_render__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./force_macro_render */ \"./src/ERA变量框架/force_macro_render.ts\");\n/* harmony import */ var _message_key__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./message_key */ \"./src/ERA变量框架/message_key.ts\");\n/* harmony import */ var _rollback__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./rollback */ \"./src/ERA变量框架/rollback.ts\");\n/* harmony import */ var _sync__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./sync */ \"./src/ERA变量框架/sync.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils */ \"./src/ERA变量框架/utils.ts\");\n/* harmony import */ var _variable_change_processor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./variable_change_processor */ \"./src/ERA变量框架/variable_change_processor.ts\");\n/**\n * @file ERA 变量框架 - 事件队列与处理器模块\n * @description\n * 该模块是 ERA 框架的“神经中枢”，它通过一个事件队列机制，优雅地解决了因酒馆（SillyTavern）\n * 高频、并发事件（特别是 `character_message_rendered`）可能导致的状态竞争和逻辑错乱问题。\n *\n * **工作原理**:\n * 1. **事件入队**: 所有来自酒馆的、与 ERA 相关的事件以及来自 API 的调用，都不会立即执行，\n *    而是被封装成一个 `EventJob` 对象，推入一个先进先出的 `eventQueue` 队列中。\n * 2. **单线程处理**: 一个独立的、异步的 `processQueue` 函数作为唯一的处理器。它使用一个\n *    `isProcessing` 锁来确保在任何时刻，只有一个事件处理循环在运行，从而从根本上避免了并发问题。\n * 3. **智能批处理与合并**: 在每个处理循环的开始，处理器会一次性取出队列中的所有事件形成一个“批次”。\n *    然后对这个批次进行“智能合并”，例如，多个连续的、效果可覆盖的写入事件（如 `MESSAGE_RECEIVED`）\n *    可以被合并为一次，只保留最后一个，这极大地减少了不必要的重复计算。\n * 4. **顺序执行与任务分发**: 合并后的任务会按照严格的顺序被逐一执行。`switch` 语句根据事件类型，\n *    将任务分发给相应的核心处理函数（如 `ApplyVarChange`, `resyncStateOnHistoryChange` 等）。\n * 5. **保障与节流**:\n *    - 在处理每个任务**之前**，都会调用 `ensureMkForLatestMessage`，确保即将操作的消息有 MK。\n *    - 在处理每个任务**之后**，都会调用 `updateLatestSelectedMk`，校准 `SelectedMks` 的最新记录。\n *    - 每个任务处理后都有一个短暂的 `setTimeout` 节流，给予酒馆底层异步操作完成的时间。\n */\n\n\n\n\n\n\n\n\n\n\nconst logger = new _utils__WEBPACK_IMPORTED_MODULE_7__.Logger('event_queue');\n/**\n * @const {EventJob[]} eventQueue\n * @description 事件队列，存储所有待处理的事件任务。\n */\nconst eventQueue = [];\n/**\n * @let {boolean} isProcessing\n * @description 处理器锁。为 true 时表示 `processQueue` 正在运行，防止重入。\n */\nlet isProcessing = false;\n/**\n * **【事件入口】**\n * 将一个事件推入队列，并尝试启动处理器。这是所有事件监听器的统一入口点。\n * @param {string} type - 事件类型 (e.g., `tavern_events.MESSAGE_DELETED`)。\n * @param {any} [detail] - 事件附带的数据。\n */\nfunction pushToQueue(type, detail) {\n    logger.debug('pushToQueue', `接收到事件: ${type}，已推入队列。`, { detail });\n    eventQueue.push({ type, detail, timestamp: Date.now() });\n    processQueue(); // 尝试启动处理器\n}\n/**\n * 根据事件类型，查找它属于哪个预定义的组。\n * @param {string} eventType - 要检查的事件类型。\n * @returns {string} 事件所属的组名 ('WRITE', 'SYNC', 'API', 'UPDATE_MK_ONLY', 'UNKNOWN')。\n */\nfunction getEventGroup(eventType) {\n    // 使用 as string[] 来解决 TypeScript 因 'as const' 推断出的过于严格的类型问题\n    if (_constants__WEBPACK_IMPORTED_MODULE_2__.EVENT_GROUPS.WRITE.includes(eventType))\n        return 'WRITE';\n    if (_constants__WEBPACK_IMPORTED_MODULE_2__.EVENT_GROUPS.SYNC.includes(eventType))\n        return 'SYNC';\n    if (_constants__WEBPACK_IMPORTED_MODULE_2__.EVENT_GROUPS.API.includes(eventType))\n        return 'API';\n    if (_constants__WEBPACK_IMPORTED_MODULE_2__.EVENT_GROUPS.UPDATE_MK_ONLY.includes(eventType))\n        return 'UPDATE_MK_ONLY';\n    if (_constants__WEBPACK_IMPORTED_MODULE_2__.EVENT_GROUPS.COLLISION_DETECTORS.includes(eventType))\n        return 'COLLISION_DETECTORS';\n    return 'UNKNOWN';\n}\n/**\n * **【核心事件处理器】**\n * 持续从队列中取出事件、合并、并按顺序执行。\n * 这是一个自驱动的异步函数，只要队列不为空就会一直运行，直到处理完所有任务。\n */\nasync function processQueue() {\n    if (isProcessing)\n        return; // 如果已在处理中，则直接返回，等待当前循环完成。\n    isProcessing = true;\n    logger.log('processQueue', '处理器启动...');\n    // 用于存储由 ensureMkForLatestMessage 新注入的 MK，以忽略其触发的渲染事件。\n    // 它定义在 while 循环外部，以在不同批次的事件处理之间保持状态。\n    let mkToIgnore = null;\n    while (eventQueue.length > 0) {\n        // 【事件收集窗口】\n        // 查看队列中的下一个事件，以决定是否需要防抖。\n        const nextJob = eventQueue[0];\n        const nextGroup = getEventGroup(nextJob.type);\n        // 如果下一个事件不是需要立即响应的 API 事件，则进行防抖等待。\n        // 这允许在第一个事件触发后、处理器实际开始工作前的瞬间，让任何紧随其后的、\n        // 快速连续的事件（如多次 swipe）有机会进入队列，从而被纳入同一个批次进行合并。\n        if (nextGroup !== 'API') {\n            logger.log('processQueue', `下一个事件 (${nextJob.type}) 需要防抖，等待300毫秒...`);\n            await new Promise(resolve => setTimeout(resolve, 300));\n        }\n        // --- 1. 事件批处理与合并 ---\n        // 等待结束后，一次性取出队列中的所有事件进行批处理。\n        const batchToProcess = eventQueue.splice(0, eventQueue.length);\n        const originalEvents = lodash__WEBPACK_IMPORTED_MODULE_0___default().cloneDeep(batchToProcess);\n        // a. 合并相邻的同组事件\n        const finalJobs = [];\n        // 使用 for...of 循环，让逻辑更清晰\n        for (const currentJob of batchToProcess) {\n            // 如果是第一个事件，直接放入结果中\n            if (finalJobs.length === 0) {\n                finalJobs.push(currentJob);\n                continue; // 继续处理下一个事件\n            }\n            const prevJob = finalJobs[finalJobs.length - 1];\n            // 1. 检查事件对冲\n            const expectedNextEvent = _constants__WEBPACK_IMPORTED_MODULE_2__.EVENT_COLLISION_MAP.get(prevJob.type);\n            const timeDifference = currentJob.timestamp - prevJob.timestamp;\n            if (expectedNextEvent && currentJob.type === expectedNextEvent && timeDifference <= 300) {\n                logger.log('processQueue', `检测到相邻事件对冲: ${prevJob.type} 和 ${currentJob.type} (时间差: ${timeDifference}ms)。将忽略这两个事件。`);\n                finalJobs.pop(); // 移除前一个事件\n                continue; // 跳过当前事件，从而忽略两者\n            }\n            // 2. 如果不对冲，则检查同组事件合并\n            const prevGroup = getEventGroup(prevJob.type);\n            const currentGroup = getEventGroup(currentJob.type);\n            // 定义合并条件，让 if 判断的意图更清晰\n            const areInSameGroup = prevGroup === currentGroup;\n            const isMergeableGroup = prevGroup === 'WRITE' || prevGroup === 'SYNC';\n            // 如果满足合并条件\n            if (areInSameGroup && isMergeableGroup) {\n                // 用当前事件覆盖掉结果数组中的最后一个事件\n                finalJobs[finalJobs.length - 1] = currentJob;\n            }\n            else {\n                // 否则，将当前事件追加到结果数组\n                finalJobs.push(currentJob);\n            }\n        }\n        // b. 打印合并日志\n        console.groupCollapsed(`[ERA] 事件队列处理: ${originalEvents.length} -> ${finalJobs.length}`);\n        logger.log('合并前', originalEvents.map(e => e.type));\n        logger.log('合并后', finalJobs.map(e => e.type));\n        console.groupEnd();\n        // --- 2. 严格按顺序执行合并后的任务 ---\n        for (const job of finalJobs) {\n            const { type: eventType, detail } = job;\n            const eventGroup = getEventGroup(eventType);\n            let message_id = null;\n            // 在每轮任务开始时，初始化操作记录器\n            const actionsTaken = { rollback: false, apply: false, resync: false };\n            try {\n                // **前置过滤**: 忽略单独存在的对冲检测器事件\n                if (eventGroup === 'COLLISION_DETECTORS') {\n                    // 此类事件仅用于对冲，如果它单独存在（未被对冲掉），则不执行任何操作。\n                    logger.log('processQueue', `事件 ${eventType} 是一个对冲检测器，无独立操作，已忽略。`);\n                    continue;\n                }\n                // **前置保障**: 确保最新消息有 MK 并设置日志上下文。\n                const { mk, message_id: msgId, isNewKey } = await (0,_message_key__WEBPACK_IMPORTED_MODULE_4__.ensureMkForLatestMessage)();\n                _utils__WEBPACK_IMPORTED_MODULE_7__.logContext.mk = mk;\n                message_id = msgId;\n                // 如果 ensureMkForLatestMessage 刚刚注入了一个新的 MK，就设置忽略规则。\n                if (isNewKey && mk) {\n                    mkToIgnore = {\n                        mk: mk,\n                        ignoreCount: _constants__WEBPACK_IMPORTED_MODULE_2__.RENDER_EVENTS_TO_IGNORE_AFTER_MK_INJECTION,\n                    };\n                }\n                // **核心优化**: 忽略由 MK 注入自身触发的渲染事件\n                if (mkToIgnore && eventType === tavern_events.CHARACTER_MESSAGE_RENDERED && mk === mkToIgnore.mk) {\n                    logger.log('processQueue', `忽略由 MK (${mkToIgnore.mk}) 注入触发的冗余渲染事件。剩余忽略次数: ${mkToIgnore.ignoreCount - 1}`);\n                    mkToIgnore.ignoreCount--;\n                    if (mkToIgnore.ignoreCount <= 0) {\n                        mkToIgnore = null; // 忽略次数用完，重置\n                        logger.log('processQueue', `忽略次数用完`);\n                    }\n                    continue; // 跳过此事件的处理\n                }\n                logger.log('processQueue', `执行任务: ${eventType} (分组: ${eventGroup})`);\n                // **任务分发**\n                logger.debug('processQueue - task dispatch', `分发事件: ${eventType}`, { detail, eventGroup });\n                if (eventGroup === 'WRITE') {\n                    // 关键：写入前先回滚，确保操作的幂等性。\n                    // 即使事件被意外触发多次，也只会产生一次有效写入。\n                    const msg = getChatMessages(-1, { include_swipes: true })?.[0];\n                    if (msg) {\n                        const MK = (0,_message_key__WEBPACK_IMPORTED_MODULE_4__.readMessageKey)(msg);\n                        if (MK) {\n                            await (0,_rollback__WEBPACK_IMPORTED_MODULE_5__.rollbackByMk)(MK, true);\n                            actionsTaken.rollback = true;\n                        }\n                    }\n                    await (0,_variable_change_processor__WEBPACK_IMPORTED_MODULE_8__.ApplyVarChange)();\n                    actionsTaken.apply = true;\n                    // 在变量写入完成后，强制重新渲染消息以触发宏\n                    (0,_force_macro_render__WEBPACK_IMPORTED_MODULE_3__.forceRenderRecentMessages)();\n                }\n                else if (eventGroup === 'SYNC') {\n                    logger.debug('processQueue - task dispatch', `事件 ${eventType} 触发状态同步流程...`);\n                    const isFullSync = eventType === 'manual_full_sync';\n                    await (0,_sync__WEBPACK_IMPORTED_MODULE_6__.resyncStateOnHistoryChange)(isFullSync);\n                    actionsTaken.resync = true;\n                    // 在同步完成后，强制重新渲染消息以触发宏\n                    (0,_force_macro_render__WEBPACK_IMPORTED_MODULE_3__.forceRenderRecentMessages)();\n                }\n                else if (eventGroup === 'API') {\n                    // API 事件是“即发即忘”的，同步调用处理器将任务推入 api.ts 的队列后立即返回，不阻塞事件队列。\n                    if (eventType === _constants__WEBPACK_IMPORTED_MODULE_2__.ERA_API_EVENTS.INSERT_BY_OBJECT)\n                        (0,_api__WEBPACK_IMPORTED_MODULE_1__.insertByObject)(detail);\n                    else if (eventType === _constants__WEBPACK_IMPORTED_MODULE_2__.ERA_API_EVENTS.UPDATE_BY_OBJECT)\n                        (0,_api__WEBPACK_IMPORTED_MODULE_1__.updateByObject)(detail);\n                    else if (eventType === _constants__WEBPACK_IMPORTED_MODULE_2__.ERA_API_EVENTS.INSERT_BY_PATH)\n                        (0,_api__WEBPACK_IMPORTED_MODULE_1__.insertByPath)(detail.path, detail.value);\n                    else if (eventType === _constants__WEBPACK_IMPORTED_MODULE_2__.ERA_API_EVENTS.UPDATE_BY_PATH)\n                        (0,_api__WEBPACK_IMPORTED_MODULE_1__.updateByPath)(detail.path, detail.value);\n                    else if (eventType === _constants__WEBPACK_IMPORTED_MODULE_2__.ERA_API_EVENTS.DELETE_BY_OBJECT)\n                        (0,_api__WEBPACK_IMPORTED_MODULE_1__.deleteByObject)(detail);\n                    else if (eventType === _constants__WEBPACK_IMPORTED_MODULE_2__.ERA_API_EVENTS.DELETE_BY_PATH)\n                        (0,_api__WEBPACK_IMPORTED_MODULE_1__.deleteByPath)(detail.path);\n                }\n                else if (eventGroup === 'UPDATE_MK_ONLY') {\n                    // 监听此事件仅用于为用户消息创建 MK。\n                    await (0,_message_key__WEBPACK_IMPORTED_MODULE_4__.updateLatestSelectedMk)();\n                }\n            }\n            catch (error) {\n                logger.error('processQueue', `事件 ${eventType} 处理异常: ${error}`, error);\n            }\n            finally {\n                // 仅当本轮处理中实际执行了 ERA 核心操作时，才校准并广播事件\n                // --- 3. 触发写入完成事件 ---\n                if (actionsTaken.rollback || actionsTaken.apply || actionsTaken.resync) {\n                    // **后置保障**: 强制校准 `SelectedMks` 的最新记录。\n                    await (0,_message_key__WEBPACK_IMPORTED_MODULE_4__.updateLatestSelectedMk)();\n                    // 在所有操作（包括校准）完成后，获取最新状态并广播事件\n                    if (_utils__WEBPACK_IMPORTED_MODULE_7__.logContext.mk && message_id !== null) {\n                        const { meta: metaData, stat: statData } = (0,_utils__WEBPACK_IMPORTED_MODULE_7__.getEraData)();\n                        const selectedMks = lodash__WEBPACK_IMPORTED_MODULE_0___default().get(metaData, _constants__WEBPACK_IMPORTED_MODULE_2__.SEL_PATH, []);\n                        const editLogs = lodash__WEBPACK_IMPORTED_MODULE_0___default().get(metaData, _constants__WEBPACK_IMPORTED_MODULE_2__.LOGS_PATH, {});\n                        const statWithoutMeta = (0,_utils__WEBPACK_IMPORTED_MODULE_7__.removeMetaFields)(statData);\n                        (0,_api__WEBPACK_IMPORTED_MODULE_1__.emitWriteDoneEvent)({\n                            mk: _utils__WEBPACK_IMPORTED_MODULE_7__.logContext.mk,\n                            message_id: message_id,\n                            actions: actionsTaken,\n                            selectedMks: selectedMks,\n                            editLogs: editLogs,\n                            stat: statData,\n                            statWithoutMeta: statWithoutMeta,\n                        });\n                    }\n                }\n                // 清理日志上下文，为下一个事件做准备\n                _utils__WEBPACK_IMPORTED_MODULE_7__.logContext.mk = '';\n                // **节流**: 在每个独立任务后都进行短暂等待，确保酒馆底层有时间完成其异步操作。\n                await new Promise(resolve => setTimeout(resolve, 50));\n            }\n        }\n        logger.debug('processQueue', '本轮批次处理完毕。');\n    }\n    // 队列处理完毕，释放锁，等待下一次事件入队。\n    isProcessing = false;\n    logger.log('processQueue', '处理器空闲，已释放锁。');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/event_queue.ts\n\n}");
  },
  "./src/ERA变量框架/force_macro_render.ts": 
  /*!*******************************************!*\
  !*** ./src/ERA变量框架/force_macro_render.ts ***!
  \*******************************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   forceRenderRecentMessages: () => (/* binding */ forceRenderRecentMessages)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ \"lodash\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/ERA变量框架/utils.ts\");\n/**\n * @file 强制宏渲染模块\n * @description 通过模拟用户UI操作, 强制酒馆重新渲染消息, 以触发完整的宏替换管线。\n */\n\n\nconst log = new _utils__WEBPACK_IMPORTED_MODULE_1__.Logger('force_macro_render');\n/**\n * 强制重新渲染单条消息。\n * @param messageId 要强制渲染的消息ID。\n * @returns 一个 Promise, 在模拟点击完成后 resolve。\n */\nfunction forceRenderMessage(messageId) {\n    return new Promise(resolve => {\n        const messageSelector = `div.mes[mesid=\"${messageId}\"]`;\n        const $message = $(messageSelector);\n        // 模拟点击“编辑”\n        $message.find('.mes_button.mes_edit').trigger('click');\n        // 给予UI响应时间, 然后模拟点击“确认”\n        setTimeout(() => {\n            $message.find('.mes_edit_done.menu_button').trigger('click');\n            resolve();\n        }, 50);\n    });\n}\n/**\n * 强制重新渲染最近的N条消息, 以确保宏被正确替换。\n * 是否执行以及渲染的数量由脚本变量控制。\n */\nasync function forceRenderRecentMessages() {\n    const scriptVars = getVariables({ type: 'script', script_id: getScriptId() });\n    // 检查是否启用了强制重载功能\n    const forceReload = lodash__WEBPACK_IMPORTED_MODULE_0___default().get(scriptVars, '强制重载功能', false);\n    if (!forceReload) {\n        log.debug('forceRenderRecentMessages', '强制重载功能未启用, 跳过。');\n        return; // 如果未启用，则不执行任何操作\n    }\n    // 获取要重载的消息数量，默认为1\n    const messageCount = lodash__WEBPACK_IMPORTED_MODULE_0___default().get(scriptVars, '强制重载消息数', 1);\n    log.log('forceRenderRecentMessages', `开始强制重载, 数量: ${messageCount}`);\n    // 等待一小段时间, 确保变量更新已经完成\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    const allMessages = getChatMessages('0-{{lastMessageId}}');\n    if (!allMessages || allMessages.length === 0) {\n        log.warn('forceRenderRecentMessages', '无法获取到任何消息, 终止重载。');\n        return;\n    }\n    // 根据脚本变量设置的数量来截取最近的消息\n    const recentMessages = allMessages.slice(-messageCount);\n    for (const message of recentMessages) {\n        log.debug('forceRenderRecentMessages', `正在强制渲染消息: ${message.message_id}`);\n        await forceRenderMessage(message.message_id);\n        // 在每次操作之间短暂暂停, 避免操作过快导致UI问题。\n        await new Promise(resolve => setTimeout(resolve, 100));\n    }\n    log.log('forceRenderRecentMessages', '强制重载完成。');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvRVJB5Y+Y6YeP5qGG5p62L2ZvcmNlX21hY3JvX3JlbmRlci50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7OztHQUdHO0FBRW9CO0FBQ1U7QUFFakMsTUFBTSxHQUFHLEdBQUcsSUFBSSwwQ0FBTSxDQUFDLG9CQUFvQixDQUFDLENBQUM7QUFFN0M7Ozs7R0FJRztBQUNILFNBQVMsa0JBQWtCLENBQUMsU0FBaUI7SUFDM0MsT0FBTyxJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtRQUMzQixNQUFNLGVBQWUsR0FBRyxrQkFBa0IsU0FBUyxJQUFJLENBQUM7UUFDeEQsTUFBTSxRQUFRLEdBQUcsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBRXBDLFdBQVc7UUFDWCxRQUFRLENBQUMsSUFBSSxDQUFDLHNCQUFzQixDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRXZELHVCQUF1QjtRQUN2QixVQUFVLENBQUMsR0FBRyxFQUFFO1lBQ2QsUUFBUSxDQUFDLElBQUksQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUM3RCxPQUFPLEVBQUUsQ0FBQztRQUNaLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNULENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQUVEOzs7R0FHRztBQUNJLEtBQUssVUFBVSx5QkFBeUI7SUFDN0MsTUFBTSxVQUFVLEdBQUcsWUFBWSxDQUFDLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBRTlFLGdCQUFnQjtJQUNoQixNQUFNLFdBQVcsR0FBRyxpREFBSyxDQUFDLFVBQVUsRUFBRSxRQUFRLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDdkQsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ2pCLEdBQUcsQ0FBQyxLQUFLLENBQUMsMkJBQTJCLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztRQUN6RCxPQUFPLENBQUMsaUJBQWlCO0lBQzNCLENBQUM7SUFFRCxrQkFBa0I7SUFDbEIsTUFBTSxZQUFZLEdBQUcsaURBQUssQ0FBQyxVQUFVLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3JELEdBQUcsQ0FBQyxHQUFHLENBQUMsMkJBQTJCLEVBQUUsZUFBZSxZQUFZLEVBQUUsQ0FBQyxDQUFDO0lBRXBFLHNCQUFzQjtJQUN0QixNQUFNLElBQUksT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBRXhELE1BQU0sV0FBVyxHQUFHLGVBQWUsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0lBQzNELElBQUksQ0FBQyxXQUFXLElBQUksV0FBVyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUUsQ0FBQztRQUM3QyxHQUFHLENBQUMsSUFBSSxDQUFDLDJCQUEyQixFQUFFLGtCQUFrQixDQUFDLENBQUM7UUFDMUQsT0FBTztJQUNULENBQUM7SUFFRCxzQkFBc0I7SUFDdEIsTUFBTSxjQUFjLEdBQUcsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBRXhELEtBQUssTUFBTSxPQUFPLElBQUksY0FBYyxFQUFFLENBQUM7UUFDckMsR0FBRyxDQUFDLEtBQUssQ0FBQywyQkFBMkIsRUFBRSxhQUFhLE9BQU8sQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDO1FBQzFFLE1BQU0sa0JBQWtCLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQzdDLDZCQUE2QjtRQUM3QixNQUFNLElBQUksT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ3pELENBQUM7SUFDRCxHQUFHLENBQUMsR0FBRyxDQUFDLDJCQUEyQixFQUFFLFNBQVMsQ0FBQyxDQUFDO0FBQ2xELENBQUMiLCJzb3VyY2VzIjpbInNyYzovL3RhdmVybl9oZWxwZXJfdGVtcGxhdGUvc3JjL0VSQeWPmOmHj+ahhuaeti9mb3JjZV9tYWNyb19yZW5kZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZSDlvLrliLblro/muLLmn5PmqKHlnZdcbiAqIEBkZXNjcmlwdGlvbiDpgJrov4fmqKHmi5/nlKjmiLdVSeaTjeS9nCwg5by65Yi26YWS6aaG6YeN5paw5riy5p+T5raI5oGvLCDku6Xop6blj5HlrozmlbTnmoTlro/mm7/mjaLnrqHnur/jgIJcbiAqL1xuXG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgTG9nZ2VyIH0gZnJvbSAnLi91dGlscyc7XG5cbmNvbnN0IGxvZyA9IG5ldyBMb2dnZXIoJ2ZvcmNlX21hY3JvX3JlbmRlcicpO1xuXG4vKipcbiAqIOW8uuWItumHjeaWsOa4suafk+WNleadoea2iOaBr+OAglxuICogQHBhcmFtIG1lc3NhZ2VJZCDopoHlvLrliLbmuLLmn5PnmoTmtojmga9JROOAglxuICogQHJldHVybnMg5LiA5LiqIFByb21pc2UsIOWcqOaooeaLn+eCueWHu+WujOaIkOWQjiByZXNvbHZl44CCXG4gKi9cbmZ1bmN0aW9uIGZvcmNlUmVuZGVyTWVzc2FnZShtZXNzYWdlSWQ6IG51bWJlcik6IFByb21pc2U8dm9pZD4ge1xuICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgY29uc3QgbWVzc2FnZVNlbGVjdG9yID0gYGRpdi5tZXNbbWVzaWQ9XCIke21lc3NhZ2VJZH1cIl1gO1xuICAgIGNvbnN0ICRtZXNzYWdlID0gJChtZXNzYWdlU2VsZWN0b3IpO1xuXG4gICAgLy8g5qih5ouf54K55Ye74oCc57yW6L6R4oCdXG4gICAgJG1lc3NhZ2UuZmluZCgnLm1lc19idXR0b24ubWVzX2VkaXQnKS50cmlnZ2VyKCdjbGljaycpO1xuXG4gICAgLy8g57uZ5LqIVUnlk43lupTml7bpl7QsIOeEtuWQjuaooeaLn+eCueWHu+KAnOehruiupOKAnVxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgJG1lc3NhZ2UuZmluZCgnLm1lc19lZGl0X2RvbmUubWVudV9idXR0b24nKS50cmlnZ2VyKCdjbGljaycpO1xuICAgICAgcmVzb2x2ZSgpO1xuICAgIH0sIDUwKTtcbiAgfSk7XG59XG5cbi8qKlxuICog5by65Yi26YeN5paw5riy5p+T5pyA6L+R55qETuadoea2iOaBrywg5Lul56Gu5L+d5a6P6KKr5q2j56Gu5pu/5o2i44CCXG4gKiDmmK/lkKbmiafooYzku6Xlj4rmuLLmn5PnmoTmlbDph4/nlLHohJrmnKzlj5jph4/mjqfliLbjgIJcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGZvcmNlUmVuZGVyUmVjZW50TWVzc2FnZXMoKSB7XG4gIGNvbnN0IHNjcmlwdFZhcnMgPSBnZXRWYXJpYWJsZXMoeyB0eXBlOiAnc2NyaXB0Jywgc2NyaXB0X2lkOiBnZXRTY3JpcHRJZCgpIH0pO1xuXG4gIC8vIOajgOafpeaYr+WQpuWQr+eUqOS6huW8uuWItumHjei9veWKn+iDvVxuICBjb25zdCBmb3JjZVJlbG9hZCA9IF8uZ2V0KHNjcmlwdFZhcnMsICflvLrliLbph43ovb3lip/og70nLCBmYWxzZSk7XG4gIGlmICghZm9yY2VSZWxvYWQpIHtcbiAgICBsb2cuZGVidWcoJ2ZvcmNlUmVuZGVyUmVjZW50TWVzc2FnZXMnLCAn5by65Yi26YeN6L295Yqf6IO95pyq5ZCv55SoLCDot7Pov4fjgIInKTtcbiAgICByZXR1cm47IC8vIOWmguaenOacquWQr+eUqO+8jOWImeS4jeaJp+ihjOS7u+S9leaTjeS9nFxuICB9XG5cbiAgLy8g6I635Y+W6KaB6YeN6L2955qE5raI5oGv5pWw6YeP77yM6buY6K6k5Li6MVxuICBjb25zdCBtZXNzYWdlQ291bnQgPSBfLmdldChzY3JpcHRWYXJzLCAn5by65Yi26YeN6L295raI5oGv5pWwJywgMSk7XG4gIGxvZy5sb2coJ2ZvcmNlUmVuZGVyUmVjZW50TWVzc2FnZXMnLCBg5byA5aeL5by65Yi26YeN6L29LCDmlbDph486ICR7bWVzc2FnZUNvdW50fWApO1xuXG4gIC8vIOetieW+heS4gOWwj+auteaXtumXtCwg56Gu5L+d5Y+Y6YeP5pu05paw5bey57uP5a6M5oiQXG4gIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCAxMDAwKSk7XG5cbiAgY29uc3QgYWxsTWVzc2FnZXMgPSBnZXRDaGF0TWVzc2FnZXMoJzAte3tsYXN0TWVzc2FnZUlkfX0nKTtcbiAgaWYgKCFhbGxNZXNzYWdlcyB8fCBhbGxNZXNzYWdlcy5sZW5ndGggPT09IDApIHtcbiAgICBsb2cud2FybignZm9yY2VSZW5kZXJSZWNlbnRNZXNzYWdlcycsICfml6Dms5Xojrflj5bliLDku7vkvZXmtojmga8sIOe7iOatoumHjei9veOAgicpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIOagueaNruiEmuacrOWPmOmHj+iuvue9rueahOaVsOmHj+adpeaIquWPluacgOi/keeahOa2iOaBr1xuICBjb25zdCByZWNlbnRNZXNzYWdlcyA9IGFsbE1lc3NhZ2VzLnNsaWNlKC1tZXNzYWdlQ291bnQpO1xuXG4gIGZvciAoY29uc3QgbWVzc2FnZSBvZiByZWNlbnRNZXNzYWdlcykge1xuICAgIGxvZy5kZWJ1ZygnZm9yY2VSZW5kZXJSZWNlbnRNZXNzYWdlcycsIGDmraPlnKjlvLrliLbmuLLmn5Pmtojmga86ICR7bWVzc2FnZS5tZXNzYWdlX2lkfWApO1xuICAgIGF3YWl0IGZvcmNlUmVuZGVyTWVzc2FnZShtZXNzYWdlLm1lc3NhZ2VfaWQpO1xuICAgIC8vIOWcqOavj+asoeaTjeS9nOS5i+mXtOefreaaguaaguWBnCwg6YG/5YWN5pON5L2c6L+H5b+r5a+86Ie0VUnpl67popjjgIJcbiAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMTAwKSk7XG4gIH1cbiAgbG9nLmxvZygnZm9yY2VSZW5kZXJSZWNlbnRNZXNzYWdlcycsICflvLrliLbph43ovb3lrozmiJDjgIInKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/ERA变量框架/force_macro_render.ts\n\n}");
  },
  "./src/ERA变量框架/index.ts": 
  /*!******************************!*\
  !*** ./src/ERA变量框架/index.ts ***!
  \******************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/ERA变量框架/constants.ts\");\n/* harmony import */ var _event_queue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./event_queue */ \"./src/ERA变量框架/event_queue.ts\");\n/* harmony import */ var _query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./query */ \"./src/ERA变量框架/query.ts\");\n/**\n * @file ERA 变量框架 - 主入口与事件监听模块\n * @description\n * 该文件是整个 ERA 变量框架的起点。它的职责非常清晰和专一：\n * 1. **定义监听范围**: 声明框架所关心的所有事件类型。\n * 2. **注册监听器**: 为上述所有事件注册监听器。\n * 3. **统一派发**: 当任何一个被监听的事件触发时，它不进行任何逻辑处理，\n *    而是立即将该事件（包括事件类型和附带数据）原封不动地推入到 `event_queue.ts`\n *    中的事件处理队列中。\n *\n * 这种设计体现了良好的**关注点分离**原则：`index.ts` 只负责“听”，而 `event_queue.ts`\n * 负责“思考”和“行动”。这使得事件的来源和处理逻辑完全解耦，非常清晰且易于维护。\n */\n\n\n\n// 导入查询模块, 以注册 {{ERA:...}} 宏\n\n// ===============================\n// 事件监听器注册\n// ===============================\n/**\n * @const {string[]} eventsToListen\n * @description 定义了所有需要被 ERA 框架监听的事件。\n */\nconst eventsToListen = [\n    ..._constants__WEBPACK_IMPORTED_MODULE_0__.EVENT_GROUPS.WRITE,\n    ..._constants__WEBPACK_IMPORTED_MODULE_0__.EVENT_GROUPS.SYNC,\n    ..._constants__WEBPACK_IMPORTED_MODULE_0__.EVENT_GROUPS.API,\n    ..._constants__WEBPACK_IMPORTED_MODULE_0__.EVENT_GROUPS.UPDATE_MK_ONLY,\n    ..._constants__WEBPACK_IMPORTED_MODULE_0__.EVENT_GROUPS.COLLISION_DETECTORS,\n];\n// 遍历事件列表，为每个事件注册一个回调函数。\n// 这个回调函数是所有事件的统一入口。\neventsToListen.forEach(ev => {\n    // `eventOn` 是酒馆助手提供的全局函数，用于注册事件监听。\n    // 当事件 `ev` 触发时，回调函数被调用，并将事件类型 `ev` 和事件详情 `detail` 推入队列。\n    eventOn(ev, (detail) => (0,_event_queue__WEBPACK_IMPORTED_MODULE_1__.pushToQueue)(ev, detail));\n});\n// 为酒馆助手脚本界面中的手动按钮注册监听器。\n// 点击按钮时，同样是向队列中推入一个特定类型的事件。\neventOn(getButtonEvent('写入变量修改'), () => (0,_event_queue__WEBPACK_IMPORTED_MODULE_1__.pushToQueue)('manual_write'));\neventOn(getButtonEvent('手动同步状态'), () => (0,_event_queue__WEBPACK_IMPORTED_MODULE_1__.pushToQueue)('manual_sync'));\neventOn(getButtonEvent('强制完全重算'), () => (0,_event_queue__WEBPACK_IMPORTED_MODULE_1__.pushToQueue)('manual_full_sync'));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvRVJB5Y+Y6YeP5qGG5p62L2luZGV4LnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7Ozs7Ozs7O0dBWUc7QUFFVTtBQUU4QjtBQUNDO0FBRTVDLDRCQUE0QjtBQUNYO0FBRWpCLGtDQUFrQztBQUNsQyxVQUFVO0FBQ1Ysa0NBQWtDO0FBRWxDOzs7R0FHRztBQUNILE1BQU0sY0FBYyxHQUFHO0lBQ3JCLEdBQUcsb0RBQVksQ0FBQyxLQUFLO0lBQ3JCLEdBQUcsb0RBQVksQ0FBQyxJQUFJO0lBQ3BCLEdBQUcsb0RBQVksQ0FBQyxHQUFHO0lBQ25CLEdBQUcsb0RBQVksQ0FBQyxjQUFjO0lBQzlCLEdBQUcsb0RBQVksQ0FBQyxtQkFBbUI7Q0FDcEMsQ0FBQztBQUVGLHdCQUF3QjtBQUN4QixvQkFBb0I7QUFDcEIsY0FBYyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUMxQixtQ0FBbUM7SUFDbkMsd0RBQXdEO0lBQ3hELE9BQU8sQ0FBQyxFQUFFLEVBQUUsQ0FBQyxNQUFXLEVBQUUsRUFBRSxDQUFDLHlEQUFXLENBQUMsRUFBRSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUM7QUFDeEQsQ0FBQyxDQUFDLENBQUM7QUFFSCx3QkFBd0I7QUFDeEIsNEJBQTRCO0FBQzVCLE9BQU8sQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMseURBQVcsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO0FBQ3JFLE9BQU8sQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMseURBQVcsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO0FBQ3BFLE9BQU8sQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMseURBQVcsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzIjpbInNyYzovL3RhdmVybl9oZWxwZXJfdGVtcGxhdGUvc3JjL0VSQeWPmOmHj+ahhuaeti9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlIEVSQSDlj5jph4/moYbmnrYgLSDkuLvlhaXlj6PkuI7kuovku7bnm5HlkKzmqKHlnZdcbiAqIEBkZXNjcmlwdGlvblxuICog6K+l5paH5Lu25piv5pW05LiqIEVSQSDlj5jph4/moYbmnrbnmoTotbfngrnjgILlroPnmoTogYzotKPpnZ7luLjmuIXmmbDlkozkuJPkuIDvvJpcbiAqIDEuICoq5a6a5LmJ55uR5ZCs6IyD5Zu0Kio6IOWjsOaYjuahhuaetuaJgOWFs+W/g+eahOaJgOacieS6i+S7tuexu+Wei+OAglxuICogMi4gKirms6jlhoznm5HlkKzlmagqKjog5Li65LiK6L+w5omA5pyJ5LqL5Lu25rOo5YaM55uR5ZCs5Zmo44CCXG4gKiAzLiAqKue7n+S4gOa0vuWPkSoqOiDlvZPku7vkvZXkuIDkuKrooqvnm5HlkKznmoTkuovku7bop6blj5Hml7bvvIzlroPkuI3ov5vooYzku7vkvZXpgLvovpHlpITnkIbvvIxcbiAqICAgIOiAjOaYr+eri+WNs+WwhuivpeS6i+S7tu+8iOWMheaLrOS6i+S7tuexu+Wei+WSjOmZhOW4puaVsOaNru+8ieWOn+WwgeS4jeWKqOWcsOaOqOWFpeWIsCBgZXZlbnRfcXVldWUudHNgXG4gKiAgICDkuK3nmoTkuovku7blpITnkIbpmJ/liJfkuK3jgIJcbiAqXG4gKiDov5nnp43orr7orqHkvZPnjrDkuoboia/lpb3nmoQqKuWFs+azqOeCueWIhuemuyoq5Y6f5YiZ77yaYGluZGV4LnRzYCDlj6rotJ/otKPigJzlkKzigJ3vvIzogIwgYGV2ZW50X3F1ZXVlLnRzYFxuICog6LSf6LSj4oCc5oCd6ICD4oCd5ZKM4oCc6KGM5Yqo4oCd44CC6L+Z5L2/5b6X5LqL5Lu255qE5p2l5rqQ5ZKM5aSE55CG6YC76L6R5a6M5YWo6Kej6ICm77yM6Z2e5bi45riF5pmw5LiU5piT5LqO57u05oqk44CCXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgeyBFVkVOVF9HUk9VUFMgfSBmcm9tICcuL2NvbnN0YW50cyc7XG5pbXBvcnQgeyBwdXNoVG9RdWV1ZSB9IGZyb20gJy4vZXZlbnRfcXVldWUnO1xuXG4vLyDlr7zlhaXmn6Xor6LmqKHlnZcsIOS7peazqOWGjCB7e0VSQTouLi59fSDlro9cbmltcG9ydCAnLi9xdWVyeSc7XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIOS6i+S7tuebkeWQrOWZqOazqOWGjFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vKipcbiAqIEBjb25zdCB7c3RyaW5nW119IGV2ZW50c1RvTGlzdGVuXG4gKiBAZGVzY3JpcHRpb24g5a6a5LmJ5LqG5omA5pyJ6ZyA6KaB6KKrIEVSQSDmoYbmnrbnm5HlkKznmoTkuovku7bjgIJcbiAqL1xuY29uc3QgZXZlbnRzVG9MaXN0ZW4gPSBbXG4gIC4uLkVWRU5UX0dST1VQUy5XUklURSxcbiAgLi4uRVZFTlRfR1JPVVBTLlNZTkMsXG4gIC4uLkVWRU5UX0dST1VQUy5BUEksXG4gIC4uLkVWRU5UX0dST1VQUy5VUERBVEVfTUtfT05MWSxcbiAgLi4uRVZFTlRfR1JPVVBTLkNPTExJU0lPTl9ERVRFQ1RPUlMsXG5dO1xuXG4vLyDpgY3ljobkuovku7bliJfooajvvIzkuLrmr4/kuKrkuovku7bms6jlhozkuIDkuKrlm57osIPlh73mlbDjgIJcbi8vIOi/meS4quWbnuiwg+WHveaVsOaYr+aJgOacieS6i+S7tueahOe7n+S4gOWFpeWPo+OAglxuZXZlbnRzVG9MaXN0ZW4uZm9yRWFjaChldiA9PiB7XG4gIC8vIGBldmVudE9uYCDmmK/phZLppobliqnmiYvmj5DkvpvnmoTlhajlsYDlh73mlbDvvIznlKjkuo7ms6jlhozkuovku7bnm5HlkKzjgIJcbiAgLy8g5b2T5LqL5Lu2IGBldmAg6Kem5Y+R5pe277yM5Zue6LCD5Ye95pWw6KKr6LCD55So77yM5bm25bCG5LqL5Lu257G75Z6LIGBldmAg5ZKM5LqL5Lu26K+m5oOFIGBkZXRhaWxgIOaOqOWFpemYn+WIl+OAglxuICBldmVudE9uKGV2LCAoZGV0YWlsOiBhbnkpID0+IHB1c2hUb1F1ZXVlKGV2LCBkZXRhaWwpKTtcbn0pO1xuXG4vLyDkuLrphZLppobliqnmiYvohJrmnKznlYzpnaLkuK3nmoTmiYvliqjmjInpkq7ms6jlhoznm5HlkKzlmajjgIJcbi8vIOeCueWHu+aMiemSruaXtu+8jOWQjOagt+aYr+WQkemYn+WIl+S4reaOqOWFpeS4gOS4queJueWumuexu+Wei+eahOS6i+S7tuOAglxuZXZlbnRPbihnZXRCdXR0b25FdmVudCgn5YaZ5YWl5Y+Y6YeP5L+u5pS5JyksICgpID0+IHB1c2hUb1F1ZXVlKCdtYW51YWxfd3JpdGUnKSk7XG5ldmVudE9uKGdldEJ1dHRvbkV2ZW50KCfmiYvliqjlkIzmraXnirbmgIEnKSwgKCkgPT4gcHVzaFRvUXVldWUoJ21hbnVhbF9zeW5jJykpO1xuZXZlbnRPbihnZXRCdXR0b25FdmVudCgn5by65Yi25a6M5YWo6YeN566XJyksICgpID0+IHB1c2hUb1F1ZXVlKCdtYW51YWxfZnVsbF9zeW5jJykpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/ERA变量框架/index.ts\n\n}");
  },
  "./src/ERA变量框架/insert.ts": 
  /*!*******************************!*\
  !*** ./src/ERA变量框架/insert.ts ***!
  \*******************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyInsertAtLevel: () => (/* binding */ applyInsertAtLevel),\n/* harmony export */   processInsertBlocks: () => (/* binding */ processInsertBlocks)\n/* harmony export */ });\n/* harmony import */ var _template__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./template */ \"./src/ERA变量框架/template.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/ERA变量框架/utils.ts\");\n/**\n * @file ERA 变量框架 - 变量插入模块\n * @description\n * 该模块负责处理 `<VariableInsert>` 指令，实现变量的非破坏性插入，并生成相应的 `EditLog`。\n *\n * **设计理念**:\n * - **职责单一**: 模块只关心如何根据指令修改变量状态并生成日志，不关心指令从何而来。\n * - **原子性操作**: `applyInsertAtLevel` 实现了原子性的插入，确保了数据结构的完整性。\n *   如果一个基础路径不存在，它会将整个对象作为一整个单元一次性插入。\n * - **容错性**: 当遇到无效路径（如尝试向已存在的路径插入）时，会跳过该条指令并继续处理其他有效指令，\n *   而不是中断整个写入过程。\n */\n\n\n\nconst logger = new _utils__WEBPACK_IMPORTED_MODULE_1__.Logger('insert');\n/**\n * **【递归插入】**\n * 实现了 `<VariableInsert>` 的核心逻辑：**非破坏性地**递归插入值。\n *\n * **核心规则**:\n * 1. **只在路径不存在时写入**。如果路径已存在，则跳过该路径的写入。\n * 2. **原子性插入**。如果一个基础路径（如 `player.inventory`）不存在，它会将整个 `inventory`\n *    对象作为一整个单元一次性插入，并只记录一条 `insert` 日志。\n * 3. **递归补充**。如果基础路径已存在，它会递归地深入，尝试在其下补充插入新的子路径。\n * 4. **模板支持**。支持从 `$template` 中继承模板，实现数据结构的复用。\n *\n * @param {any} statData - 状态数据对象 (即 `stat_data`)。\n * @param {string} basePath - 当前递归层级的基础路径。\n * @param {any} patchObj - 从指令中解析出的、要应用于当前层级的补丁对象。\n * @param {any[]} editLog - 用于收集变更记录的日志数组（引用传递）。\n * @param {any} inheritedContent - 从上层继承的、纯粹的模板“内容”对象。\n * @param {any} parentData - 当前节点的父节点在 `statData` 中的数据。\n */\nfunction applyInsertAtLevel(statData, basePath, patchObj, editLog, inheritedContent, parentData) {\n    // --- 1. 确定当前层级的模板内容 ---\n    // 调用 resolveTemplate，它现在直接使用传入的 parentData\n    const localTplContent = (0,_template__WEBPACK_IMPORTED_MODULE_0__.resolveTemplate)(inheritedContent, parentData);\n    logger.debug('applyInsertAtLevel', `[入口] basePath: \"${basePath || 'root'}\"`, {\n        statData: _.cloneDeep(statData),\n    });\n    // --- 2. 检查路径存在性，决定执行策略 ---\n    const currentNodeInVars = basePath ? _.get(statData, basePath) : statData;\n    logger.debug('applyInsertAtLevel', `[路径检查] at path: \"${basePath || 'root'}\". currentNodeInVars 的值:`, currentNodeInVars);\n    // **策略一：原子性插入 (Atomic Insert)**\n    // 如果当前路径在变量中不存在，则将整个补丁对象作为新值一次性插入。\n    if (basePath && currentNodeInVars === undefined) {\n        // 调用 applyTemplateToPatch 函数，将合并后的模板内容应用到补丁上\n        const composed = (0,_template__WEBPACK_IMPORTED_MODULE_0__.applyTemplateToPatch)(localTplContent, patchObj);\n        const finalValue = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.sanitizeArrays)(composed); // 清理数组中的 null 等无效值。\n        logger.debug('applyInsertAtLevel', `最终插入数据 at ${basePath}:\\n${JSON.stringify(finalValue, null, 2)}`);\n        _.set(statData, basePath, finalValue); // 执行插入。\n        editLog.push({ op: 'insert', path: basePath, value_new: _.cloneDeep(finalValue) });\n        logger.debug('applyInsertAtLevel', `原子性插入到新路径: ${basePath}`);\n        return; // 插入完成，终止递归。\n    }\n    // **策略二：递归补充 (Recursive Supplement)**\n    // 如果当前路径已存在，并且补丁和当前值都是对象，则深入递归。\n    if (_.isPlainObject(currentNodeInVars) && _.isPlainObject(patchObj)) {\n        logger.debug('applyInsertAtLevel', `[递归补充] at path: \"${basePath || 'root'}\"\n      - 当前层级模板 (localTplContent): ${JSON.stringify(localTplContent)}`);\n        for (const key of Object.keys(patchObj)) {\n            const subPath = basePath ? `${basePath}.${key}` : key;\n            const subPatch = patchObj[key];\n            // 调用 getInheritedTemplateContent，从当前模板内容中为子节点查找其应继承的内容\n            const subInheritedContent = (0,_template__WEBPACK_IMPORTED_MODULE_0__.getInheritedTemplateContent)(localTplContent, key);\n            logger.debug('applyInsertAtLevel', `  - 准备递归子节点: \"${key}\"\n      - 将传递给子节点的模板 (subInheritedContent): ${JSON.stringify(subInheritedContent)}`);\n            // 将当前节点数据 currentNodeInVars 作为下一层的 parentData 传递下去\n            applyInsertAtLevel(statData, subPath, subPatch, editLog, subInheritedContent, currentNodeInVars);\n        }\n    }\n    else if (basePath) {\n        // **插入失败**\n        // 如果路径已存在，但不是可递归补充的对象结构（例如，一个是对象，另一个是字符串），\n        // 则记录警告。insert 不会覆盖已存在的值。\n        logger.warn('applyInsertAtLevel', `VariableInsert 失败：路径已存在且无法递归补充 -> ${basePath}`);\n    }\n    // 如果 basePath 为空（在根级别）且 patch 不是对象，则不执行任何操作，因为根不能被非对象替换。\n}\n/**\n * 处理所有 `<VariableInsert>` 指令块。\n *\n * @param {any[]} allInserts - 从消息中解析出的所有 insert 指令对象。\n * @param {any[]} editLog - 用于收集变更记录的日志数组。\n */\nasync function processInsertBlocks(allInserts, editLog) {\n    if (allInserts.length > 0) {\n        await (0,_utils__WEBPACK_IMPORTED_MODULE_1__.updateEraStatData)(async (stat) => {\n            logger.debug('processInsertBlocks', '[初始状态] 进入 processInsertBlocks 时的 statData:', _.cloneDeep(stat));\n            return stat;\n        });\n        /*\n         * N.B. 必须对每个 insertRoot 单独调用 updateVariablesWith，而不是将所有操作合并到一次调用中。\n         * 这是为了确保在同一条消息内，前一个 <VariableInsert> 块中插入的模板或数据，\n         * 可以被后一个 <VariableInsert> 或 <VariableEdit> 块访问和使用。\n         * 每次 await updateVariablesWith 完成后，变量状态都会被刷新，从而使后续操作能看到最新的结果。\n         */\n        for (const insertRoot of allInserts) {\n            if (!_.isPlainObject(insertRoot) || _.isEmpty(insertRoot))\n                continue;\n            try {\n                await (0,_utils__WEBPACK_IMPORTED_MODULE_1__.updateEraStatData)(stat => {\n                    logger.debug('processInsertBlocks', `处理 insertRoot: ${JSON.stringify(insertRoot)}`);\n                    // 从根路径 '' 开始统一递归入口，顶层调用时，父节点为 null\n                    applyInsertAtLevel(stat, '', insertRoot, editLog, null, null);\n                    return stat;\n                });\n            }\n            catch (e) {\n                logger.error('processInsertBlocks', `处理 insertRoot 失败: ${e?.message || e}`, e);\n            }\n        }\n        logger.log('processInsertBlocks', '所有 VariableInsert 操作完成');\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/insert.ts\n\n}");
  },
  "./src/ERA变量框架/message_key.ts": 
  /*!************************************!*\
  !*** ./src/ERA变量框架/message_key.ts ***!
  \************************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ensureMessageKey: () => (/* binding */ ensureMessageKey),\n/* harmony export */   ensureMkForLatestMessage: () => (/* binding */ ensureMkForLatestMessage),\n/* harmony export */   readMessageKey: () => (/* binding */ readMessageKey),\n/* harmony export */   updateLatestSelectedMk: () => (/* binding */ updateLatestSelectedMk)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/ERA变量框架/constants.ts\");\n/* harmony import */ var _message_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./message_utils */ \"./src/ERA变量框架/message_utils.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"./src/ERA变量框架/utils.ts\");\n/**\n * @file ERA 变量框架 - 消息密钥 (MK) 管理模块\n * @description\n * 这个模块是 ERA 框架的基石，负责管理“消息密钥”（Message Key, MK）。\n *\n * **设计理念**:\n * ERA 的核心优势在于其鲁棒性，它通过将变量状态与 SillyTavern 不稳定的消息变量（message variables）\n * 解耦来实现这一点。MK 正是实现解耦的关键。\n *\n * MK 是一个由 **ERA 框架自身** 动态生成并**注入到消息内容字符串顶部**的唯一标识符。\n * 它就像一个不可变的“锚点”，随消息内容本身一起存在。ERA 的所有核心逻辑，包括变量追踪、\n * 回滚和同步，都围绕着识别和操作这些锚点来进行，而不是依赖于可能发生错位或被错误继承的消息变量。\n *\n * **MK 格式**:\n * MK 被包裹在一个独特的、类似 XML 的 `<era_data>` 标签中，其内部是一种**非标准**的类 JSON 格式，\n * 使用 `=` 作为分隔符，以避免与 AI 可能生成的标准 JSON 混淆。\n * e.g., `<era_data>{\"era-message-key\"=\"era_mk_...\",\"era-message-type\"=\"user\"}</era_data>`\n * 这种设计（而不是用 HTML 注释 `\x3c!-- --\x3e`）是为了防止 MK 被其他可能移除注释的脚本无意中破坏。\n *\n * **核心功能**:\n * 1. **生成与注入**: `ensureMessageKey` 函数确保任何需要追踪的消息都拥有一个 MK。如果不存在，\n *    它会生成一个新的 MK 并注入到消息内容的开头。\n * 2. **解析与读取**: `readMessageKey` 函数提供了一个只读的接口，用于从消息内容中解析出 MK。\n * 3. **同步保障**: `updateLatestSelectedMk` 等函数确保核心数据结构 `SelectedMks` 与最新的\n *    消息状态保持一致，是框架自愈能力的重要组成部分。\n */\n\n\n\n\nconst logger = new _utils__WEBPACK_IMPORTED_MODULE_2__.Logger('message_key');\n// ==================================================================\n// 内部辅助函数\n// ==================================================================\n/**\n * 从消息内容字符串中解析出 `EraData` 对象。这是一个只读操作。\n * @param {string | null | undefined} messageContent - 消息的内容字符串。\n * @returns {EraData | null} 解析成功则返回 `EraData` 对象，否则返回 null。\n */\nfunction parseEraData(messageContent) {\n    if (typeof messageContent !== 'string') {\n        return null;\n    }\n    const match = messageContent.match(_constants__WEBPACK_IMPORTED_MODULE_0__.ERA_DATA_REGEX);\n    if (!match || !match[1]) {\n        return null;\n    }\n    try {\n        // 由于 MK 块内部是自定义的 `{\"key\"=\"value\"}` 格式，不能使用 JSON.parse。\n        // 必须使用正则表达式进行宽松匹配来提取键值。\n        const customFormatBlock = match[1];\n        const keyMatch = customFormatBlock.match(/\"era-message-key\"\\s*=\\s*\"(.*?)\"/);\n        const typeMatch = customFormatBlock.match(/\"era-message-type\"\\s*=\\s*\"(.*?)\"/);\n        if (keyMatch?.[1] && typeMatch?.[1]) {\n            return {\n                'era-message-key': keyMatch[1],\n                'era-message-type': typeMatch[1],\n            };\n        }\n        return null;\n    }\n    catch {\n        return null;\n    }\n}\n// ==================================================================\n// 导出的核心函数\n// ==================================================================\n/**\n * **【读取 MK】** 从一个消息对象中只读地提取其消息密钥（MK）。\n * 这个函数经过特别优化，以应对滑动（swipe）等场景下消息对象结构不一致的问题。\n * 它会全面检查消息的 `mes`、`message` 以及 `swipes` 数组中的每一个元素，直到找到第一个有效的 MK 为止。\n * @param {TavernMessage} msg - 酒馆消息对象。\n * @returns {string} 找到的 MK；如果不存在，则返回空字符串。\n */\nfunction readMessageKey(msg) {\n    if (!msg)\n        return '';\n    // 核心逻辑：始终且仅根据 getMessageContent 的结果来解析 MK。\n    const content = (0,_message_utils__WEBPACK_IMPORTED_MODULE_1__.getMessageContent)(msg);\n    const mk = parseEraData(content)?.['era-message-key'] || '';\n    // 移除遍历其他 swipes 的错误逻辑。如果当前激活的内容没有 MK，就必须返回空字符串，\n    // 以强制 ensureMessageKey 生成新的 MK。\n    return mk;\n    /*\n     * ==================================================================\n     * 【已废弃的兼容逻辑】 - 2025/10/02\n     *\n     * 以下代码块是为了兼容旧版酒馆的一个特性：一个消息的多个 swipe 可能共享同一个底层消息变量，\n     * 因此 MK 可能存在于任何一个 swipe 中。\n     *\n     * **废弃原因**:\n     * 在当前的 ERA 架构中，每个 swipe 都被视为独立的内容。如果当前激活的 swipe 内容中没有 MK，\n     * 就意味着它是一个全新的、需要被赋予新 MK 的消息。此时若继续查找并返回其他 swipe 的旧 MK，\n     * 将会导致 `ensureMessageKey` 错误地认为新消息已有 MK，从而跳过必要的“生成新 MK”流程。\n     * 这正是导致 swipe 新消息时无法正确写入变量的根本原因。\n     *\n     * 因此，该兼容逻辑已被注释掉，以确保 `readMessageKey` 的行为与当前架构的设计意图保持一致。\n     * ==================================================================\n     */\n    // const mkFromCurrent = parseEraData(content)?.['era-message-key'];\n    // if (mkFromCurrent) {\n    //   return mkFromCurrent;\n    // }\n    // if (Array.isArray(msg.swipes)) {\n    //   for (const swipeContent of msg.swipes) {\n    //     const mkFromSwipe = parseEraData(swipeContent)?.['era-message-key'];\n    //     if (mkFromSwipe) {\n    //       return mkFromSwipe;\n    //     }\n    //   }\n    // }\n    // const mkFromMessage = parseEraData(msg.message)?.['era-message-key'];\n    // if (mkFromMessage) {\n    //   return mkFromMessage;\n    // }\n    // return '';\n}\n/**\n * **【确保 MK 存在】**\n * 这是本模块最核心的函数。它检查一个消息是否已拥有 MK，如果尚未拥有，则为其生成一个新的 MK 并注入到消息内容中。\n * 这是解决“鸡生蛋/蛋生鸡”问题的关键：在对变量进行任何操作之前，必须先确保有一个可供依附的锚点（MK）。\n *\n * @param {TavernMessage} msg - 目标消息对象 (必须包含 `message_id`, `role`, 以及 `message` 或 `swipes`)。\n * @returns {Promise<{mk: string, isNew: boolean}>} 返回包含 MK 和一个布尔值的对象，该布尔值指示是否创建了新的 MK。\n */\nasync function ensureMessageKey(msg) {\n    if (!msg || typeof msg.message_id !== 'number' || !msg.role) {\n        logger.warn('ensureMessageKey', `无效的消息对象结构，无法确保Key。msg=${JSON.stringify(msg)}`);\n        return { mk: '', isNew: false };\n    }\n    // 1. 使用增强的 readMessageKey 检查是否已存在 MK\n    const existingMk = readMessageKey(msg);\n    if (existingMk) {\n        return { mk: existingMk, isNew: false }; // 已存在，直接返回\n    }\n    // 2. 生成新的 MK 和元数据块\n    const newMk = `era_mk_${Date.now()}_${(0,_utils__WEBPACK_IMPORTED_MODULE_2__.rnd)()}`;\n    const messageType = msg.role === 'user' ? 'user' : 'assistant';\n    const dataString = `<${_constants__WEBPACK_IMPORTED_MODULE_0__.ERA_DATA_TAG}>{\"era-message-key\"=\"${newMk}\",\"era-message-type\"=\"${messageType}\"}</${_constants__WEBPACK_IMPORTED_MODULE_0__.ERA_DATA_TAG}>`;\n    logger.log('ensureMessageKey', `为消息 (ID: ${msg.message_id}) 注入新的Key: ${newMk}`);\n    // 3. 构造新的消息内容并统一调用更新函数\n    const currentContent = (0,_message_utils__WEBPACK_IMPORTED_MODULE_1__.getMessageContent)(msg) ?? '';\n    const newContent = dataString + '\\n' + currentContent;\n    // 使用从 utils.ts 导入的通用函数来更新消息，该函数已封装了处理 swipes 的逻辑。\n    await (0,_utils__WEBPACK_IMPORTED_MODULE_2__.updateMessageContent)(msg, newContent);\n    return { mk: newMk, isNew: true };\n}\n/**\n * **【确保最新消息的 MK】**\n * 这是一个便捷函数，专门用于确保当前聊天记录中的最后一条消息拥有 MK。\n * 它通常在监听到新消息生成等事件时被调用，以确保新消息能被 ERA 系统正确追踪。\n * @returns {Promise<{mk: string, message_id: number | null, isNewKey: boolean}>} 返回包含 MK、消息 ID 和一个布尔值的对象，该布尔值指示是否创建了新的 MK。\n */\nconst ensureMkForLatestMessage = async () => {\n    try {\n        const msg = getChatMessages(-1, { include_swipes: true })?.[0];\n        // 保留此日志，因为它对于调试事件触发时的消息状态至关重要。\n        logger.debug('ensureMkForLatestMessage', `获取到的最新消息对象 (msg): ${JSON.stringify(msg)}`);\n        if (!msg || typeof msg.message_id !== 'number') {\n            logger.warn('ensureMkForLatestMessage', '无法读取最新消息或其ID，退出');\n            return { mk: '', message_id: null, isNewKey: false };\n        }\n        // ensureMessageKey 会返回最终的 MK 和一个布尔值\n        const { mk, isNew } = await ensureMessageKey(msg);\n        logger.log('ensureMkForLatestMessage', `已为最新消息 ${msg.message_id} 确保 MK 存在。 (是否新建: ${isNew})`);\n        return { mk, message_id: msg.message_id, isNewKey: isNew };\n    }\n    catch (err) {\n        logger.error('ensureMkForLatestMessage', `确保MK时异常: ${err?.message || err}`, err);\n        return { mk: '', message_id: null, isNewKey: false };\n    }\n};\n/**\n * **【更新最新已选 MK】**\n * 这是一个“保险”函数，用于在每次事件处理的最后，强制校准 `SelectedMks` 数组中关于**最新消息**的记录。\n * 它确保即使在复杂的异步流程中，`SelectedMks` 的尾部也始终与实际的最新消息保持严格同步。\n * @returns {Promise<void>}\n */\nconst updateLatestSelectedMk = async () => {\n    const msg = getChatMessages(-1, { include_swipes: true })?.[0];\n    if (!msg || typeof msg.message_id !== 'number')\n        return;\n    // 确保 MK 存在并获取它\n    const { mk: MK } = await ensureMessageKey(msg);\n    if (!MK)\n        return;\n    // 更新 ERAMetaData 中的 SelectedMks 数组\n    await (0,_utils__WEBPACK_IMPORTED_MODULE_2__.updateEraMetaData)(meta => {\n        const selectedMks = _.get(meta, _constants__WEBPACK_IMPORTED_MODULE_0__.SEL_PATH, []);\n        // 只有在记录不一致时才执行写操作，以优化性能\n        if (selectedMks[msg.message_id] !== MK) {\n            selectedMks[msg.message_id] = MK;\n            _.set(meta, _constants__WEBPACK_IMPORTED_MODULE_0__.SEL_PATH, selectedMks);\n        }\n        return meta;\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/message_key.ts\n\n}");
  },
  "./src/ERA变量框架/message_utils.ts": 
  /*!**************************************!*\
  !*** ./src/ERA变量框架/message_utils.ts ***!
  \**************************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   findLastAiMessage: () => (/* binding */ findLastAiMessage),\n/* harmony export */   getMessageContent: () => (/* binding */ getMessageContent),\n/* harmony export */   isUserMessage: () => (/* binding */ isUserMessage)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/ERA变量框架/constants.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/ERA变量框架/utils.ts\");\n/**\n * @file ERA 变量框架 - 消息处理工具模块\n * @description\n * 该文件提供了一系列用于处理和查询酒馆消息对象的通用辅助函数。\n */\n\n\n\nconst log = new _utils__WEBPACK_IMPORTED_MODULE_1__.Logger('message_utils');\n/**\n * **【获取消息内容】** 从酒馆的消息对象中安全地提取当前激活（被选中）的消息内容字符串。\n * 这个函数是 ERA 中所有消息内容读取的唯一入口，以确保逻辑统一和健壮性。\n * @param {TavernMessage} msg - 酒馆消息对象。\n * @returns {string | null} 当前激活的消息内容；如果无法获取，则返回 null。\n */\nfunction getMessageContent(msg) {\n    if (!msg)\n        return null;\n    // 优先检查 .mes 属性，这是新版酒馆的规范\n    if (typeof msg.mes === 'string') {\n        return msg.mes;\n    }\n    // 如果没有 .mes，则处理 swipes\n    if (Array.isArray(msg.swipes)) {\n        const sid = Number(msg.swipe_id ?? 0);\n        return msg.swipes[sid] || null;\n    }\n    // 最后，作为兼容，检查旧版的 .message 属性\n    if (typeof msg.message === 'string') {\n        return msg.message;\n    }\n    return null;\n}\n/**\n * 从消息内容字符串中解析出 `EraData` 对象。这是一个只读操作。\n * @param {string | null | undefined} messageContent - 消息的内容字符串。\n * @returns {EraData | null} 解析成功则返回 `EraData` 对象，否则返回 null。\n */\nfunction parseEraData(messageContent) {\n    if (typeof messageContent !== 'string') {\n        return null;\n    }\n    const match = messageContent.match(_constants__WEBPACK_IMPORTED_MODULE_0__.ERA_DATA_REGEX);\n    if (!match || !match[1]) {\n        return null;\n    }\n    try {\n        // 由于 MK 块内部是自定义的 `{\"key\"=\"value\"}` 格式，不能使用 JSON.parse。\n        // 必须使用正则表达式进行宽松匹配来提取键值。\n        const customFormatBlock = match[1];\n        const keyMatch = customFormatBlock.match(/\"era-message-key\"\\s*=\\s*\"(.*?)\"/);\n        const typeMatch = customFormatBlock.match(/\"era-message-type\"\\s*=\\s*\"(.*?)\"/);\n        if (keyMatch?.[1] && typeMatch?.[1]) {\n            const eraData = {\n                'era-message-key': keyMatch[1],\n                'era-message-type': typeMatch[1],\n            };\n            log.debug('parseEraData', '成功解析 EraData', eraData);\n            return eraData;\n        }\n        log.debug('parseEraData', '未能在 EraData 块中找到完整的键值对', { customFormatBlock });\n        return null;\n    }\n    catch (e) {\n        log.warn('parseEraData', '解析 EraData 块时发生异常', e);\n        return null;\n    }\n}\n/**\n * **【判断消息类型】** 根据消息内容中的 `era-message-type` 元数据或 `role` 属性判断是否为用户消息。\n * 优先信任注入的元数据。\n * @param {TavernMessage} msg - 酒馆消息对象。\n * @returns {boolean} 如果是用户消息，则返回 true。\n */\nfunction isUserMessage(msg) {\n    const content = getMessageContent(msg);\n    const data = parseEraData(content);\n    if (data) {\n        return data['era-message-type'] === 'user';\n    }\n    // 回退到检查 role 属性\n    return msg?.role === 'user';\n}\n/**\n * 从后向前查找并返回最后一条 AI 消息。\n * @returns {TavernMessage | null} 找到的 AI 消息对象，如果找不到则返回 null。\n */\nfunction findLastAiMessage() {\n    const messages = getChatMessages('0-{{lastMessageId}}', { include_swipes: true });\n    if (!messages || messages.length === 0) {\n        log.debug('findLastAiMessage', '聊天记录为空, 未找到任何消息。');\n        return null;\n    }\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const msg = messages[i];\n        if (!isUserMessage(msg)) {\n            log.debug('findLastAiMessage', `找到最后一条 AI 消息, ID: ${msg.message_id}`);\n            return msg;\n        }\n    }\n    log.debug('findLastAiMessage', '未在聊天记录中找到任何 AI 消息。');\n    return null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/message_utils.ts\n\n}");
  },
  "./src/ERA变量框架/query.ts": 
  /*!******************************!*\
  !*** ./src/ERA变量框架/query.ts ***!
  \******************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseEraMacros: () => (/* binding */ parseEraMacros)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/ERA变量框架/utils.ts\");\n\nconst logger = new _utils__WEBPACK_IMPORTED_MODULE_0__.Logger('query');\n/**\n * 解析字符串中的 ERA 宏, 并将其替换为对应的变量值。\n * 这是提供给其他模块调用的公共接口。\n * @param text - 包含宏的输入字符串。\n * @returns - 替换宏后的字符串。\n */\nfunction parseEraMacros(text) {\n    const macroRegex = /{{\\s*ERA(-withmeta)?\\s*:\\s*([^}]+?)\\s*}}/gi;\n    // 如果文本中不包含宏特征字符串, 直接返回以优化性能\n    if (!text.includes('{{ERA')) {\n        return text;\n    }\n    // 获取 stat_data\n    const { stat } = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getEraData)();\n    if (!stat) {\n        logger.warn('parseEraMacros', '无法获取到 stat_data, 宏替换失败.');\n        // 如果没有 stat_data, 任何宏都无法解析, 直接返回原文本\n        return text;\n    }\n    return text.replace(macroRegex, (substring, withMeta, path) => {\n        const funcName = 'parseEraMacros';\n        const trimmedPath = path.trim();\n        const includeMeta = !!withMeta;\n        let data;\n        if (trimmedPath === '$ALLDATA') {\n            data = stat;\n        }\n        else {\n            data = _.get(stat, trimmedPath);\n        }\n        if (data === undefined) {\n            logger.warn(funcName, `在 stat_data 中未找到路径 \"${trimmedPath}\", 宏将替换为空字符串.`);\n            return ''; // 路径未找到, 返回空字符串\n        }\n        // 根据 withMeta 标志决定是否移除 $meta 字段\n        const dataBeforeUnescape = includeMeta ? data : (0,_utils__WEBPACK_IMPORTED_MODULE_0__.removeMetaFields)(data);\n        // 在返回数据前进行反转义\n        const finalData = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.unescapeEraData)(dataBeforeUnescape);\n        logger.debug('parseEraMacros', `宏替换数据反转义: ${trimmedPath}`, {\n            before: dataBeforeUnescape,\n            after: finalData,\n        });\n        // 如果是对象或数组, 转换为 JSON 字符串\n        if (typeof finalData === 'object' && finalData !== null) {\n            return JSON.stringify(finalData);\n        }\n        // 如果是原始类型, 直接转换为字符串\n        return String(finalData);\n    });\n}\n$(() => {\n    /**\n     * 注册 ERA 宏, 用于在发送给 AI 的消息中查询当前聊天的变量数据\n     *\n     * - `{{ERA:path.to.data}}`: 查询并替换为**不含** `$meta` 的纯净数据。\n     *   - `{{ERA:$ALLDATA}}` 将返回整个移除 `$meta` 后的 `stat_data` 对象。\n     * - `{{ERA-withmeta:path.to.data}}`: 查询并替换为**包含** `$meta` 的原始数据。\n     *   - `{{ERA-withmeta:$ALLDATA}}` 将返回完整的 `stat_data` 对象。\n     */\n    registerMacroLike(/{{\\s*ERA(-withmeta)?\\s*:\\s*([^}]+?)\\s*}}/gi, (context, substring, withMeta, path) => {\n        // 直接复用 parseEraMacros 函数的逻辑。\n        // substring 参数是匹配到的完整宏字符串, 如 \"{{ERA:path.to.data}}\"\n        return parseEraMacros(substring);\n    });\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvRVJB5Y+Y6YeP5qGG5p62L3F1ZXJ5LnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdGO0FBRWhGLE1BQU0sTUFBTSxHQUFHLElBQUksMENBQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUVuQzs7Ozs7R0FLRztBQUNJLFNBQVMsY0FBYyxDQUFDLElBQVk7SUFDekMsTUFBTSxVQUFVLEdBQUcsNENBQTRDLENBQUM7SUFFaEUsNEJBQTRCO0lBQzVCLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7UUFDNUIsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsZUFBZTtJQUNmLE1BQU0sRUFBRSxJQUFJLEVBQUUsR0FBRyxrREFBVSxFQUFFLENBQUM7SUFDOUIsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ1YsTUFBTSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSx5QkFBeUIsQ0FBQyxDQUFDO1FBQ3pELG9DQUFvQztRQUNwQyxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFLENBQUMsU0FBUyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsRUFBRTtRQUM1RCxNQUFNLFFBQVEsR0FBRyxnQkFBZ0IsQ0FBQztRQUNsQyxNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDaEMsTUFBTSxXQUFXLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQztRQUUvQixJQUFJLElBQUksQ0FBQztRQUNULElBQUksV0FBVyxLQUFLLFVBQVUsRUFBRSxDQUFDO1lBQy9CLElBQUksR0FBRyxJQUFJLENBQUM7UUFDZCxDQUFDO2FBQU0sQ0FBQztZQUNOLElBQUksR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxXQUFXLENBQUMsQ0FBQztRQUNsQyxDQUFDO1FBRUQsSUFBSSxJQUFJLEtBQUssU0FBUyxFQUFFLENBQUM7WUFDdkIsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsdUJBQXVCLFdBQVcsZUFBZSxDQUFDLENBQUM7WUFDekUsT0FBTyxFQUFFLENBQUMsQ0FBQyxnQkFBZ0I7UUFDN0IsQ0FBQztRQUVELGdDQUFnQztRQUNoQyxNQUFNLGtCQUFrQixHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyx3REFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUV2RSxjQUFjO1FBQ2QsTUFBTSxTQUFTLEdBQUcsdURBQWUsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBRXRELE1BQU0sQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLEVBQUUsYUFBYSxXQUFXLEVBQUUsRUFBRTtZQUN6RCxNQUFNLEVBQUUsa0JBQWtCO1lBQzFCLEtBQUssRUFBRSxTQUFTO1NBQ2pCLENBQUMsQ0FBQztRQUVILHlCQUF5QjtRQUN6QixJQUFJLE9BQU8sU0FBUyxLQUFLLFFBQVEsSUFBSSxTQUFTLEtBQUssSUFBSSxFQUFFLENBQUM7WUFDeEQsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ25DLENBQUM7UUFFRCxvQkFBb0I7UUFDcEIsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDM0IsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDO0FBRUQsQ0FBQyxDQUFDLEdBQUcsRUFBRTtJQUNMOzs7Ozs7O09BT0c7SUFDSCxpQkFBaUIsQ0FBQyw0Q0FBNEMsRUFBRSxDQUFDLE9BQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxFQUFFO1FBQ3JHLDZCQUE2QjtRQUM3QixvREFBb0Q7UUFDcEQsT0FBTyxjQUFjLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDbkMsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsic3JjOi8vdGF2ZXJuX2hlbHBlcl90ZW1wbGF0ZS9zcmMvRVJB5Y+Y6YeP5qGG5p62L3F1ZXJ5LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEVyYURhdGEsIExvZ2dlciwgcmVtb3ZlTWV0YUZpZWxkcywgdW5lc2NhcGVFcmFEYXRhIH0gZnJvbSAnLi91dGlscyc7XG5cbmNvbnN0IGxvZ2dlciA9IG5ldyBMb2dnZXIoJ3F1ZXJ5Jyk7XG5cbi8qKlxuICog6Kej5p6Q5a2X56ym5Liy5Lit55qEIEVSQSDlro8sIOW5tuWwhuWFtuabv+aNouS4uuWvueW6lOeahOWPmOmHj+WAvOOAglxuICog6L+Z5piv5o+Q5L6b57uZ5YW25LuW5qih5Z2X6LCD55So55qE5YWs5YWx5o6l5Y+j44CCXG4gKiBAcGFyYW0gdGV4dCAtIOWMheWQq+Wuj+eahOi+k+WFpeWtl+espuS4suOAglxuICogQHJldHVybnMgLSDmm7/mjaLlro/lkI7nmoTlrZfnrKbkuLLjgIJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlRXJhTWFjcm9zKHRleHQ6IHN0cmluZyk6IHN0cmluZyB7XG4gIGNvbnN0IG1hY3JvUmVnZXggPSAve3tcXHMqRVJBKC13aXRobWV0YSk/XFxzKjpcXHMqKFtefV0rPylcXHMqfX0vZ2k7XG5cbiAgLy8g5aaC5p6c5paH5pys5Lit5LiN5YyF5ZCr5a6P54m55b6B5a2X56ym5LiyLCDnm7TmjqXov5Tlm57ku6XkvJjljJbmgKfog71cbiAgaWYgKCF0ZXh0LmluY2x1ZGVzKCd7e0VSQScpKSB7XG4gICAgcmV0dXJuIHRleHQ7XG4gIH1cblxuICAvLyDojrflj5Ygc3RhdF9kYXRhXG4gIGNvbnN0IHsgc3RhdCB9ID0gZ2V0RXJhRGF0YSgpO1xuICBpZiAoIXN0YXQpIHtcbiAgICBsb2dnZXIud2FybigncGFyc2VFcmFNYWNyb3MnLCAn5peg5rOV6I635Y+W5YiwIHN0YXRfZGF0YSwg5a6P5pu/5o2i5aSx6LSlLicpO1xuICAgIC8vIOWmguaenOayoeaciSBzdGF0X2RhdGEsIOS7u+S9leWuj+mDveaXoOazleino+aekCwg55u05o6l6L+U5Zue5Y6f5paH5pysXG4gICAgcmV0dXJuIHRleHQ7XG4gIH1cblxuICByZXR1cm4gdGV4dC5yZXBsYWNlKG1hY3JvUmVnZXgsIChzdWJzdHJpbmcsIHdpdGhNZXRhLCBwYXRoKSA9PiB7XG4gICAgY29uc3QgZnVuY05hbWUgPSAncGFyc2VFcmFNYWNyb3MnO1xuICAgIGNvbnN0IHRyaW1tZWRQYXRoID0gcGF0aC50cmltKCk7XG4gICAgY29uc3QgaW5jbHVkZU1ldGEgPSAhIXdpdGhNZXRhO1xuXG4gICAgbGV0IGRhdGE7XG4gICAgaWYgKHRyaW1tZWRQYXRoID09PSAnJEFMTERBVEEnKSB7XG4gICAgICBkYXRhID0gc3RhdDtcbiAgICB9IGVsc2Uge1xuICAgICAgZGF0YSA9IF8uZ2V0KHN0YXQsIHRyaW1tZWRQYXRoKTtcbiAgICB9XG5cbiAgICBpZiAoZGF0YSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBsb2dnZXIud2FybihmdW5jTmFtZSwgYOWcqCBzdGF0X2RhdGEg5Lit5pyq5om+5Yiw6Lev5b6EIFwiJHt0cmltbWVkUGF0aH1cIiwg5a6P5bCG5pu/5o2i5Li656m65a2X56ym5LiyLmApO1xuICAgICAgcmV0dXJuICcnOyAvLyDot6/lvoTmnKrmib7liLAsIOi/lOWbnuepuuWtl+espuS4slxuICAgIH1cblxuICAgIC8vIOagueaNriB3aXRoTWV0YSDmoIflv5flhrPlrprmmK/lkKbnp7vpmaQgJG1ldGEg5a2X5q61XG4gICAgY29uc3QgZGF0YUJlZm9yZVVuZXNjYXBlID0gaW5jbHVkZU1ldGEgPyBkYXRhIDogcmVtb3ZlTWV0YUZpZWxkcyhkYXRhKTtcblxuICAgIC8vIOWcqOi/lOWbnuaVsOaNruWJjei/m+ihjOWPjei9rOS5iVxuICAgIGNvbnN0IGZpbmFsRGF0YSA9IHVuZXNjYXBlRXJhRGF0YShkYXRhQmVmb3JlVW5lc2NhcGUpO1xuXG4gICAgbG9nZ2VyLmRlYnVnKCdwYXJzZUVyYU1hY3JvcycsIGDlro/mm7/mjaLmlbDmja7lj43ovazkuYk6ICR7dHJpbW1lZFBhdGh9YCwge1xuICAgICAgYmVmb3JlOiBkYXRhQmVmb3JlVW5lc2NhcGUsXG4gICAgICBhZnRlcjogZmluYWxEYXRhLFxuICAgIH0pO1xuXG4gICAgLy8g5aaC5p6c5piv5a+56LGh5oiW5pWw57uELCDovazmjaLkuLogSlNPTiDlrZfnrKbkuLJcbiAgICBpZiAodHlwZW9mIGZpbmFsRGF0YSA9PT0gJ29iamVjdCcgJiYgZmluYWxEYXRhICE9PSBudWxsKSB7XG4gICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoZmluYWxEYXRhKTtcbiAgICB9XG5cbiAgICAvLyDlpoLmnpzmmK/ljp/lp4vnsbvlnossIOebtOaOpei9rOaNouS4uuWtl+espuS4slxuICAgIHJldHVybiBTdHJpbmcoZmluYWxEYXRhKTtcbiAgfSk7XG59XG5cbiQoKCkgPT4ge1xuICAvKipcbiAgICog5rOo5YaMIEVSQSDlro8sIOeUqOS6juWcqOWPkemAgee7mSBBSSDnmoTmtojmga/kuK3mn6Xor6LlvZPliY3ogYrlpKnnmoTlj5jph4/mlbDmja5cbiAgICpcbiAgICogLSBge3tFUkE6cGF0aC50by5kYXRhfX1gOiDmn6Xor6Llubbmm7/mjaLkuLoqKuS4jeWQqyoqIGAkbWV0YWAg55qE57qv5YeA5pWw5o2u44CCXG4gICAqICAgLSBge3tFUkE6JEFMTERBVEF9fWAg5bCG6L+U5Zue5pW05Liq56e76ZmkIGAkbWV0YWAg5ZCO55qEIGBzdGF0X2RhdGFgIOWvueixoeOAglxuICAgKiAtIGB7e0VSQS13aXRobWV0YTpwYXRoLnRvLmRhdGF9fWA6IOafpeivouW5tuabv+aNouS4uioq5YyF5ZCrKiogYCRtZXRhYCDnmoTljp/lp4vmlbDmja7jgIJcbiAgICogICAtIGB7e0VSQS13aXRobWV0YTokQUxMREFUQX19YCDlsIbov5Tlm57lrozmlbTnmoQgYHN0YXRfZGF0YWAg5a+56LGh44CCXG4gICAqL1xuICByZWdpc3Rlck1hY3JvTGlrZSgve3tcXHMqRVJBKC13aXRobWV0YSk/XFxzKjpcXHMqKFtefV0rPylcXHMqfX0vZ2ksIChjb250ZXh0LCBzdWJzdHJpbmcsIHdpdGhNZXRhLCBwYXRoKSA9PiB7XG4gICAgLy8g55u05o6l5aSN55SoIHBhcnNlRXJhTWFjcm9zIOWHveaVsOeahOmAu+i+keOAglxuICAgIC8vIHN1YnN0cmluZyDlj4LmlbDmmK/ljLnphY3liLDnmoTlrozmlbTlro/lrZfnrKbkuLIsIOWmgiBcInt7RVJBOnBhdGgudG8uZGF0YX19XCJcbiAgICByZXR1cm4gcGFyc2VFcmFNYWNyb3Moc3Vic3RyaW5nKTtcbiAgfSk7XG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/ERA变量框架/query.ts\n\n}");
  },
  "./src/ERA变量框架/rollback.ts": 
  /*!*********************************!*\
  !*** ./src/ERA变量框架/rollback.ts ***!
  \*********************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   findLatestNewValue: () => (/* binding */ findLatestNewValue),\n/* harmony export */   rollbackByMk: () => (/* binding */ rollbackByMk)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/ERA变量框架/constants.ts\");\n/* harmony import */ var _message_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./message_key */ \"./src/ERA变量框架/message_key.ts\");\n/* harmony import */ var _message_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./message_utils */ \"./src/ERA变量框架/message_utils.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"./src/ERA变量框架/utils.ts\");\n/**\n * @file ERA 变量框架 - 回滚与历史追溯模块\n * @description\n * 该模块提供了 ERA 框架“时间旅行”能力的核心实现。它负责根据 `EditLog` 精确地撤销变量修改，\n * 以及在需要时向上追溯历史以查找变量的旧值。\n *\n * **设计理念**:\n * - **可逆操作**: 所有的变量写入操作都必须是可逆的。`rollbackByMk` 函数通过读取 `EditLog`\n *   并执行反向操作（`insert` -> `unset`, `update` -> `set to value_old`）来保证这一点。\n * - **历史的权威性**: `EditLog` 是变量状态变迁的唯一真实记录。`findLatestNewValue` 函数\n *   体现了这一原则，它不信任任何临时的变量快照，而是通过回溯 `EditLog` 链来查找一个变量\n *   在特定时间点之前的真实值。\n */\n\n\n\n\n\nconst logger = new _utils__WEBPACK_IMPORTED_MODULE_3__.Logger('rollback');\n/**\n * **【回滚】**\n * 根据一个给定的消息密钥（MK），精确地撤销该消息所引入的所有变量变更。\n *\n * @param {string} MK - 要回滚的目标消息的密钥。\n * @param {boolean} [silent=false] - 是否为静默模式。在静默模式下，函数不会自己触发日志刷新，\n *   这在 `resyncStateOnHistoryChange` 等批量操作中非常有用，可以避免产生大量冗余日志。\n */\nasync function rollbackByMk(MK, silent = false) {\n    try {\n        logger.log('rollbackByMk', `开始回滚, MK=${MK}`);\n        await updateVariablesWith(v => {\n            const meta = _.get(v, _constants__WEBPACK_IMPORTED_MODULE_0__.META_DATA_PATH, {});\n            const stat = _.get(v, _constants__WEBPACK_IMPORTED_MODULE_0__.STAT_DATA_PATH, {});\n            const raw = _.get(meta, [_constants__WEBPACK_IMPORTED_MODULE_0__.LOGS_PATH, MK]);\n            const arr = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.parseEditLog)(raw);\n            if (!arr || !arr.length) {\n                logger.debug('rollbackByMk', `EditLog 为空或无效，跳过回滚。`);\n                return v;\n            }\n            // 关键：必须逆序遍历 EditLog 来执行回滚。\n            // 这确保了对同一变量的多次修改能够被正确地、按相反的顺序撤销。\n            for (let i = arr.length - 1; i >= 0; i--) {\n                const e = arr[i];\n                const op = String(e?.op || '').toLowerCase();\n                const path = String(e?.path || '');\n                if (!path)\n                    continue;\n                if (op === 'insert') {\n                    // 对于“插入”操作，回滚即为“删除”。\n                    _.unset(stat, path);\n                    continue;\n                }\n                if (op === 'update' || op === 'delete') {\n                    // 对于“更新”或“删除”操作，回滚即为恢复到“旧值”。\n                    if (typeof e?.value_old === 'undefined') {\n                        // 如果日志中没有记录旧值，最安全的回滚方式是直接删除该路径。\n                        _.unset(stat, path);\n                    }\n                    else {\n                        _.set(stat, path, _.cloneDeep(e.value_old));\n                    }\n                }\n            }\n            _.set(v, _constants__WEBPACK_IMPORTED_MODULE_0__.STAT_DATA_PATH, stat);\n            return v;\n        }, _constants__WEBPACK_IMPORTED_MODULE_0__.CHAT_SCOPE);\n        logger.log('rollbackByMk', `回滚完成：MK=${MK}`);\n    }\n    catch (e) {\n        logger.error('rollbackByMk', `回滚异常：MK=${MK} → ${e?.message || e}`, e);\n    }\n}\n/**\n * **【历史追溯】**\n * 向上追溯聊天历史，查找某个变量路径在指定消息之前的最后一个值 (`value_new`)。\n * 这是为 `applyEditAtLevel` 函数提供支持的关键辅助函数，用于在生成 `update` 日志时，\n * 准确地记录下 `value_old`。\n *\n * @param {string} path - 要查找的变量的完整路径。\n * @param {number} startMessageId - 从此消息 ID 的**前一条**消息开始向上查找。\n * @param {Logger} [logger] - 可选的 Logger 实例，用于记录详细的追溯过程。\n * @returns {Promise<any>} 返回找到的 `value_new`。如果追溯到聊天记录的开头都未找到，则返回 `null`。\n */\nasync function findLatestNewValue(path, startMessageId, logger) {\n    logger?.debug('findLatestNewValue', `开始为路径 <${path}> 从消息ID <${startMessageId}> 向上追溯历史值...`);\n    const messages = getChatMessages('0-{{lastMessageId}}', { include_swipes: false });\n    if (!messages || messages.length < 1) {\n        logger?.debug('findLatestNewValue', `消息历史为空，无法追溯。`);\n        return null;\n    }\n    const startIndex = messages.findIndex(m => m.message_id === startMessageId);\n    if (startIndex === -1) {\n        logger?.warn('findLatestNewValue', `错误：在消息列表中未找到起始消息ID: ${startMessageId}`);\n        return null;\n    }\n    // 从起始消息的前一条开始，向上（向旧）遍历历史消息。\n    for (let i = startIndex - 1; i >= 0; i--) {\n        const message = messages[i];\n        const msgId = message?.message_id;\n        logger?.debug('findLatestNewValue', `[进度] 正在检查消息 (ID: ${msgId})，内容: \"${((0,_message_utils__WEBPACK_IMPORTED_MODULE_2__.getMessageContent)(message) || '').substring(0, 100)}...\"`);\n        // 使用 isUserMessage 辅助函数，并检查 message_id\n        if ((0,_message_utils__WEBPACK_IMPORTED_MODULE_2__.isUserMessage)(message) || typeof msgId !== 'number') {\n            continue;\n        }\n        const mk = (0,_message_key__WEBPACK_IMPORTED_MODULE_1__.readMessageKey)(message);\n        if (!mk) {\n            logger?.debug('findLatestNewValue', `[进度] 消息 (ID: ${msgId}) 无 MK，跳过。`);\n            continue; // 跳过没有 MK 的 AI 消息。\n        }\n        const { meta: metaData } = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getEraData)();\n        const editLogRaw = _.get(metaData, [_constants__WEBPACK_IMPORTED_MODULE_0__.LOGS_PATH, mk]);\n        const editLog = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.parseEditLog)(editLogRaw);\n        if (!editLog || editLog.length === 0) {\n            logger?.debug('findLatestNewValue', `[进度] MK ${mk} 的 EditLog 为空，跳过。`);\n            continue; // 跳过 EditLog 为空的。\n        }\n        logger?.debug('findLatestNewValue', `[进度] 正在检查 MK ${mk} 的 EditLog...\\n${(0,_utils__WEBPACK_IMPORTED_MODULE_3__.J)(editLog)}`);\n        // 关键：从后向前遍历该消息的 EditLog，这样找到的第一个匹配项就是最新的。\n        for (let j = editLog.length - 1; j >= 0; j--) {\n            const logEntry = editLog[j];\n            if (!logEntry || !logEntry.path)\n                continue;\n            // Case 1: 精确路径匹配。\n            if (logEntry.path === path) {\n                // 如果在历史追溯中找到了 delete 记录，这意味着状态可能不一致。\n                // 因为 applyEditAtLevel 的前置检查应阻止对已删除变量的更新。\n                // 记录一个错误以供调试，并返回 null，因为该变量在逻辑上是不存在的。\n                if (logEntry.op === 'delete') {\n                    logger?.error('findLatestNewValue', `>> 状态异常! 在消息(ID:${message.message_id}, MK:${mk})中为路径 <${path}> 找到了 'delete' 记录。这表明 update 操作可能正在尝试修改一个已被删除的变量。`);\n                    return null;\n                }\n                logger?.debug('findLatestNewValue', `>> 成功! 在消息(ID:${message.message_id}, MK:${mk})中找到精确路径 <${path}> 的值为: ${(0,_utils__WEBPACK_IMPORTED_MODULE_3__.J)(logEntry.value_new)}`);\n                return _.cloneDeep(logEntry.value_new);\n            }\n            // Case 2: 查找的路径是日志条目路径的子路径 (即 logEntry.path 是父级)。\n            // 例如, 查找 \"a.b.c\", 而日志中有对 \"a.b\" 的修改。\n            if (path.startsWith(logEntry.path + '.')) {\n                const subPath = path.substring(logEntry.path.length + 1);\n                const parentNewVal = logEntry.value_new;\n                if (_.isPlainObject(parentNewVal) && _.has(parentNewVal, subPath)) {\n                    const foundVal = _.get(parentNewVal, subPath);\n                    logger?.debug('findLatestNewValue', `>> 成功! 在消息(ID:${message.message_id}, MK:${mk})中找到父级路径 <${logEntry.path}>, 并从中提取子路径 <${subPath}> 的值为: ${(0,_utils__WEBPACK_IMPORTED_MODULE_3__.J)(foundVal)}`);\n                    return _.cloneDeep(foundVal);\n                }\n            }\n        }\n    }\n    // 如果追溯到聊天记录的开头都未找到，说明这是该变量的首次出现。\n    logger?.debug('findLatestNewValue', `向上追溯未找到路径 ${path} 的任何历史值，将使用 null 作为旧值`);\n    return null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/rollback.ts\n\n}");
  },
  "./src/ERA变量框架/sync.ts": 
  /*!*****************************!*\
  !*** ./src/ERA变量框架/sync.ts ***!
  \*****************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   forceSyncLastAiMessage: () => (/* binding */ forceSyncLastAiMessage),\n/* harmony export */   resyncStateOnHistoryChange: () => (/* binding */ resyncStateOnHistoryChange)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/ERA变量框架/constants.ts\");\n/* harmony import */ var _message_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./message_key */ \"./src/ERA变量框架/message_key.ts\");\n/* harmony import */ var _message_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./message_utils */ \"./src/ERA变量框架/message_utils.ts\");\n/* harmony import */ var _rollback__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rollback */ \"./src/ERA变量框架/rollback.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"./src/ERA变量框架/utils.ts\");\n/* harmony import */ var _variable_change_processor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./variable_change_processor */ \"./src/ERA变量框架/variable_change_processor.ts\");\n\n/**\n * @file 状态同步核心\n * @description 本文件中的 `resyncStateOnHistoryChange` 是 ERA 变量框架最核心的函数之一。\n * 它通过实现“逆序回滚，顺序重算”的逻辑，解决了因消息删除、切换分支 (swipe) 等操作导致的变量状态与消息历史不一致的棘手问题。\n *\n * ### 酒馆的奇特行为 (Feature, not a bug)\n *\n * 当删除一条 swipe (例如，带有变量 id=2 的消息) 时：\n * 1. **内容与变量错位**: 后一条 swipe (id=3) 的**内容**会“顶”到被删除的 swipe (id=2) 的位置上，但**变量**却保留了 id=2 的变量。\n * 2. **孤儿变量残留**: 原本的 swipe 3 消息虽然在界面上消失了，但它对应的**消息变量** (id=3) 仍然残留在聊天数据中，成为“孤儿变量”。\n * 3. **孤儿变量继承**: 如果用户此时再 swipe 一次，新生成的 swipe 3 将会**继承**这个残留的孤儿变量 (id=3)，导致新内容配旧变量，进一步加剧状态混乱。\n * 4. **结果**: 我们得到了一个内容是 id=3、变量是 id=2 的“混合”消息，并且还有一个 id=3 的孤儿变量随时可能被新消息继承，造成严重的状态不一致。\n *\n * ### 本函数的解决策略\n *\n * `resyncStateOnHistoryChange` 通过全面的状态比对来解决此问题：\n * 1. 在 `message_deleted`, `message_swiped` 等事件触发时被调用。\n * 2. 全面获取当前实际的消息列表，并与之前记录的 `SelectedMks` 序列进行比对。\n * 3. 精确找到第一个不一致的点（无论是删除、还是修改）。\n * 4. **逆序回滚**: 从后往前，将所有不一致的 `MK` 所引入的变量修改全部撤销。\n * 5. **顺序重算**: 从不一致点开始，根据当前消息的**实际内容**，重新计算并写入变量。\n *\n * **最终效果**: 无论历史记录发生何种变化，变量状态都能被完美地自动修复，确保数据一致性。\n */\n\n\n\n\n\n\nconst logger = new _utils__WEBPACK_IMPORTED_MODULE_4__.Logger('sync');\n/**\n * 获取用于变量操作的MK。如果消息是用户消息，则返回null以跳过操作。\n * @param msg 消息对象\n * @returns MK 字符串或 null\n */\nconst getMkFromMsg = (msg) => {\n    const key = (0,_message_key__WEBPACK_IMPORTED_MODULE_1__.readMessageKey)(msg);\n    if (!key)\n        return null;\n    return key;\n};\n/**\n * 检查一组 MK 对应的 EditLog 是否都为空\n * @param mks MK 列表\n * @returns 如果所有 EditLog 都为空则返回 true\n */\nconst checkEditLogsAreEmpty = (mks) => {\n    const { meta: metaData } = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.getEraData)();\n    for (const mk of mks) {\n        if (!mk)\n            continue; // 跳过 null (用户消息)\n        const editLogRaw = _.get(metaData, [_constants__WEBPACK_IMPORTED_MODULE_0__.LOGS_PATH, mk]);\n        const editLog = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.parseEditLog)(editLogRaw);\n        if (editLog.length > 0) {\n            return false; // 发现一个非空 log，直接返回 false\n        }\n    }\n    return true; // 所有 log 都为空\n};\n/**\n * 当聊天记录发生变化（删除、切换分支）时，重新同步状态的核心函数\n * 实现了“逆序回滚，顺序重算”的逻辑\n * @param {boolean} [forceFullResync=false] - 如果为 true，则强制从头开始完全重算，忽略差异检测。\n */\nconst resyncStateOnHistoryChange = async (forceFullResync = false) => {\n    if (forceFullResync) {\n        logger.warn('resyncStateOnHistoryChange', '强制完全重算模式已启动！');\n    }\n    else {\n        logger.log('resyncStateOnHistoryChange', '聊天记录变更，启动状态同步...');\n    }\n    // 核心假设：getChatMessages 会重新生成 message_id，使其保持从 0 开始的连续序列。\n    const allMessages = getChatMessages('0-{{lastMessageId}}', { include_swipes: true });\n    logger.debug('resyncStateOnHistoryChange', '获取到的 allMessages:', allMessages);\n    const { meta: oldMetaData } = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.getEraData)();\n    const oldSelectedMks = _.cloneDeep(_.get(oldMetaData, _constants__WEBPACK_IMPORTED_MODULE_0__.SEL_PATH, []));\n    logger.debug('resyncStateOnHistoryChange', `状态快照: oldSelectedMks.length=${oldSelectedMks.length}, allMessages.length=${allMessages?.length ?? 0}`);\n    if (!allMessages || allMessages.length === 0) {\n        logger.log('resyncStateOnHistoryChange', '当前聊天记录为空，不执行任何操作，同步终止。');\n        return;\n    }\n    let firstRecalcId = -1;\n    if (forceFullResync) {\n        firstRecalcId = 0;\n        logger.log('resyncStateOnHistoryChange', '强制模式：设置重算起点为 0。');\n    }\n    // Case 1: 消息被删除 (新列表比旧列表短)\n    else if (allMessages.length < oldSelectedMks.length) {\n        logger.log('resyncStateOnHistoryChange', '检测到消息删除。');\n        // 从后往前，寻找第一个 \"currentMk === oldMk_at_same_index\" 的对齐点\n        for (let i = allMessages.length - 1; i >= 0; i--) {\n            const currentMk = getMkFromMsg(allMessages[i]);\n            const recordedMk = oldSelectedMks[i];\n            logger.debug('resyncStateOnHistoryChange', `[删除-对齐检查] i=${i}, currentMk=${currentMk}, recordedMk=${recordedMk}`);\n            if (currentMk === recordedMk) {\n                firstRecalcId = i + 1;\n                logger.log('resyncStateOnHistoryChange', `找到对齐点于 message_id=${i} (MK=${currentMk})。将从 ID ${firstRecalcId} 开始检查。`);\n                break;\n            }\n        }\n        if (firstRecalcId === -1) {\n            firstRecalcId = 0;\n            logger.log('resyncStateOnHistoryChange', '未找到任何对齐点，将从头开始检查。');\n        }\n        // 【优化】检查被删除的 MK 是否影响变量\n        // 稳健地找出被删除的 MK：对比新旧 MK 序列的差异\n        const currentMkSequence = allMessages.map(getMkFromMsg).filter(mk => mk);\n        const oldMkSequence = oldSelectedMks.filter(mk => mk);\n        const deletedMks = _.difference(oldMkSequence, currentMkSequence);\n        logger.debug('resyncStateOnHistoryChange', `旧MK序列: [${oldMkSequence.join(', ')}]`);\n        logger.debug('resyncStateOnHistoryChange', `新MK序列: [${currentMkSequence.join(', ')}]`);\n        logger.debug('resyncStateOnHistoryChange', `计算出的被删除MK: [${deletedMks.join(', ')}]`);\n        if (deletedMks.length > 0 && checkEditLogsAreEmpty(deletedMks)) {\n            logger.log('resyncStateOnHistoryChange', `检测到被删除的 ${deletedMks.length} 条消息均不含变量修改，执行快速同步。`);\n            const newSelectedMks = [];\n            for (let i = 0; i < allMessages.length; i++) {\n                newSelectedMks[i] = getMkFromMsg(allMessages[i]);\n            }\n            await (0,_utils__WEBPACK_IMPORTED_MODULE_4__.updateEraMetaData)(meta => {\n                _.set(meta, _constants__WEBPACK_IMPORTED_MODULE_0__.SEL_PATH, newSelectedMks);\n                return meta;\n            });\n            logger.log('resyncStateOnHistoryChange', '快速同步完成，仅修正 SelectedMks 数组。');\n            return;\n        }\n    }\n    // Case 2: 消息被修改/切换 (长度不变)\n    else if (allMessages.length === oldSelectedMks.length) {\n        logger.log('resyncStateOnHistoryChange', '检测到消息长度不变，可能为修改或切换。');\n        // 从后往前，寻找第一个不匹配的点\n        for (let i = allMessages.length - 1; i >= 0; i--) {\n            const currentMk = getMkFromMsg(allMessages[i]);\n            const recordedMk = oldSelectedMks[i];\n            logger.debug('resyncStateOnHistoryChange', `[切换-对齐检查] i=${i}, currentMk=${currentMk}, recordedMk=${recordedMk}`);\n            if (currentMk !== recordedMk) {\n                firstRecalcId = i;\n            }\n        }\n        if (firstRecalcId === -1) {\n            logger.log('resyncStateOnHistoryChange', '所有MK均匹配，无需重算。');\n            // N.B. 在当前架构下，MK 已被直接写入消息内容，与内容强绑定。\n            // 因此，任何导致内容变化的操作（如 swipe）也必然会导致 MK 的变化。\n            // 这意味着，如果 MK 序列完全匹配，那么内容也必然完全匹配，无需进行任何重算或保险性检查。\n            return; // 直接返回，终止同步。\n        }\n        else {\n            logger.log('resyncStateOnHistoryChange', `找到最早的不匹配点于 message_id=${firstRecalcId}。将从该点开始重算。`);\n        }\n    }\n    // Case 3: 消息被添加 (新列表比旧列表长)\n    else {\n        logger.log('resyncStateOnHistoryChange', '检测到消息添加。');\n        // 将重算起点设置为新消息的起始索引，让同步流程统一处理\n        firstRecalcId = oldSelectedMks.length;\n        logger.log('resyncStateOnHistoryChange', `新增消息的写入逻辑已由同步流程接管。将从新增消息 (ID: ${firstRecalcId}) 开始处理。`);\n    }\n    // 3. 收集需要回滚的 MK 列表，并执行逆序回滚\n    if (firstRecalcId > -1) {\n        const mksToRollback = oldSelectedMks.slice(firstRecalcId).filter(mk => mk);\n        if (mksToRollback.length > 0) {\n            logger.log('resyncStateOnHistoryChange', `准备回滚 ${mksToRollback.length} 个MK: [${mksToRollback.join(', ')}]`);\n            for (const mk of mksToRollback.reverse()) {\n                logger.debug('resyncStateOnHistoryChange', `[回滚] 正在回滚 MK: ${mk}`);\n                await (0,_rollback__WEBPACK_IMPORTED_MODULE_3__.rollbackByMk)(mk, true); // true 表示只回滚，不重写\n            }\n            logger.log('resyncStateOnHistoryChange', '逆序回滚完成。');\n        }\n    }\n    // 4. 从不匹配点开始，顺序重新应用变量修改，并构建新的 selectedMks\n    logger.log('resyncStateOnHistoryChange', `从 ID ${firstRecalcId} 开始顺序重算...`);\n    const newSelectedMks = oldSelectedMks.slice(0, firstRecalcId); // 继承匹配部分\n    for (let i = firstRecalcId; i < allMessages.length; i++) {\n        const msg = allMessages[i];\n        logger.debug('resyncStateOnHistoryChange', `[重算] 正在处理消息索引: ${i}`);\n        const newMk = await (0,_variable_change_processor__WEBPACK_IMPORTED_MODULE_5__.ApplyVarChangeForMessage)(msg);\n        newSelectedMks[i] = newMk; // 使用重算后的新 message_id (即 i) 作为索引\n    }\n    logger.log('resyncStateOnHistoryChange', '顺序重算完成。');\n    // 5. 更新 SelectedMks 数组\n    await (0,_utils__WEBPACK_IMPORTED_MODULE_4__.updateEraMetaData)(meta => {\n        _.set(meta, _constants__WEBPACK_IMPORTED_MODULE_0__.SEL_PATH, newSelectedMks);\n        return meta;\n    });\n    logger.log('resyncStateOnHistoryChange', '状态同步完成。');\n    // ==================================================================\n    // 【保险机制】 - 已于 2025/10/02 移除\n    //\n    // **历史原因**:\n    // 该机制最初是为了解决一个旧架构下的“内容-变量错位”问题。在旧架构中，当删除一条 swipe 时，\n    // 后一条 swipe 的内容会“顶替”上来，但其底层的消息变量（及其 MK）却保持不变。\n    // 这导致主同步逻辑的 MK 比对失效，无法发现状态变化。\n    // 为此，保险机制被设计为：通过 `oldSelectedMks`（状态变更前的快照）找到被删除的旧 MK，\n    // 强制回滚它，然后根据当前可见的新内容重新写入变量，从而修复错位。\n    //\n    // **当前架构下的情况与移除原因**:\n    // 在当前架构中，MK 已被直接写入消息内容，与内容强绑定。当 swipe 导致内容变化时，MK 也会随之变化。\n    // 这使得主同步逻辑（逆序回滚、顺序重算）已经能够完全、正确地处理 swipe 等场景，不再需要此保险机制。\n    //\n    // 继续保留该机制不仅是冗余的，而且会主动引发 Bug：\n    // 它依然按照旧逻辑，使用 `oldSelectedMks` 回滚一个过时的、不相关的 MK，这会破坏主逻辑刚刚同步好的正确状态。\n    // 随后，在被破坏的状态上进行的重写操作会失败或产生错误结果（例如，生成一个空的 EditLog），\n    // 并覆盖掉之前由主逻辑正确生成的 EditLog，导致数据丢失。\n    //\n    // 综上，该机制已从“保险”变为“风险”，因此被完全注释掉。\n    // ==================================================================\n    // logger.log('resyncStateOnHistoryChange', '执行【保险机制】：无条件回滚并重写最后一楼...');\n    // const lastWrittenMk = [...oldSelectedMks].reverse().find(mk => mk);\n    // if (lastWrittenMk) {\n    //   logger.log('resyncStateOnHistoryChange', `找到最后一个写入的MK: ${lastWrittenMk}，执行回滚...`);\n    //   await rollbackByMk(lastWrittenMk, true);\n    //   logger.log('resyncStateOnHistoryChange', '回滚完成，准备根据当前最后一楼内容重写...');\n    //   await ApplyVarChange(); // ApplyVarChange 默认处理最后一楼\n    //   logger.log('resyncStateOnHistoryChange', '保险性重写完成。');\n    // } else {\n    //   logger.log('resyncStateOnHistoryChange', '未找到任何可供回滚的旧MK，跳过保险机制。');\n    // }\n};\n/**\n * **【强制同步最后一条AI消息】**\n * 这是一个用于特定场景的函数，例如由外部 API 触发，需要强制重算最后一条 AI 消息的变量。\n * 它解决了在消息内容被外部修改（但 MK 未变）时，状态无法自动更新的问题。\n *\n * **执行逻辑**:\n * 1. **定位**: 找到最后一条 AI 消息。\n * 2. **回滚**: 如果该消息存在且有 MK，则无条件回滚此 MK 引入的所有变量修改。\n * 3. **重算**: 立即根据该消息的**当前内容**重新计算变量，并生成新的 `EditLog`。\n * 4. **更新**: 将新的 MK 更新到 `SelectedMks` 数组的正确位置。\n *\n * **安全性**:\n * 此函数操作目标明确（最后一条 AI 消息），且回滚和重算在同一调用链中完成，\n * 避免了旧“保险机制”中因目标不明确而破坏 `resync` 状态的风险。\n */\nconst forceSyncLastAiMessage = async () => {\n    logger.log('forceSyncLastAiMessage', '启动强制同步最后一条 AI 消息...');\n    // 1. 定位\n    const msg = (0,_message_utils__WEBPACK_IMPORTED_MODULE_2__.findLastAiMessage)();\n    if (!msg || typeof msg.message_id !== 'number') {\n        logger.warn('forceSyncLastAiMessage', '未找到可供强制同步的 AI 消息。');\n        return;\n    }\n    const messageId = msg.message_id;\n    const MK = (0,_message_key__WEBPACK_IMPORTED_MODULE_1__.readMessageKey)(msg);\n    if (!MK) {\n        logger.warn('forceSyncLastAiMessage', `消息 (ID: ${messageId}) 不含 MK，无法执行强制同步。将转为执行常规写入...`);\n        // 如果没有 MK，说明是新消息，直接走标准写入流程即可\n        await (0,_variable_change_processor__WEBPACK_IMPORTED_MODULE_5__.ApplyVarChangeForMessage)(msg);\n        return;\n    }\n    logger.log('forceSyncLastAiMessage', `目标消息 (ID: ${messageId}, MK: ${MK})。`);\n    // 2. 回滚\n    logger.debug('forceSyncLastAiMessage', `正在回滚 MK: ${MK}...`);\n    await (0,_rollback__WEBPACK_IMPORTED_MODULE_3__.rollbackByMk)(MK, true); // silent=true，避免不必要的日志刷新\n    // 3. 重算\n    logger.debug('forceSyncLastAiMessage', `回滚完成，正在根据当前内容重算 MK: ${MK}...`);\n    const newMK = await (0,_variable_change_processor__WEBPACK_IMPORTED_MODULE_5__.ApplyVarChangeForMessage)(msg);\n    // 4. 更新 SelectedMks\n    if (newMK) {\n        try {\n            await (0,_utils__WEBPACK_IMPORTED_MODULE_4__.updateEraMetaData)(meta => {\n                const selectedMks = _.get(meta, _constants__WEBPACK_IMPORTED_MODULE_0__.SEL_PATH, []);\n                selectedMks[messageId] = newMK;\n                _.set(meta, _constants__WEBPACK_IMPORTED_MODULE_0__.SEL_PATH, selectedMks);\n                return meta;\n            });\n            logger.log('forceSyncLastAiMessage', `强制同步完成，已更新 SelectedMks[${messageId}] = ${newMK}`);\n        }\n        catch (e) {\n            logger.error('forceSyncLastAiMessage', `强制同步后更新 SelectedMks 失败: ${e?.message || e}`, e);\n        }\n    }\n    else {\n        logger.error('forceSyncLastAiMessage', `重算后未能获取新的 MK，SelectedMks 可能未更新。`);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/sync.ts\n\n}");
  },
  "./src/ERA变量框架/template.ts": 
  /*!*********************************!*\
  !*** ./src/ERA变量框架/template.ts ***!
  \*********************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval('{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyTemplateToPatch: () => (/* binding */ applyTemplateToPatch),\n/* harmony export */   getInheritedTemplateContent: () => (/* binding */ getInheritedTemplateContent),\n/* harmony export */   resolveTemplate: () => (/* binding */ resolveTemplate)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ "./src/ERA变量框架/utils.ts");\n\n\nconst logger = new _utils__WEBPACK_IMPORTED_MODULE_0__.Logger(\'template\');\n/**\n * **【解析并合并模板内容】**\n *\n * 从继承的模板内容和父节点变量中定义的模板内容中，合并出当前层级可用的模板。\n *\n * @param inheritedContent - 从上上层继承的模板内容。\n * @param parentNodeData - 当前正在处理的节点的 **父节点** 在变量中的数据。\n * @returns {any} - 合并后的单一内容对象，如果所有来源都无效，则返回 `null`。\n */\nfunction resolveTemplate(inheritedContent, parentNodeData) {\n    // 1. 从父节点变量中，找到作为当前节点兄弟的 $template\n    const varsContent = _.get(parentNodeData, \'$template\');\n    logger.debug(\'resolveTemplate\', `解析出的模板内容:\\n    - 继承: ${JSON.stringify(inheritedContent)}\\n    - 父节点变量: ${JSON.stringify(varsContent)}`);\n    // 2. 按优先级合并 (父节点变量 > 继承)\n    let mergedContent = {};\n    mergedContent = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.mergeReplaceArray)(mergedContent, inheritedContent);\n    mergedContent = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.mergeReplaceArray)(mergedContent, varsContent);\n    logger.debug(\'resolveTemplate\', `合并后的最终模板内容: ${JSON.stringify(mergedContent)}`);\n    if (_.isEmpty(mergedContent)) {\n        return null;\n    }\n    return mergedContent;\n}\n/**\n * **【获取子节点要继承的模板内容】**\n *\n * 在一个给定的“父级模板内容”中，查找并合并其内部定义的“原型规则” (`$template`) 和“特异性规则” (`key`)，\n * 以生成供特定子节点 `key` 使用的最终模板内容。\n *\n * @example\n * // 输入:\n * const parentTplContent = {\n *   "$template": { "hp": 10, "mana": 100, "a": { "d": 1 } },\n *   "lili": { "hp": 15, "class": "warrior", "a": { "c": 1 } }\n * };\n * const key = "lili";\n * // 输出 (合并后的内容):\n * // { "hp": 15, "mana": 100, "class": "warrior", "a": { "c": 1, "d": 1 } }\n *\n * @param parentTplContent - 父级的模板内容，它本身可能包含 `$template` 和 `key` 作为子键。\n * @param key - 正在处理的子节点的键名。\n * @returns {any} - 子节点应该继承的、已合并的模板内容，或 `undefined`。\n */\nfunction getInheritedTemplateContent(parentTplContent, key) {\n    if (!parentTplContent)\n        return undefined;\n    // 步骤 1: 在父级模板内容中查找通用的原型规则\n    const prototypeContent = _.get(parentTplContent, \'$template\');\n    // 步骤 2: 在父级模板内容中查找给 key 的特异性规则\n    const specificContent = _.get(parentTplContent, key);\n    // 步骤 3: 根据查找结果决定最终模板内容\n    if (_.isPlainObject(prototypeContent) && _.isPlainObject(specificContent)) {\n        logger.debug(\'getInheritedTemplateContent\', `为子节点 "${key}" 同时找到原型和特异性内容。\\n      - 原型: ${JSON.stringify(prototypeContent)}\\n      - 特异性: ${JSON.stringify(specificContent)}`);\n        // 直接使用 mergeReplaceArray 进行合并\n        const merged = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.mergeReplaceArray)(_.cloneDeep(prototypeContent), specificContent);\n        logger.debug(\'getInheritedTemplateContent\', `  - 合并后: ${JSON.stringify(merged)}`);\n        return merged;\n    }\n    else if (_.isPlainObject(specificContent)) {\n        logger.debug(\'getInheritedTemplateContent\', `为子节点 "${key}" 只找到特异性内容: ${JSON.stringify(specificContent)}`);\n        return specificContent;\n    }\n    else if (_.isPlainObject(prototypeContent)) {\n        logger.debug(\'getInheritedTemplateContent\', `为子节点 "${key}" 只找到原型内容: ${JSON.stringify(prototypeContent)}`);\n        return prototypeContent;\n    }\n    logger.debug(\'getInheritedTemplateContent\', `在父级模板内容中未为子节点 "${key}" 找到任何可继承的规则。`);\n    return undefined;\n}\n/**\n * **【应用模板内容到补丁】**\n *\n * 将一个“模板内容”对象应用到一个“补丁”对象上，作为其默认值。\n *\n * @param tplContent - 当前层级合并后的模板内容。\n * @param patchObj - 要应用模板的补丁数据。\n * @returns {any} - 应用了模板默认值之后，最终合成的数据对象。\n */\nfunction applyTemplateToPatch(tplContent, patchObj) {\n    logger.debug(\'applyTemplateToPatch\', `[进入] 模板内容: ${JSON.stringify(tplContent)}, 补丁: ${JSON.stringify(patchObj)}`);\n    if (!_.isPlainObject(patchObj)) {\n        logger.debug(\'applyTemplateToPatch\', `[退出] 补丁不是一个普通对象，直接返回。`);\n        return patchObj;\n    }\n    if (!tplContent) {\n        logger.debug(\'applyTemplateToPatch\', `[退出] 模板内容无效，直接返回补丁。`);\n        return patchObj;\n    }\n    // 如果补丁是空对象，直接使用模板内容\n    if (_.isEmpty(patchObj)) {\n        logger.debug(\'applyTemplateToPatch\', `补丁为空对象，完全使用模板内容。`);\n        return _.cloneDeep(tplContent);\n    }\n    // 如果补丁非空，将模板内容作为默认值与补丁合并\n    const composed = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.mergeReplaceArray)(_.cloneDeep(tplContent), patchObj);\n    logger.debug(\'applyTemplateToPatch\', `合并模板与补丁后的结果: ${JSON.stringify(composed)}`);\n    return composed;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/template.ts\n\n}');
  },
  "./src/ERA变量框架/update.ts": 
  /*!*******************************!*\
  !*** ./src/ERA变量框架/update.ts ***!
  \*******************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyEditAtLevel: () => (/* binding */ applyEditAtLevel),\n/* harmony export */   processEditBlocks: () => (/* binding */ processEditBlocks)\n/* harmony export */ });\n/* harmony import */ var _rollback__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rollback */ \"./src/ERA变量框架/rollback.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/ERA变量框架/utils.ts\");\n/**\n * @file ERA 变量框架 - 变量编辑模块\n * @description\n * 该模块负责处理 `<VariableEdit>` 指令，实现对已存在变量的修改，并生成用于回滚的精确 `EditLog`。\n *\n * **设计理念**:\n * - **职责单一**: 模块只关心如何根据指令修改变量状态并生成日志，不关心指令从何而来。\n * - **精确日志**: `EditLog` 的准确性是回滚功能的基础。`applyEditAtLevel` 通过精巧的逻辑，\n *   特别是对“旧值”的历史追溯，确保了日志的绝对可靠。\n * - **容错性**: 当遇到无效路径（如尝试编辑不存在的路径）时，会跳过该条指令并继续处理其他有效指令，\n *   而不是中断整个写入过程。\n */\n\n\n\nconst logger = new _utils__WEBPACK_IMPORTED_MODULE_1__.Logger('update');\n/**\n * **【递归编辑】**\n * 实现了 `<VariableEdit>` 的核心逻辑：**只修改已存在的路径**。\n *\n * **核心规则**:\n * 1. **路径必须存在**。如果指令中指定的路径在当前变量状态中不存在，则跳过该操作。\n * 2. **叶子节点操作**。只在遇到指令对象中的叶子节点（非对象值）时才执行实际的修改和日志记录。\n * 3. **精确的旧值查找**。为了生成可供回滚的 `EditLog`，它需要找到变量在本次修改发生**之前**的“旧值”。\n *    查找顺序为：首先通过 `findLatestNewValue` 在历史 `EditLog` 中回溯；如果找不到，\n *    则从当前消息处理开始时的变量快照中获取。这是确保日志准确性的关键。\n *\n * @param {any} statData - 状态数据对象 (即 `stat_data`)。\n * @param {string} basePath - 当前递归层级的基础路径。\n * @param {any} patchObj - 要应用的补丁对象。\n * @param {any[]} editLog - 用于收集变更记录的日志数组。\n * @param {number} messageId - 当前正在处理的消息的 ID，用于历史追溯。\n * @param {Map<string, any>} intraMessageState - 用于跟踪在**同一条消息内部**对同一变量的连续修改。\n */\nasync function applyEditAtLevel(statData, basePath, patchObj, editLog, messageId, intraMessageState) {\n    // --- 1. 路径和存在性检查 ---\n    const currentNodeInVars = basePath ? _.get(statData, basePath) : statData;\n    if (currentNodeInVars === undefined) {\n        logger.warn('applyEditAtLevel', `VariableEdit 跳过：路径不存在 -> ${basePath || '(root)'}`);\n        return;\n    }\n    // --- 2. 权限检查 (`updatable`) ---\n    // 读取 updatable 标志，如果未定义，则默认为 true (允许更新)。\n    const isUpdatable = _.get(currentNodeInVars, ['$meta', 'updatable'], true);\n    // 定义豁免条件：只有当指令明确要将 updatable 从 false 改为 true 时，才允许操作。\n    const isBypassingProtection = isUpdatable === false && // 当前是受保护的\n        _.get(patchObj, ['$meta', 'updatable']) === true; // 且指令意图是明确地将其改为 true\n    // 如果受保护且不满足豁免条件，则阻止整个子树的更新。\n    if (isUpdatable === false && !isBypassingProtection) {\n        logger.warn('applyEditAtLevel', `VariableEdit 失败：路径 <${basePath}> 受 \"$meta.updatable: false\" 保护，无法被修改。`);\n        return; // 终止此分支的递归。\n    }\n    // --- 3. 递归或执行 ---\n    // 遍历指令的键，以驱动递归。\n    for (const key of Object.keys(patchObj)) {\n        const subPath = basePath ? `${basePath}.${key}` : key;\n        const valNew = patchObj[key];\n        // **策略一：递归深入**\n        // 如果指令的值是对象，则继续向内递归。\n        if (_.isPlainObject(valNew)) {\n            await applyEditAtLevel(statData, subPath, valNew, editLog, messageId, intraMessageState);\n            continue; // 继续处理下一个键。\n        }\n        // **策略二：执行更新 (叶子节点)**\n        // 只有当指令的值不是对象时，才执行更新操作。\n        // 路径合法性检查：确保要写入的完整路径是存在的。\n        if (!_.has(statData, subPath)) {\n            logger.warn('applyEditAtLevel', `VariableEdit 失败：路径非法，无法写入 -> ${subPath}`);\n            continue;\n        }\n        // a. 查找旧值 (`valOld`)\n        // 这是确保回滚准确性的核心。\n        logger.debug('applyEditAtLevel', `[旧值查找] 准备为路径 <${subPath}> 从消息 ID <${messageId}> 向上追溯...`);\n        let valOld = await (0,_rollback__WEBPACK_IMPORTED_MODULE_0__.findLatestNewValue)(subPath, messageId, logger);\n        if (valOld === null) {\n            valOld = _.get(statData, subPath);\n            logger.debug('applyEditAtLevel', `[旧值查找] 追溯未找到历史值，从当前 stat_data 中获取到旧值: ${JSON.stringify(valOld)}`);\n        }\n        else {\n            logger.debug('applyEditAtLevel', `[旧值查找] 追溯成功，找到历史旧值: ${JSON.stringify(valOld)}`);\n        }\n        const cleaned = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.sanitizeArrays)(valNew); // 清理新值\n        // b. 记录编辑意图\n        // 即使新旧值相同，也记录 EditLog，以完整反映作者的编辑意图。\n        // 这对于调试和历史追溯非常有用。\n        _.set(statData, subPath, cleaned);\n        editLog.push({\n            op: 'update',\n            path: subPath,\n            value_old: _.cloneDeep(valOld),\n            value_new: _.cloneDeep(cleaned),\n        });\n        // c. 更新楼内状态 Map，以便同一消息内的后续操作能正确追溯到这个新值。\n        intraMessageState.set(subPath, _.cloneDeep(cleaned));\n    }\n}\n/**\n * 处理所有 `<VariableEdit>` 指令块。\n *\n * @param {any[]} allEdits - 从消息中解析出的所有 edit 指令对象。\n * @param {any[]} editLog - 用于收集变更记录的日志数组。\n * @param {number} messageId - 当前正在处理的消息的 ID。\n */\nasync function processEditBlocks(allEdits, editLog, messageId) {\n    if (allEdits.length > 0) {\n        const intraMessageState = new Map(); // 用于跟踪在**本消息内部**对变量的连续修改。\n        // N.B. 同样，编辑操作也需要独立调用以确保能读取到同一消息中、此前已完成的插入或编辑操作的结果。\n        for (const editRoot of allEdits) {\n            if (!_.isPlainObject(editRoot) || _.isEmpty(editRoot))\n                continue;\n            try {\n                await (0,_utils__WEBPACK_IMPORTED_MODULE_1__.updateEraStatData)(async (stat) => {\n                    logger.debug('processEditBlocks', `处理 editRoot: ${JSON.stringify(editRoot)}`);\n                    // 从根路径 '' 开始统一递归入口，保持逻辑一致性。\n                    await applyEditAtLevel(stat, '', editRoot, editLog, messageId, intraMessageState);\n                    return stat;\n                });\n            }\n            catch (e) {\n                logger.error('processEditBlocks', `处理 editRoot 失败: ${e?.message || e}`, e);\n            }\n        }\n        logger.log('processEditBlocks', '所有 VariableEdit 操作完成');\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/update.ts\n\n}");
  },
  "./src/ERA变量框架/utils.ts": 
  /*!******************************!*\
  !*** ./src/ERA变量框架/utils.ts ***!
  \******************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   J: () => (/* binding */ J),\n/* harmony export */   Logger: () => (/* binding */ Logger),\n/* harmony export */   escapeEraData: () => (/* binding */ escapeEraData),\n/* harmony export */   extractBlocks: () => (/* binding */ extractBlocks),\n/* harmony export */   getEraData: () => (/* binding */ getEraData),\n/* harmony export */   isPO: () => (/* binding */ isPO),\n/* harmony export */   logContext: () => (/* binding */ logContext),\n/* harmony export */   mergeReplaceArray: () => (/* binding */ mergeReplaceArray),\n/* harmony export */   parseEditLog: () => (/* binding */ parseEditLog),\n/* harmony export */   parseJsonl: () => (/* binding */ parseJsonl),\n/* harmony export */   removeMetaFields: () => (/* binding */ removeMetaFields),\n/* harmony export */   rnd: () => (/* binding */ rnd),\n/* harmony export */   sanitizeArrays: () => (/* binding */ sanitizeArrays),\n/* harmony export */   stripCodeFence: () => (/* binding */ stripCodeFence),\n/* harmony export */   unescapeEraData: () => (/* binding */ unescapeEraData),\n/* harmony export */   updateEraMetaData: () => (/* binding */ updateEraMetaData),\n/* harmony export */   updateEraStatData: () => (/* binding */ updateEraStatData),\n/* harmony export */   updateMessageContent: () => (/* binding */ updateMessageContent)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ \"lodash\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"./src/ERA变量框架/constants.ts\");\n/**\n * @file ERA 变量框架 - 通用工具模块\n * @description\n * 该文件提供了一系列与业务逻辑无关的、高度可复用的辅助函数和类。\n * 它们是构建整个 ERA 框架的基石，涵盖了日志记录、字符串处理、数据解析、对象操作等基础功能。\n * 将这些通用功能集中在此处，有助于保持其他模块代码的简洁和专注。\n */\n\n\n\n// ==================================================================\n// 日志记录\n// ==================================================================\n/**\n * @class Logger\n * @description 一个为 ERA 框架设计的、支持日志分级的记录器。\n *\n * **核心功能**:\n * 1. **日志分级**: 提供 `debug`, `log`, `warn`, `error` 四个级别，方便过滤和定位问题。\n * 2. **统一格式**: 所有日志都遵循 `《ERA》「模块名」【函数名】日志内容` 的格式，清晰明了。\n * 3. **控制台输出**: 日志会根据级别使用不同颜色和样式的 `console` 方法输出，便于在浏览器中实时调试。\n * 4. **纯粹的控制台日志**: 日志系统不再向酒馆聊天变量中写入任何数据，避免了性能问题和数据污染。\n */\n/**\n * @type {{mk: string}}\n * @description 一个用于在事件处理期间临时存储日志上下文（如 Message Key）的对象。\n */\nconst logContext = {\n    mk: '',\n};\nclass Logger {\n    moduleName;\n    /**\n     * 创建一个新的 Logger 实例。\n     * @param {string} moduleName - 该 Logger 实例绑定的模块名称。\n     */\n    constructor(moduleName) {\n        this.moduleName = moduleName;\n    }\n    /**\n     * 格式化日志消息。\n     * @param {string} funcName - 调用日志的函数名。\n     * @param {any} message - 日志内容。\n     * @returns {string} 格式化后的日志字符串。\n     */\n    formatMessage(funcName, message) {\n        const mkString = logContext.mk ? `（${logContext.mk}）` : '';\n        return `《ERA》${mkString}「${this.moduleName}」【${funcName}】${String(message)}`;\n    }\n    /**\n     * 记录一条 debug 级别的日志。\n     * @param {string} funcName - 函数名。\n     * @param {any} message - 日志内容。\n     * @param {any} [obj] - 可选的、附加到日志中的对象。\n     */\n    debug(funcName, message, obj) {\n        // 1. 全局级别检查\n        if (_constants__WEBPACK_IMPORTED_MODULE_1__.LOG_CONFIG.currentLevel > _constants__WEBPACK_IMPORTED_MODULE_1__.LOG_CONFIG.levels.debug)\n            return;\n        // 2. 白名单检查 (仅对 debug 生效)\n        if (_constants__WEBPACK_IMPORTED_MODULE_1__.LOG_CONFIG.currentLevel === _constants__WEBPACK_IMPORTED_MODULE_1__.LOG_CONFIG.levels.debug && !_constants__WEBPACK_IMPORTED_MODULE_1__.LOG_CONFIG.debugWhitelist.includes(this.moduleName)) {\n            return;\n        }\n        const formattedMessage = this.formatMessage(funcName, message);\n        if (obj) {\n            console.debug(formattedMessage, obj);\n        }\n        else {\n            console.debug(formattedMessage);\n        }\n    }\n    /**\n     * 记录一条 log 级别的日志。\n     * @param {string} funcName - 函数名。\n     * @param {any} message - 日志内容。\n     * @param {any} [obj] - 可选的、附加到日志中的对象。\n     */\n    log(funcName, message, obj) {\n        if (_constants__WEBPACK_IMPORTED_MODULE_1__.LOG_CONFIG.currentLevel > _constants__WEBPACK_IMPORTED_MODULE_1__.LOG_CONFIG.levels.log)\n            return;\n        const formattedMessage = this.formatMessage(funcName, message);\n        if (obj) {\n            console.log(`%c${formattedMessage}`, 'color: #3498db;', obj);\n        }\n        else {\n            console.log(`%c${formattedMessage}`, 'color: #3498db;');\n        }\n    }\n    /**\n     * 记录一条 warn 级别的日志。\n     * @param {string} funcName - 函数名。\n     * @param {any} message - 日志内容。\n     * @param {any} [obj] - 可选的、附加到日志中的对象。\n     */\n    warn(funcName, message, obj) {\n        if (_constants__WEBPACK_IMPORTED_MODULE_1__.LOG_CONFIG.currentLevel > _constants__WEBPACK_IMPORTED_MODULE_1__.LOG_CONFIG.levels.warn)\n            return;\n        const formattedMessage = this.formatMessage(funcName, message);\n        if (obj) {\n            console.warn(`%c${formattedMessage}`, 'color: #f39c12;', obj);\n        }\n        else {\n            console.warn(`%c${formattedMessage}`, 'color: #f39c12;');\n        }\n    }\n    /**\n     * 记录一条 error 级别的日志。\n     * @param {string} funcName - 函数名。\n     * @param {any} message - 日志内容。\n     * @param {any} [errorObj] - 可选的、附加到日志中的错误对象。\n     */\n    error(funcName, message, errorObj) {\n        if (_constants__WEBPACK_IMPORTED_MODULE_1__.LOG_CONFIG.currentLevel > _constants__WEBPACK_IMPORTED_MODULE_1__.LOG_CONFIG.levels.error)\n            return;\n        const formattedMessage = this.formatMessage(funcName, message);\n        if (errorObj) {\n            console.error(`%c${formattedMessage}`, 'color: #e74c3c; font-weight: bold;', errorObj);\n        }\n        else {\n            console.error(`%c${formattedMessage}`, 'color: #e74c3c; font-weight: bold;');\n        }\n    }\n}\n// ==================================================================\n// 字符串与数据处理\n// ==================================================================\nconst ESCAPE_MAP = {\n    '.': '__DOT__',\n    '\"': '__DQUOTE__',\n    \"'\": '__SQUOTE__',\n};\nconst UNESCAPE_MAP = lodash__WEBPACK_IMPORTED_MODULE_0___default().invert(ESCAPE_MAP);\nconst escapeRegex = new RegExp(Object.keys(ESCAPE_MAP).map((lodash__WEBPACK_IMPORTED_MODULE_0___default().escapeRegExp)).join('|'), 'g');\nconst unescapeRegex = new RegExp(Object.values(ESCAPE_MAP).map((lodash__WEBPACK_IMPORTED_MODULE_0___default().escapeRegExp)).join('|'), 'g');\n/**\n * 递归地转义对象或数组中所有字符串值和键的特殊字符。\n * @param data - 要处理的数据。\n * @returns - 转义后的数据。\n */\nfunction escapeEraData(data) {\n    if (Array.isArray(data)) {\n        return data.map(item => escapeEraData(item));\n    }\n    if (lodash__WEBPACK_IMPORTED_MODULE_0___default().isPlainObject(data)) {\n        const newObj = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                const escapedKey = key.replace(escapeRegex, match => ESCAPE_MAP[match]);\n                newObj[escapedKey] = escapeEraData(data[key]);\n            }\n        }\n        return newObj;\n    }\n    if (typeof data === 'string') {\n        return data.replace(escapeRegex, match => ESCAPE_MAP[match]);\n    }\n    return data;\n}\n/**\n * 递归地反转义对象或数组中所有字符串值和键的特殊字符。\n * @param data - 要处理的数据。\n * @returns - 反转义后的数据。\n */\nfunction unescapeEraData(data) {\n    if (Array.isArray(data)) {\n        return data.map(item => unescapeEraData(item));\n    }\n    if (lodash__WEBPACK_IMPORTED_MODULE_0___default().isPlainObject(data)) {\n        const newObj = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                const unescapedKey = key.replace(unescapeRegex, match => UNESCAPE_MAP[match]);\n                newObj[unescapedKey] = unescapeEraData(data[key]);\n            }\n        }\n        return newObj;\n    }\n    if (typeof data === 'string') {\n        return data.replace(unescapeRegex, match => UNESCAPE_MAP[match]);\n    }\n    return data;\n}\n/**\n * 生成一个指定长度的随机字符串，用作唯一标识符。\n * 基于 `Math.random()`，在同一毫秒内也能保证极高的唯一性。\n * @returns {string} 一个随机的、由数字和小写字母组成的字符串。\n */\nfunction rnd() {\n    return Math.random().toString(36).slice(2, 8);\n}\n/**\n * 判断一个值是否为“纯粹的对象”（Plain Object）。\n * 数组、null、函数、Date 对象等都会返回 false。\n * @param {*} v - 待检查的值。\n * @returns {boolean} 如果是纯粹的对象则返回 true，否则返回 false。\n */\nconst isPO = (v) => lodash__WEBPACK_IMPORTED_MODULE_0___default().isPlainObject(v);\n/**\n * 从文本中提取所有被特定 XML 风格标签包裹的内容块。\n * 使用非贪婪模式的正则表达式，但不处理嵌套标签。\n * @param {string} text - 包含标签的原始文本。\n * @param {string} tag - 要提取的标签名称（例如 'VariableEdit'）。\n * @returns {string[]} 包含所有提取并清理后（去除代码围栏和首尾空格）的内容块的数组。\n */\nfunction extractBlocks(text, tag) {\n    const blocks = [];\n    // 正则表达式: /<tag>([\\s\\S]*?)<\\/tag>/g\n    // - <${tag}>: 匹配开标签。\n    // - ([\\s\\S]*?): 非贪婪地捕获开闭标签之间的所有字符（包括换行符）。\n    // - <\\/${tag}>: 匹配闭标签。\n    // - g: 全局匹配，以找到所有匹配项。\n    const re = new RegExp(`<${tag}>([\\\\s\\\\S]*?)<\\\\/${tag}>`, 'g');\n    let m;\n    while ((m = re.exec(text))) {\n        const rawBody = (m[1] || '').trim();\n        // 在存入前，先剥离AI可能生成的多余代码围栏。\n        const body = stripCodeFence(rawBody);\n        if (body)\n            blocks.push(body);\n    }\n    return blocks;\n}\n/**\n * 从字符串中移除 AI 生成的 Markdown 代码块围栏（如 ```json ... ```）。\n * @param {string} s - 待处理的字符串。\n * @returns {string} 移除围栏并修剪首尾空格后的字符串。\n */\nfunction stripCodeFence(s) {\n    if (!s)\n        return s;\n    let t = String(s).trim();\n    // 移除起始围栏，例如 ```json, ```, ~~~\n    t = t.replace(/^\\s*(?:```|~~~)[a-zA-Z0-9_-]*\\s*\\r?\\n/, '');\n    // 移除结束围栏\n    t = t.replace(/\\r?\\n(?:```|~~~)\\s*$/, '');\n    return t.trim();\n}\n/**\n * 递归地“净化”一个对象，将其中的数组或对象值转换为字符串。\n * 主要用于准备数据以便在某些特定场景下展示或存储。\n * @param {*} v - 待净化的值。\n * @returns {*} 净化后的值。\n */\nfunction sanitizeArrays(v) {\n    if (Array.isArray(v)) {\n        // 如果是数组，则遍历其元素。如果元素是数组或对象，则字符串化它。\n        return v.map(e => (Array.isArray(e) || lodash__WEBPACK_IMPORTED_MODULE_0___default().isPlainObject(e) ? JSON.stringify(e) : e));\n    }\n    else if (lodash__WEBPACK_IMPORTED_MODULE_0___default().isPlainObject(v)) {\n        // 如果是对象，则递归地对其每个属性值进行净化。\n        const o = {};\n        for (const k in v)\n            o[k] = sanitizeArrays(v[k]);\n        return o;\n    }\n    else {\n        // 其他类型的值直接返回。\n        return v;\n    }\n}\n/**\n * 安全地将一个对象序列化为格式化的 JSON 字符串。\n * 如果序列化失败，不会抛出异常，而是返回一个包含错误信息的字符串。\n * @param {*} o - 待序列化的对象。\n * @returns {string} 成功则返回 JSON 字符串，失败则返回错误提示。\n */\nconst J = (o) => {\n    try {\n        return JSON.stringify(o, null, 2); // 使用 2 个空格进行缩进，提高可读性。\n    }\n    catch (e) {\n        return `<<stringify失败: ${e?.message || e}>>`;\n    }\n};\n// ==================================================================\n// 对象与数据结构操作\n// ==================================================================\n/**\n * 使用“新数组覆盖旧数组”的策略来深度合并两个对象。\n * 这是 `_.merge` 的一个变体，专门用于处理模板合并等场景，\n * 在这些场景中，我们希望补丁对象中的数组能够完全替换基础对象中的数组，而不是合并它们。\n * @param {*} base - 基础对象。\n * @param {*} patch - 补丁对象。\n * @returns {*} 合并后的新对象。\n */\nfunction mergeReplaceArray(base, patch) {\n    // 使用 _.cloneDeep 确保不修改原始对象。\n    return lodash__WEBPACK_IMPORTED_MODULE_0___default().mergeWith(lodash__WEBPACK_IMPORTED_MODULE_0___default().cloneDeep(base), lodash__WEBPACK_IMPORTED_MODULE_0___default().cloneDeep(patch), (a, b) => {\n        // 自定义合并逻辑：如果任一值为数组，则直接返回补丁值（b），从而实现覆盖。\n        if (Array.isArray(a) || Array.isArray(b))\n            return b;\n        // 对于非数组类型，返回 undefined 以使用 _.merge 的默认合并行为。\n        return undefined;\n    });\n}\n/**\n * 健壮地解析 `EditLog` 的原始数据。\n * `EditLog` 可能以多种格式存在（对象、数组、JSON字符串），此函数旨在统一处理它们。\n * @param {*} raw - 从变量中读取的原始 `EditLog` 数据。\n * @returns {any[]} 解析后的 `EditLog` 数组。如果解析失败或输入无效，则返回一个空数组。\n */\nfunction parseEditLog(raw) {\n    if (Array.isArray(raw))\n        return raw;\n    if (raw && typeof raw === 'object')\n        return [raw]; // 单个对象也视为有效日志\n    if (typeof raw === 'string') {\n        const s = raw.replace(/^\\s*```(?:json)?\\s*|\\s*```\\s*$/g, ''); // 移除代码围栏\n        try {\n            const arr = JSON.parse(s);\n            return Array.isArray(arr) ? arr : [];\n        }\n        catch {\n            return [];\n        }\n    }\n    return [];\n}\n/**\n * 解析一个包含多个串联 JSON 对象的字符串（类似于 JSONL 格式）。\n * 这种格式有时会由 AI 生成。此函数能够逐个提取并解析它们。\n *\n * @param {string} str - 待解析的字符串。\n * @param {Logger} [logger] - 可选的日志记录器实例，用于记录解析错误。\n * @returns {any[]} 解析出的对象数组。\n */\nfunction parseJsonl(str, logger) {\n    const objects = [];\n    if (!str || typeof str !== 'string') {\n        return objects;\n    }\n    // 在解析前，先移除所有类型的注释，以提高解析的鲁棒性。\n    const strWithoutComments = str\n        .replace(/\\/\\/.*/g, '') // 移除 // 风格的单行注释\n        .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '') // 移除 /* ... */ 风格的多行注释\n        .replace(/\x3c!--[\\s\\S]*?--\x3e/g, ''); // 移除 \x3c!-- ... --\x3e 风格的 HTML/XML 注释\n    const trimmedStr = strWithoutComments.trim();\n    let braceCount = 0; // 花括号平衡计数器\n    let startIndex = -1; // 当前 JSON 对象的起始索引\n    let inString = false; // 标记是否处于双引号字符串内部\n    for (let i = 0; i < trimmedStr.length; i++) {\n        const char = trimmedStr[i];\n        // 切换 inString 状态，忽略转义的双引号\n        if (char === '\"' && (i === 0 || trimmedStr[i - 1] !== '\\\\')) {\n            inString = !inString;\n        }\n        // 如果在字符串内部，则跳过所有花括号的逻辑判断\n        if (inString)\n            continue;\n        if (char === '{') {\n            if (braceCount === 0) {\n                // 发现一个新 JSON 对象的开始\n                startIndex = i;\n            }\n            braceCount++;\n        }\n        else if (char === '}') {\n            if (braceCount > 0) {\n                braceCount--;\n                if (braceCount === 0 && startIndex !== -1) {\n                    // 花括号平衡，一个完整的 JSON 对象被找到\n                    const jsonString = trimmedStr.substring(startIndex, i + 1);\n                    try {\n                        const obj = JSON.parse(jsonString);\n                        objects.push(obj);\n                    }\n                    catch (e) {\n                        // 如果解析失败，记录错误并继续，不中断整个过程\n                        logger?.error('parseJsonl', `JSONL 解析失败: ${e?.message || e}. 失败的片段: ${jsonString}`, e);\n                    }\n                    // 重置状态，准备寻找下一个对象\n                    startIndex = -1;\n                }\n            }\n        }\n    }\n    return objects;\n}\n// ==================================================================\n// ERA 变量读写\n// ==================================================================\n/**\n * 递归地从对象中移除所有以 `$` 开头的字段（如 `$meta`, `$template`）。\n * 此函数会创建一个对象的深拷贝，因此不会修改原始对象。\n * @param {any} obj - 待处理的对象或值。\n * @returns {any} 一个不包含 `$` 前缀字段的新对象或原始值。\n */\nfunction removeMetaFields(obj) {\n    // 对于非对象类型，直接返回原始值\n    if (!lodash__WEBPACK_IMPORTED_MODULE_0___default().isObject(obj)) {\n        return obj;\n    }\n    // 创建深拷贝以避免修改原始对象\n    const newObj = lodash__WEBPACK_IMPORTED_MODULE_0___default().cloneDeep(obj);\n    function recurse(current) {\n        if (Array.isArray(current)) {\n            // 如果是数组，则递归处理数组中的每个元素\n            current.forEach(item => recurse(item));\n        }\n        else if (isPO(current)) {\n            // 如果是纯粹的对象，遍历其所有键\n            for (const key in current) {\n                // 如果键以 '$' 开头，则删除该属性\n                if (key.startsWith('$')) {\n                    delete current[key];\n                }\n                else {\n                    // 否则，递归处理该属性的值\n                    recurse(current[key]);\n                }\n            }\n        }\n    }\n    recurse(newObj);\n    return newObj;\n}\n/**\n * 获取并确保 ERA 的元数据和状态数据对象的存在。\n * @returns {{meta: object, stat: object}} 包含元数据和状态数据的对象。\n */\nfunction getEraData() {\n    const chatVars = getVariables(_constants__WEBPACK_IMPORTED_MODULE_1__.CHAT_SCOPE) || {};\n    const meta = lodash__WEBPACK_IMPORTED_MODULE_0___default().get(chatVars, _constants__WEBPACK_IMPORTED_MODULE_1__.META_DATA_PATH, {});\n    const stat = lodash__WEBPACK_IMPORTED_MODULE_0___default().get(chatVars, _constants__WEBPACK_IMPORTED_MODULE_1__.STAT_DATA_PATH, {});\n    return { meta, stat };\n}\n/**\n * 原子性地更新 ERA 的状态数据 (stat_data)。\n * @param {(currentStatData: any) => (any | Promise<any>)} updater - 一个接收当前 stat_data 并返回修改后 stat_data 的函数 (可以是 async)。\n */\nasync function updateEraStatData(updater) {\n    await updateVariablesWith(async (v) => {\n        const currentStat = lodash__WEBPACK_IMPORTED_MODULE_0___default().get(v, _constants__WEBPACK_IMPORTED_MODULE_1__.STAT_DATA_PATH, {});\n        const newStat = await updater(currentStat);\n        lodash__WEBPACK_IMPORTED_MODULE_0___default().set(v, _constants__WEBPACK_IMPORTED_MODULE_1__.STAT_DATA_PATH, newStat);\n        return v;\n    }, _constants__WEBPACK_IMPORTED_MODULE_1__.CHAT_SCOPE);\n}\n/**\n * 原子性地更新 ERA 的元数据 (ERAMetaData)。\n * @param {(currentMetaData: any) => (any | Promise<any>)} updater - 一个接收当前 ERAMetaData 并返回修改后 ERAMetaData 的函数 (可以是 async)。\n */\nasync function updateEraMetaData(updater) {\n    await updateVariablesWith(async (v) => {\n        const currentMeta = lodash__WEBPACK_IMPORTED_MODULE_0___default().get(v, _constants__WEBPACK_IMPORTED_MODULE_1__.META_DATA_PATH, {});\n        const newMeta = await updater(currentMeta);\n        lodash__WEBPACK_IMPORTED_MODULE_0___default().set(v, _constants__WEBPACK_IMPORTED_MODULE_1__.META_DATA_PATH, newMeta);\n        return v;\n    }, _constants__WEBPACK_IMPORTED_MODULE_1__.CHAT_SCOPE);\n}\n/**\n * **【通用】** 更新指定消息的内容。\n * 这个辅助函数封装了处理 `swipes` 和普通 `message` 的逻辑，提供一个统一的写入接口。\n * @param {any} message - 要更新的消息对象。\n * @param {string} newContent - 全新的消息内容。\n */\nasync function updateMessageContent(message, newContent) {\n    const updatePayload = {\n        message_id: message.message_id,\n    };\n    if (Array.isArray(message.swipes)) {\n        const sid = Number(message.swipe_id ?? 0);\n        const newSwipes = [...message.swipes];\n        newSwipes[sid] = newContent;\n        updatePayload.swipes = newSwipes;\n    }\n    else {\n        updatePayload.message = newContent;\n    }\n    await setChatMessages([updatePayload]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0FBQyxPQUFPLENBQUMsUUFBUSxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQzFDLE1BQU0sU0FBUyxHQUFHLENBQUMsR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDdEMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxHQUFHLFVBQVUsQ0FBQztRQUM1QixhQUFhLENBQUMsTUFBTSxHQUFHLFNBQVMsQ0FBQztJQUNuQyxDQUFDO1NBQU0sQ0FBQztRQUNOLGFBQWEsQ0FBQyxPQUFPLEdBQUcsVUFBVSxDQUFDO0lBQ3JDLENBQUM7SUFFRCxNQUFNLGVBQWUsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7QUFDekMsQ0FBQyIsInNvdXJjZXMiOlsic3JjOi8vdGF2ZXJuX2hlbHBlcl90ZW1wbGF0ZS9zcmMvRVJB5Y+Y6YeP5qGG5p62L3V0aWxzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGUgRVJBIOWPmOmHj+ahhuaetiAtIOmAmueUqOW3peWFt+aooeWdl1xuICogQGRlc2NyaXB0aW9uXG4gKiDor6Xmlofku7bmj5DkvpvkuobkuIDns7vliJfkuI7kuJrliqHpgLvovpHml6DlhbPnmoTjgIHpq5jluqblj6/lpI3nlKjnmoTovoXliqnlh73mlbDlkoznsbvjgIJcbiAqIOWug+S7rOaYr+aehOW7uuaVtOS4qiBFUkEg5qGG5p6255qE5Z+655+z77yM5ra155uW5LqG5pel5b+X6K6w5b2V44CB5a2X56ym5Liy5aSE55CG44CB5pWw5o2u6Kej5p6Q44CB5a+56LGh5pON5L2c562J5Z+656GA5Yqf6IO944CCXG4gKiDlsIbov5nkupvpgJrnlKjlip/og73pm4bkuK3lnKjmraTlpITvvIzmnInliqnkuo7kv53mjIHlhbbku5bmqKHlnZfku6PnoIHnmoTnroDmtIHlkozkuJPms6jjgIJcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgeyBDSEFUX1NDT1BFLCBMT0dfQ09ORklHLCBNRVRBX0RBVEFfUEFUSCwgU1RBVF9EQVRBX1BBVEggfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8g5pel5b+X6K6w5b2VXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLyoqXG4gKiBAY2xhc3MgTG9nZ2VyXG4gKiBAZGVzY3JpcHRpb24g5LiA5Liq5Li6IEVSQSDmoYbmnrborr7orqHnmoTjgIHmlK/mjIHml6Xlv5fliIbnuqfnmoTorrDlvZXlmajjgIJcbiAqXG4gKiAqKuaguOW/g+WKn+iDvSoqOlxuICogMS4gKirml6Xlv5fliIbnuqcqKjog5o+Q5L6bIGBkZWJ1Z2AsIGBsb2dgLCBgd2FybmAsIGBlcnJvcmAg5Zub5Liq57qn5Yir77yM5pa55L6/6L+H5ruk5ZKM5a6a5L2N6Zeu6aKY44CCXG4gKiAyLiAqKue7n+S4gOagvOW8jyoqOiDmiYDmnInml6Xlv5fpg73pgbXlvqogYOOAikVSQeOAi+OAjOaooeWdl+WQjeOAjeOAkOWHveaVsOWQjeOAkeaXpeW/l+WGheWuuWAg55qE5qC85byP77yM5riF5pmw5piO5LqG44CCXG4gKiAzLiAqKuaOp+WItuWPsOi+k+WHuioqOiDml6Xlv5fkvJrmoLnmja7nuqfliKvkvb/nlKjkuI3lkIzpopzoibLlkozmoLflvI/nmoQgYGNvbnNvbGVgIOaWueazlei+k+WHuu+8jOS+v+S6juWcqOa1j+iniOWZqOS4reWunuaXtuiwg+ivleOAglxuICogNC4gKirnuq/nsrnnmoTmjqfliLblj7Dml6Xlv5cqKjog5pel5b+X57O757uf5LiN5YaN5ZCR6YWS6aaG6IGK5aSp5Y+Y6YeP5Lit5YaZ5YWl5Lu75L2V5pWw5o2u77yM6YG/5YWN5LqG5oCn6IO96Zeu6aKY5ZKM5pWw5o2u5rGh5p+T44CCXG4gKi9cbi8qKlxuICogQHR5cGUge3ttazogc3RyaW5nfX1cbiAqIEBkZXNjcmlwdGlvbiDkuIDkuKrnlKjkuo7lnKjkuovku7blpITnkIbmnJ/pl7TkuLTml7blrZjlgqjml6Xlv5fkuIrkuIvmlofvvIjlpoIgTWVzc2FnZSBLZXnvvInnmoTlr7nosaHjgIJcbiAqL1xuZXhwb3J0IGNvbnN0IGxvZ0NvbnRleHQgPSB7XG4gIG1rOiAnJyxcbn07XG5cbmV4cG9ydCBjbGFzcyBMb2dnZXIge1xuICBwcml2YXRlIG1vZHVsZU5hbWU6IHN0cmluZztcblxuICAvKipcbiAgICog5Yib5bu65LiA5Liq5paw55qEIExvZ2dlciDlrp7kvovjgIJcbiAgICogQHBhcmFtIHtzdHJpbmd9IG1vZHVsZU5hbWUgLSDor6UgTG9nZ2VyIOWunuS+i+e7keWumueahOaooeWdl+WQjeensOOAglxuICAgKi9cbiAgY29uc3RydWN0b3IobW9kdWxlTmFtZTogc3RyaW5nKSB7XG4gICAgdGhpcy5tb2R1bGVOYW1lID0gbW9kdWxlTmFtZTtcbiAgfVxuXG4gIC8qKlxuICAgKiDmoLzlvI/ljJbml6Xlv5fmtojmga/jgIJcbiAgICogQHBhcmFtIHtzdHJpbmd9IGZ1bmNOYW1lIC0g6LCD55So5pel5b+X55qE5Ye95pWw5ZCN44CCXG4gICAqIEBwYXJhbSB7YW55fSBtZXNzYWdlIC0g5pel5b+X5YaF5a6544CCXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9IOagvOW8j+WMluWQjueahOaXpeW/l+Wtl+espuS4suOAglxuICAgKi9cbiAgcHJpdmF0ZSBmb3JtYXRNZXNzYWdlKGZ1bmNOYW1lOiBzdHJpbmcsIG1lc3NhZ2U6IGFueSk6IHN0cmluZyB7XG4gICAgY29uc3QgbWtTdHJpbmcgPSBsb2dDb250ZXh0Lm1rID8gYO+8iCR7bG9nQ29udGV4dC5ta33vvIlgIDogJyc7XG4gICAgcmV0dXJuIGDjgIpFUkHjgIske21rU3RyaW5nfeOAjCR7dGhpcy5tb2R1bGVOYW1lfeOAjeOAkCR7ZnVuY05hbWV944CRJHtTdHJpbmcobWVzc2FnZSl9YDtcbiAgfVxuXG4gIC8qKlxuICAgKiDorrDlvZXkuIDmnaEgZGVidWcg57qn5Yir55qE5pel5b+X44CCXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBmdW5jTmFtZSAtIOWHveaVsOWQjeOAglxuICAgKiBAcGFyYW0ge2FueX0gbWVzc2FnZSAtIOaXpeW/l+WGheWuueOAglxuICAgKiBAcGFyYW0ge2FueX0gW29ial0gLSDlj6/pgInnmoTjgIHpmYTliqDliLDml6Xlv5fkuK3nmoTlr7nosaHjgIJcbiAgICovXG4gIGRlYnVnKGZ1bmNOYW1lOiBzdHJpbmcsIG1lc3NhZ2U6IGFueSwgb2JqPzogYW55KSB7XG4gICAgLy8gMS4g5YWo5bGA57qn5Yir5qOA5p+lXG4gICAgaWYgKExPR19DT05GSUcuY3VycmVudExldmVsID4gTE9HX0NPTkZJRy5sZXZlbHMuZGVidWcpIHJldHVybjtcbiAgICAvLyAyLiDnmb3lkI3ljZXmo4Dmn6UgKOS7heWvuSBkZWJ1ZyDnlJ/mlYgpXG4gICAgaWYgKExPR19DT05GSUcuY3VycmVudExldmVsID09PSBMT0dfQ09ORklHLmxldmVscy5kZWJ1ZyAmJiAhTE9HX0NPTkZJRy5kZWJ1Z1doaXRlbGlzdC5pbmNsdWRlcyh0aGlzLm1vZHVsZU5hbWUpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgZm9ybWF0dGVkTWVzc2FnZSA9IHRoaXMuZm9ybWF0TWVzc2FnZShmdW5jTmFtZSwgbWVzc2FnZSk7XG4gICAgaWYgKG9iaikge1xuICAgICAgY29uc29sZS5kZWJ1Zyhmb3JtYXR0ZWRNZXNzYWdlLCBvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmRlYnVnKGZvcm1hdHRlZE1lc3NhZ2UpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDorrDlvZXkuIDmnaEgbG9nIOe6p+WIq+eahOaXpeW/l+OAglxuICAgKiBAcGFyYW0ge3N0cmluZ30gZnVuY05hbWUgLSDlh73mlbDlkI3jgIJcbiAgICogQHBhcmFtIHthbnl9IG1lc3NhZ2UgLSDml6Xlv5flhoXlrrnjgIJcbiAgICogQHBhcmFtIHthbnl9IFtvYmpdIC0g5Y+v6YCJ55qE44CB6ZmE5Yqg5Yiw5pel5b+X5Lit55qE5a+56LGh44CCXG4gICAqL1xuICBsb2coZnVuY05hbWU6IHN0cmluZywgbWVzc2FnZTogYW55LCBvYmo/OiBhbnkpIHtcbiAgICBpZiAoTE9HX0NPTkZJRy5jdXJyZW50TGV2ZWwgPiBMT0dfQ09ORklHLmxldmVscy5sb2cpIHJldHVybjtcblxuICAgIGNvbnN0IGZvcm1hdHRlZE1lc3NhZ2UgPSB0aGlzLmZvcm1hdE1lc3NhZ2UoZnVuY05hbWUsIG1lc3NhZ2UpO1xuICAgIGlmIChvYmopIHtcbiAgICAgIGNvbnNvbGUubG9nKGAlYyR7Zm9ybWF0dGVkTWVzc2FnZX1gLCAnY29sb3I6ICMzNDk4ZGI7Jywgb2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5sb2coYCVjJHtmb3JtYXR0ZWRNZXNzYWdlfWAsICdjb2xvcjogIzM0OThkYjsnKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog6K6w5b2V5LiA5p2hIHdhcm4g57qn5Yir55qE5pel5b+X44CCXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBmdW5jTmFtZSAtIOWHveaVsOWQjeOAglxuICAgKiBAcGFyYW0ge2FueX0gbWVzc2FnZSAtIOaXpeW/l+WGheWuueOAglxuICAgKiBAcGFyYW0ge2FueX0gW29ial0gLSDlj6/pgInnmoTjgIHpmYTliqDliLDml6Xlv5fkuK3nmoTlr7nosaHjgIJcbiAgICovXG4gIHdhcm4oZnVuY05hbWU6IHN0cmluZywgbWVzc2FnZTogYW55LCBvYmo/OiBhbnkpIHtcbiAgICBpZiAoTE9HX0NPTkZJRy5jdXJyZW50TGV2ZWwgPiBMT0dfQ09ORklHLmxldmVscy53YXJuKSByZXR1cm47XG5cbiAgICBjb25zdCBmb3JtYXR0ZWRNZXNzYWdlID0gdGhpcy5mb3JtYXRNZXNzYWdlKGZ1bmNOYW1lLCBtZXNzYWdlKTtcbiAgICBpZiAob2JqKSB7XG4gICAgICBjb25zb2xlLndhcm4oYCVjJHtmb3JtYXR0ZWRNZXNzYWdlfWAsICdjb2xvcjogI2YzOWMxMjsnLCBvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLndhcm4oYCVjJHtmb3JtYXR0ZWRNZXNzYWdlfWAsICdjb2xvcjogI2YzOWMxMjsnKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog6K6w5b2V5LiA5p2hIGVycm9yIOe6p+WIq+eahOaXpeW/l+OAglxuICAgKiBAcGFyYW0ge3N0cmluZ30gZnVuY05hbWUgLSDlh73mlbDlkI3jgIJcbiAgICogQHBhcmFtIHthbnl9IG1lc3NhZ2UgLSDml6Xlv5flhoXlrrnjgIJcbiAgICogQHBhcmFtIHthbnl9IFtlcnJvck9ial0gLSDlj6/pgInnmoTjgIHpmYTliqDliLDml6Xlv5fkuK3nmoTplJnor6/lr7nosaHjgIJcbiAgICovXG4gIGVycm9yKGZ1bmNOYW1lOiBzdHJpbmcsIG1lc3NhZ2U6IGFueSwgZXJyb3JPYmo/OiBhbnkpIHtcbiAgICBpZiAoTE9HX0NPTkZJRy5jdXJyZW50TGV2ZWwgPiBMT0dfQ09ORklHLmxldmVscy5lcnJvcikgcmV0dXJuO1xuXG4gICAgY29uc3QgZm9ybWF0dGVkTWVzc2FnZSA9IHRoaXMuZm9ybWF0TWVzc2FnZShmdW5jTmFtZSwgbWVzc2FnZSk7XG4gICAgaWYgKGVycm9yT2JqKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGAlYyR7Zm9ybWF0dGVkTWVzc2FnZX1gLCAnY29sb3I6ICNlNzRjM2M7IGZvbnQtd2VpZ2h0OiBib2xkOycsIGVycm9yT2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5lcnJvcihgJWMke2Zvcm1hdHRlZE1lc3NhZ2V9YCwgJ2NvbG9yOiAjZTc0YzNjOyBmb250LXdlaWdodDogYm9sZDsnKTtcbiAgICB9XG4gIH1cbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyDlrZfnrKbkuLLkuI7mlbDmja7lpITnkIZcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5jb25zdCBFU0NBUEVfTUFQOiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9ID0ge1xuICAnLic6ICdfX0RPVF9fJyxcbiAgJ1wiJzogJ19fRFFVT1RFX18nLFxuICBcIidcIjogJ19fU1FVT1RFX18nLFxufTtcblxuY29uc3QgVU5FU0NBUEVfTUFQOiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9ID0gXy5pbnZlcnQoRVNDQVBFX01BUCk7XG5cbmNvbnN0IGVzY2FwZVJlZ2V4ID0gbmV3IFJlZ0V4cChPYmplY3Qua2V5cyhFU0NBUEVfTUFQKS5tYXAoXy5lc2NhcGVSZWdFeHApLmpvaW4oJ3wnKSwgJ2cnKTtcbmNvbnN0IHVuZXNjYXBlUmVnZXggPSBuZXcgUmVnRXhwKE9iamVjdC52YWx1ZXMoRVNDQVBFX01BUCkubWFwKF8uZXNjYXBlUmVnRXhwKS5qb2luKCd8JyksICdnJyk7XG5cbi8qKlxuICog6YCS5b2S5Zyw6L2s5LmJ5a+56LGh5oiW5pWw57uE5Lit5omA5pyJ5a2X56ym5Liy5YC85ZKM6ZSu55qE54m55q6K5a2X56ym44CCXG4gKiBAcGFyYW0gZGF0YSAtIOimgeWkhOeQhueahOaVsOaNruOAglxuICogQHJldHVybnMgLSDovazkuYnlkI7nmoTmlbDmja7jgIJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVzY2FwZUVyYURhdGE8VD4oZGF0YTogVCk6IFQge1xuICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSkge1xuICAgIHJldHVybiBkYXRhLm1hcChpdGVtID0+IGVzY2FwZUVyYURhdGEoaXRlbSkpIGFzIGFueTtcbiAgfVxuICBpZiAoXy5pc1BsYWluT2JqZWN0KGRhdGEpKSB7XG4gICAgY29uc3QgbmV3T2JqOiB7IFtrZXk6IHN0cmluZ106IGFueSB9ID0ge307XG4gICAgZm9yIChjb25zdCBrZXkgaW4gZGF0YSkge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChkYXRhLCBrZXkpKSB7XG4gICAgICAgIGNvbnN0IGVzY2FwZWRLZXkgPSBrZXkucmVwbGFjZShlc2NhcGVSZWdleCwgbWF0Y2ggPT4gRVNDQVBFX01BUFttYXRjaF0pO1xuICAgICAgICBuZXdPYmpbZXNjYXBlZEtleV0gPSBlc2NhcGVFcmFEYXRhKChkYXRhIGFzIGFueSlba2V5XSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBuZXdPYmogYXMgYW55O1xuICB9XG4gIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gZGF0YS5yZXBsYWNlKGVzY2FwZVJlZ2V4LCBtYXRjaCA9PiBFU0NBUEVfTUFQW21hdGNoXSkgYXMgYW55O1xuICB9XG4gIHJldHVybiBkYXRhO1xufVxuXG4vKipcbiAqIOmAkuW9kuWcsOWPjei9rOS5ieWvueixoeaIluaVsOe7hOS4reaJgOacieWtl+espuS4suWAvOWSjOmUrueahOeJueauiuWtl+espuOAglxuICogQHBhcmFtIGRhdGEgLSDopoHlpITnkIbnmoTmlbDmja7jgIJcbiAqIEByZXR1cm5zIC0g5Y+N6L2s5LmJ5ZCO55qE5pWw5o2u44CCXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1bmVzY2FwZUVyYURhdGE8VD4oZGF0YTogVCk6IFQge1xuICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSkge1xuICAgIHJldHVybiBkYXRhLm1hcChpdGVtID0+IHVuZXNjYXBlRXJhRGF0YShpdGVtKSkgYXMgYW55O1xuICB9XG4gIGlmIChfLmlzUGxhaW5PYmplY3QoZGF0YSkpIHtcbiAgICBjb25zdCBuZXdPYmo6IHsgW2tleTogc3RyaW5nXTogYW55IH0gPSB7fTtcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBkYXRhKSB7XG4gICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGRhdGEsIGtleSkpIHtcbiAgICAgICAgY29uc3QgdW5lc2NhcGVkS2V5ID0ga2V5LnJlcGxhY2UodW5lc2NhcGVSZWdleCwgbWF0Y2ggPT4gVU5FU0NBUEVfTUFQW21hdGNoXSk7XG4gICAgICAgIG5ld09ialt1bmVzY2FwZWRLZXldID0gdW5lc2NhcGVFcmFEYXRhKChkYXRhIGFzIGFueSlba2V5XSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBuZXdPYmogYXMgYW55O1xuICB9XG4gIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gZGF0YS5yZXBsYWNlKHVuZXNjYXBlUmVnZXgsIG1hdGNoID0+IFVORVNDQVBFX01BUFttYXRjaF0pIGFzIGFueTtcbiAgfVxuICByZXR1cm4gZGF0YTtcbn1cblxuLyoqXG4gKiDnlJ/miJDkuIDkuKrmjIflrprplb/luqbnmoTpmo/mnLrlrZfnrKbkuLLvvIznlKjkvZzllK/kuIDmoIfor4bnrKbjgIJcbiAqIOWfuuS6jiBgTWF0aC5yYW5kb20oKWDvvIzlnKjlkIzkuIDmr6vnp5LlhoXkuZ/og73kv53or4HmnoHpq5jnmoTllK/kuIDmgKfjgIJcbiAqIEByZXR1cm5zIHtzdHJpbmd9IOS4gOS4qumaj+acuueahOOAgeeUseaVsOWtl+WSjOWwj+WGmeWtl+avjee7hOaIkOeahOWtl+espuS4suOAglxuICovXG5leHBvcnQgZnVuY3Rpb24gcm5kKCk6IHN0cmluZyB7XG4gIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyLCA4KTtcbn1cblxuLyoqXG4gKiDliKTmlq3kuIDkuKrlgLzmmK/lkKbkuLrigJznuq/nsrnnmoTlr7nosaHigJ3vvIhQbGFpbiBPYmplY3TvvInjgIJcbiAqIOaVsOe7hOOAgW51bGzjgIHlh73mlbDjgIFEYXRlIOWvueixoeetiemDveS8mui/lOWbniBmYWxzZeOAglxuICogQHBhcmFtIHsqfSB2IC0g5b6F5qOA5p+l55qE5YC844CCXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0g5aaC5p6c5piv57qv57K555qE5a+56LGh5YiZ6L+U5ZueIHRydWXvvIzlkKbliJnov5Tlm54gZmFsc2XjgIJcbiAqL1xuZXhwb3J0IGNvbnN0IGlzUE8gPSAodjogYW55KTogdiBpcyBSZWNvcmQ8c3RyaW5nLCBhbnk+ID0+IF8uaXNQbGFpbk9iamVjdCh2KTtcblxuLyoqXG4gKiDku47mlofmnKzkuK3mj5Dlj5bmiYDmnInooqvnibnlrpogWE1MIOmjjuagvOagh+etvuWMheijueeahOWGheWuueWdl+OAglxuICog5L2/55So6Z2e6LSq5amq5qih5byP55qE5q2j5YiZ6KGo6L6+5byP77yM5L2G5LiN5aSE55CG5bWM5aWX5qCH562+44CCXG4gKiBAcGFyYW0ge3N0cmluZ30gdGV4dCAtIOWMheWQq+agh+etvueahOWOn+Wni+aWh+acrOOAglxuICogQHBhcmFtIHtzdHJpbmd9IHRhZyAtIOimgeaPkOWPlueahOagh+etvuWQjeensO+8iOS+i+WmgiAnVmFyaWFibGVFZGl0J++8ieOAglxuICogQHJldHVybnMge3N0cmluZ1tdfSDljIXlkKvmiYDmnInmj5Dlj5blubbmuIXnkIblkI7vvIjljrvpmaTku6PnoIHlm7TmoI/lkozpppblsL7nqbrmoLzvvInnmoTlhoXlrrnlnZfnmoTmlbDnu4TjgIJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGV4dHJhY3RCbG9ja3ModGV4dDogc3RyaW5nLCB0YWc6IHN0cmluZyk6IHN0cmluZ1tdIHtcbiAgY29uc3QgYmxvY2tzOiBzdHJpbmdbXSA9IFtdO1xuICAvLyDmraPliJnooajovr7lvI86IC88dGFnPihbXFxzXFxTXSo/KTxcXC90YWc+L2dcbiAgLy8gLSA8JHt0YWd9Pjog5Yy56YWN5byA5qCH562+44CCXG4gIC8vIC0gKFtcXHNcXFNdKj8pOiDpnZ7otKrlqarlnLDmjZXojrflvIDpl63moIfnrb7kuYvpl7TnmoTmiYDmnInlrZfnrKbvvIjljIXmi6zmjaLooYznrKbvvInjgIJcbiAgLy8gLSA8XFwvJHt0YWd9Pjog5Yy56YWN6Zet5qCH562+44CCXG4gIC8vIC0gZzog5YWo5bGA5Yy56YWN77yM5Lul5om+5Yiw5omA5pyJ5Yy56YWN6aG544CCXG4gIGNvbnN0IHJlID0gbmV3IFJlZ0V4cChgPCR7dGFnfT4oW1xcXFxzXFxcXFNdKj8pPFxcXFwvJHt0YWd9PmAsICdnJyk7XG4gIGxldCBtO1xuICB3aGlsZSAoKG0gPSByZS5leGVjKHRleHQpKSkge1xuICAgIGNvbnN0IHJhd0JvZHkgPSAobVsxXSB8fCAnJykudHJpbSgpO1xuICAgIC8vIOWcqOWtmOWFpeWJje+8jOWFiOWJpeemu0FJ5Y+v6IO955Sf5oiQ55qE5aSa5L2Z5Luj56CB5Zu05qCP44CCXG4gICAgY29uc3QgYm9keSA9IHN0cmlwQ29kZUZlbmNlKHJhd0JvZHkpO1xuICAgIGlmIChib2R5KSBibG9ja3MucHVzaChib2R5KTtcbiAgfVxuICByZXR1cm4gYmxvY2tzO1xufVxuXG4vKipcbiAqIOS7juWtl+espuS4suS4reenu+mZpCBBSSDnlJ/miJDnmoQgTWFya2Rvd24g5Luj56CB5Z2X5Zu05qCP77yI5aaCIGBgYGpzb24gLi4uIGBgYO+8ieOAglxuICogQHBhcmFtIHtzdHJpbmd9IHMgLSDlvoXlpITnkIbnmoTlrZfnrKbkuLLjgIJcbiAqIEByZXR1cm5zIHtzdHJpbmd9IOenu+mZpOWbtOagj+W5tuS/ruWJqummluWwvuepuuagvOWQjueahOWtl+espuS4suOAglxuICovXG5leHBvcnQgZnVuY3Rpb24gc3RyaXBDb2RlRmVuY2Uoczogc3RyaW5nKTogc3RyaW5nIHtcbiAgaWYgKCFzKSByZXR1cm4gcztcbiAgbGV0IHQgPSBTdHJpbmcocykudHJpbSgpO1xuICAvLyDnp7vpmaTotbflp4vlm7TmoI/vvIzkvovlpoIgYGBganNvbiwgYGBgLCB+fn5cbiAgdCA9IHQucmVwbGFjZSgvXlxccyooPzpgYGB8fn5+KVthLXpBLVowLTlfLV0qXFxzKlxccj9cXG4vLCAnJyk7XG4gIC8vIOenu+mZpOe7k+adn+WbtOagj1xuICB0ID0gdC5yZXBsYWNlKC9cXHI/XFxuKD86YGBgfH5+filcXHMqJC8sICcnKTtcbiAgcmV0dXJuIHQudHJpbSgpO1xufVxuXG4vKipcbiAqIOmAkuW9kuWcsOKAnOWHgOWMluKAneS4gOS4quWvueixoe+8jOWwhuWFtuS4reeahOaVsOe7hOaIluWvueixoeWAvOi9rOaNouS4uuWtl+espuS4suOAglxuICog5Li76KaB55So5LqO5YeG5aSH5pWw5o2u5Lul5L6/5Zyo5p+Q5Lqb54m55a6a5Zy65pmv5LiL5bGV56S65oiW5a2Y5YKo44CCXG4gKiBAcGFyYW0geyp9IHYgLSDlvoXlh4DljJbnmoTlgLzjgIJcbiAqIEByZXR1cm5zIHsqfSDlh4DljJblkI7nmoTlgLzjgIJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNhbml0aXplQXJyYXlzKHY6IGFueSk6IGFueSB7XG4gIGlmIChBcnJheS5pc0FycmF5KHYpKSB7XG4gICAgLy8g5aaC5p6c5piv5pWw57uE77yM5YiZ6YGN5Y6G5YW25YWD57Sg44CC5aaC5p6c5YWD57Sg5piv5pWw57uE5oiW5a+56LGh77yM5YiZ5a2X56ym5Liy5YyW5a6D44CCXG4gICAgcmV0dXJuIHYubWFwKGUgPT4gKEFycmF5LmlzQXJyYXkoZSkgfHwgXy5pc1BsYWluT2JqZWN0KGUpID8gSlNPTi5zdHJpbmdpZnkoZSkgOiBlKSk7XG4gIH0gZWxzZSBpZiAoXy5pc1BsYWluT2JqZWN0KHYpKSB7XG4gICAgLy8g5aaC5p6c5piv5a+56LGh77yM5YiZ6YCS5b2S5Zyw5a+55YW25q+P5Liq5bGe5oCn5YC86L+b6KGM5YeA5YyW44CCXG4gICAgY29uc3QgbzogeyBba2V5OiBzdHJpbmddOiBhbnkgfSA9IHt9O1xuICAgIGZvciAoY29uc3QgayBpbiB2KSBvW2tdID0gc2FuaXRpemVBcnJheXModltrXSk7XG4gICAgcmV0dXJuIG87XG4gIH0gZWxzZSB7XG4gICAgLy8g5YW25LuW57G75Z6L55qE5YC855u05o6l6L+U5Zue44CCXG4gICAgcmV0dXJuIHY7XG4gIH1cbn1cblxuLyoqXG4gKiDlronlhajlnLDlsIbkuIDkuKrlr7nosaHluo/liJfljJbkuLrmoLzlvI/ljJbnmoQgSlNPTiDlrZfnrKbkuLLjgIJcbiAqIOWmguaenOW6j+WIl+WMluWksei0pe+8jOS4jeS8muaKm+WHuuW8guW4uO+8jOiAjOaYr+i/lOWbnuS4gOS4quWMheWQq+mUmeivr+S/oeaBr+eahOWtl+espuS4suOAglxuICogQHBhcmFtIHsqfSBvIC0g5b6F5bqP5YiX5YyW55qE5a+56LGh44CCXG4gKiBAcmV0dXJucyB7c3RyaW5nfSDmiJDlip/liJnov5Tlm54gSlNPTiDlrZfnrKbkuLLvvIzlpLHotKXliJnov5Tlm57plJnor6/mj5DnpLrjgIJcbiAqL1xuZXhwb3J0IGNvbnN0IEogPSAobzogYW55KTogc3RyaW5nID0+IHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkobywgbnVsbCwgMik7IC8vIOS9v+eUqCAyIOS4quepuuagvOi/m+ihjOe8qei/m++8jOaPkOmrmOWPr+ivu+aAp+OAglxuICB9IGNhdGNoIChlOiBhbnkpIHtcbiAgICByZXR1cm4gYDw8c3RyaW5naWZ55aSx6LSlOiAke2U/Lm1lc3NhZ2UgfHwgZX0+PmA7XG4gIH1cbn07XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8g5a+56LGh5LiO5pWw5o2u57uT5p6E5pON5L2cXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLyoqXG4gKiDkvb/nlKjigJzmlrDmlbDnu4Topobnm5bml6fmlbDnu4TigJ3nmoTnrZbnlaXmnaXmt7HluqblkIjlubbkuKTkuKrlr7nosaHjgIJcbiAqIOi/meaYryBgXy5tZXJnZWAg55qE5LiA5Liq5Y+Y5L2T77yM5LiT6Zeo55So5LqO5aSE55CG5qih5p2/5ZCI5bm2562J5Zy65pmv77yMXG4gKiDlnKjov5nkupvlnLrmma/kuK3vvIzmiJHku6zluIzmnJvooaXkuIHlr7nosaHkuK3nmoTmlbDnu4Tog73lpJ/lrozlhajmm7/mjaLln7rnoYDlr7nosaHkuK3nmoTmlbDnu4TvvIzogIzkuI3mmK/lkIjlubblroPku6zjgIJcbiAqIEBwYXJhbSB7Kn0gYmFzZSAtIOWfuuehgOWvueixoeOAglxuICogQHBhcmFtIHsqfSBwYXRjaCAtIOihpeS4geWvueixoeOAglxuICogQHJldHVybnMgeyp9IOWQiOW5tuWQjueahOaWsOWvueixoeOAglxuICovXG5leHBvcnQgZnVuY3Rpb24gbWVyZ2VSZXBsYWNlQXJyYXkoYmFzZTogYW55LCBwYXRjaDogYW55KTogYW55IHtcbiAgLy8g5L2/55SoIF8uY2xvbmVEZWVwIOehruS/neS4jeS/ruaUueWOn+Wni+WvueixoeOAglxuICByZXR1cm4gXy5tZXJnZVdpdGgoXy5jbG9uZURlZXAoYmFzZSksIF8uY2xvbmVEZWVwKHBhdGNoKSwgKGE6IGFueSwgYjogYW55KSA9PiB7XG4gICAgLy8g6Ieq5a6a5LmJ5ZCI5bm26YC76L6R77ya5aaC5p6c5Lu75LiA5YC85Li65pWw57uE77yM5YiZ55u05o6l6L+U5Zue6KGl5LiB5YC877yIYu+8ie+8jOS7juiAjOWunueOsOimhuebluOAglxuICAgIGlmIChBcnJheS5pc0FycmF5KGEpIHx8IEFycmF5LmlzQXJyYXkoYikpIHJldHVybiBiO1xuICAgIC8vIOWvueS6jumdnuaVsOe7hOexu+Wei++8jOi/lOWbniB1bmRlZmluZWQg5Lul5L2/55SoIF8ubWVyZ2Ug55qE6buY6K6k5ZCI5bm26KGM5Li644CCXG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfSk7XG59XG5cbi8qKlxuICog5YGl5aOu5Zyw6Kej5p6QIGBFZGl0TG9nYCDnmoTljp/lp4vmlbDmja7jgIJcbiAqIGBFZGl0TG9nYCDlj6/og73ku6XlpJrnp43moLzlvI/lrZjlnKjvvIjlr7nosaHjgIHmlbDnu4TjgIFKU09O5a2X56ym5Liy77yJ77yM5q2k5Ye95pWw5peo5Zyo57uf5LiA5aSE55CG5a6D5Lus44CCXG4gKiBAcGFyYW0geyp9IHJhdyAtIOS7juWPmOmHj+S4reivu+WPlueahOWOn+WniyBgRWRpdExvZ2Ag5pWw5o2u44CCXG4gKiBAcmV0dXJucyB7YW55W119IOino+aekOWQjueahCBgRWRpdExvZ2Ag5pWw57uE44CC5aaC5p6c6Kej5p6Q5aSx6LSl5oiW6L6T5YWl5peg5pWI77yM5YiZ6L+U5Zue5LiA5Liq56m65pWw57uE44CCXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUVkaXRMb2cocmF3OiBhbnkpOiBhbnlbXSB7XG4gIGlmIChBcnJheS5pc0FycmF5KHJhdykpIHJldHVybiByYXc7XG4gIGlmIChyYXcgJiYgdHlwZW9mIHJhdyA9PT0gJ29iamVjdCcpIHJldHVybiBbcmF3XTsgLy8g5Y2V5Liq5a+56LGh5Lmf6KeG5Li65pyJ5pWI5pel5b+XXG4gIGlmICh0eXBlb2YgcmF3ID09PSAnc3RyaW5nJykge1xuICAgIGNvbnN0IHMgPSByYXcucmVwbGFjZSgvXlxccypgYGAoPzpqc29uKT9cXHMqfFxccypgYGBcXHMqJC9nLCAnJyk7IC8vIOenu+mZpOS7o+eggeWbtOagj1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBhcnIgPSBKU09OLnBhcnNlKHMpO1xuICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoYXJyKSA/IGFyciA6IFtdO1xuICAgIH0gY2F0Y2gge1xuICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbiAgfVxuICByZXR1cm4gW107XG59XG5cbi8qKlxuICog6Kej5p6Q5LiA5Liq5YyF5ZCr5aSa5Liq5Liy6IGUIEpTT04g5a+56LGh55qE5a2X56ym5Liy77yI57G75Ly85LqOIEpTT05MIOagvOW8j++8ieOAglxuICog6L+Z56eN5qC85byP5pyJ5pe25Lya55SxIEFJIOeUn+aIkOOAguatpOWHveaVsOiDveWkn+mAkOS4quaPkOWPluW5tuino+aekOWug+S7rOOAglxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHIgLSDlvoXop6PmnpDnmoTlrZfnrKbkuLLjgIJcbiAqIEBwYXJhbSB7TG9nZ2VyfSBbbG9nZ2VyXSAtIOWPr+mAieeahOaXpeW/l+iusOW9leWZqOWunuS+i++8jOeUqOS6juiusOW9leino+aekOmUmeivr+OAglxuICogQHJldHVybnMge2FueVtdfSDop6PmnpDlh7rnmoTlr7nosaHmlbDnu4TjgIJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlSnNvbmwoc3RyOiBzdHJpbmcsIGxvZ2dlcj86IExvZ2dlcik6IGFueVtdIHtcbiAgY29uc3Qgb2JqZWN0czogYW55W10gPSBbXTtcbiAgaWYgKCFzdHIgfHwgdHlwZW9mIHN0ciAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gb2JqZWN0cztcbiAgfVxuXG4gIC8vIOWcqOino+aekOWJje+8jOWFiOenu+mZpOaJgOacieexu+Wei+eahOazqOmHiu+8jOS7peaPkOmrmOino+aekOeahOmygeajkuaAp+OAglxuICBjb25zdCBzdHJXaXRob3V0Q29tbWVudHMgPSBzdHJcbiAgICAucmVwbGFjZSgvXFwvXFwvLiovZywgJycpIC8vIOenu+mZpCAvLyDpo47moLznmoTljZXooYzms6jph4pcbiAgICAucmVwbGFjZSgvXFwvXFwqW1xcc1xcU10qP1xcKlxcLy9nLCAnJykgLy8g56e76ZmkIC8qIC4uLiAqLyDpo47moLznmoTlpJrooYzms6jph4pcbiAgICAucmVwbGFjZSgvPCEtLVtcXHNcXFNdKj8tLT4vZywgJycpOyAvLyDnp7vpmaQgPCEtLSAuLi4gLS0+IOmjjuagvOeahCBIVE1ML1hNTCDms6jph4pcbiAgY29uc3QgdHJpbW1lZFN0ciA9IHN0cldpdGhvdXRDb21tZW50cy50cmltKCk7XG5cbiAgbGV0IGJyYWNlQ291bnQgPSAwOyAvLyDoirHmi6zlj7flubPooaHorqHmlbDlmahcbiAgbGV0IHN0YXJ0SW5kZXggPSAtMTsgLy8g5b2T5YmNIEpTT04g5a+56LGh55qE6LW35aeL57Si5byVXG4gIGxldCBpblN0cmluZyA9IGZhbHNlOyAvLyDmoIforrDmmK/lkKblpITkuo7lj4zlvJXlj7flrZfnrKbkuLLlhoXpg6hcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHRyaW1tZWRTdHIubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBjaGFyID0gdHJpbW1lZFN0cltpXTtcblxuICAgIC8vIOWIh+aNoiBpblN0cmluZyDnirbmgIHvvIzlv73nlaXovazkuYnnmoTlj4zlvJXlj7dcbiAgICBpZiAoY2hhciA9PT0gJ1wiJyAmJiAoaSA9PT0gMCB8fCB0cmltbWVkU3RyW2kgLSAxXSAhPT0gJ1xcXFwnKSkge1xuICAgICAgaW5TdHJpbmcgPSAhaW5TdHJpbmc7XG4gICAgfVxuXG4gICAgLy8g5aaC5p6c5Zyo5a2X56ym5Liy5YaF6YOo77yM5YiZ6Lez6L+H5omA5pyJ6Iqx5ous5Y+355qE6YC76L6R5Yik5patXG4gICAgaWYgKGluU3RyaW5nKSBjb250aW51ZTtcblxuICAgIGlmIChjaGFyID09PSAneycpIHtcbiAgICAgIGlmIChicmFjZUNvdW50ID09PSAwKSB7XG4gICAgICAgIC8vIOWPkeeOsOS4gOS4quaWsCBKU09OIOWvueixoeeahOW8gOWni1xuICAgICAgICBzdGFydEluZGV4ID0gaTtcbiAgICAgIH1cbiAgICAgIGJyYWNlQ291bnQrKztcbiAgICB9IGVsc2UgaWYgKGNoYXIgPT09ICd9Jykge1xuICAgICAgaWYgKGJyYWNlQ291bnQgPiAwKSB7XG4gICAgICAgIGJyYWNlQ291bnQtLTtcbiAgICAgICAgaWYgKGJyYWNlQ291bnQgPT09IDAgJiYgc3RhcnRJbmRleCAhPT0gLTEpIHtcbiAgICAgICAgICAvLyDoirHmi6zlj7flubPooaHvvIzkuIDkuKrlrozmlbTnmoQgSlNPTiDlr7nosaHooqvmib7liLBcbiAgICAgICAgICBjb25zdCBqc29uU3RyaW5nID0gdHJpbW1lZFN0ci5zdWJzdHJpbmcoc3RhcnRJbmRleCwgaSArIDEpO1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBvYmogPSBKU09OLnBhcnNlKGpzb25TdHJpbmcpO1xuICAgICAgICAgICAgb2JqZWN0cy5wdXNoKG9iaik7XG4gICAgICAgICAgfSBjYXRjaCAoZTogYW55KSB7XG4gICAgICAgICAgICAvLyDlpoLmnpzop6PmnpDlpLHotKXvvIzorrDlvZXplJnor6/lubbnu6fnu63vvIzkuI3kuK3mlq3mlbTkuKrov4fnqItcbiAgICAgICAgICAgIGxvZ2dlcj8uZXJyb3IoJ3BhcnNlSnNvbmwnLCBgSlNPTkwg6Kej5p6Q5aSx6LSlOiAke2U/Lm1lc3NhZ2UgfHwgZX0uIOWksei0peeahOeJh+autTogJHtqc29uU3RyaW5nfWAsIGUpO1xuICAgICAgICAgIH1cbiAgICAgICAgICAvLyDph43nva7nirbmgIHvvIzlh4blpIflr7vmib7kuIvkuIDkuKrlr7nosaFcbiAgICAgICAgICBzdGFydEluZGV4ID0gLTE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIG9iamVjdHM7XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gRVJBIOWPmOmHj+ivu+WGmVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8qKlxuICog6YCS5b2S5Zyw5LuO5a+56LGh5Lit56e76Zmk5omA5pyJ5LulIGAkYCDlvIDlpLTnmoTlrZfmrrXvvIjlpoIgYCRtZXRhYCwgYCR0ZW1wbGF0ZWDvvInjgIJcbiAqIOatpOWHveaVsOS8muWIm+W7uuS4gOS4quWvueixoeeahOa3seaLt+i0ne+8jOWboOatpOS4jeS8muS/ruaUueWOn+Wni+WvueixoeOAglxuICogQHBhcmFtIHthbnl9IG9iaiAtIOW+heWkhOeQhueahOWvueixoeaIluWAvOOAglxuICogQHJldHVybnMge2FueX0g5LiA5Liq5LiN5YyF5ZCrIGAkYCDliY3nvIDlrZfmrrXnmoTmlrDlr7nosaHmiJbljp/lp4vlgLzjgIJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZU1ldGFGaWVsZHMob2JqOiBhbnkpOiBhbnkge1xuICAvLyDlr7nkuo7pnZ7lr7nosaHnsbvlnovvvIznm7TmjqXov5Tlm57ljp/lp4vlgLxcbiAgaWYgKCFfLmlzT2JqZWN0KG9iaikpIHtcbiAgICByZXR1cm4gb2JqO1xuICB9XG5cbiAgLy8g5Yib5bu65rex5ou36LSd5Lul6YG/5YWN5L+u5pS55Y6f5aeL5a+56LGhXG4gIGNvbnN0IG5ld09iaiA9IF8uY2xvbmVEZWVwKG9iaik7XG5cbiAgZnVuY3Rpb24gcmVjdXJzZShjdXJyZW50OiBhbnkpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShjdXJyZW50KSkge1xuICAgICAgLy8g5aaC5p6c5piv5pWw57uE77yM5YiZ6YCS5b2S5aSE55CG5pWw57uE5Lit55qE5q+P5Liq5YWD57SgXG4gICAgICBjdXJyZW50LmZvckVhY2goaXRlbSA9PiByZWN1cnNlKGl0ZW0pKTtcbiAgICB9IGVsc2UgaWYgKGlzUE8oY3VycmVudCkpIHtcbiAgICAgIC8vIOWmguaenOaYr+e6r+eyueeahOWvueixoe+8jOmBjeWOhuWFtuaJgOaciemUrlxuICAgICAgZm9yIChjb25zdCBrZXkgaW4gY3VycmVudCkge1xuICAgICAgICAvLyDlpoLmnpzplK7ku6UgJyQnIOW8gOWktO+8jOWImeWIoOmZpOivpeWxnuaAp1xuICAgICAgICBpZiAoa2V5LnN0YXJ0c1dpdGgoJyQnKSkge1xuICAgICAgICAgIGRlbGV0ZSBjdXJyZW50W2tleV07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8g5ZCm5YiZ77yM6YCS5b2S5aSE55CG6K+l5bGe5oCn55qE5YC8XG4gICAgICAgICAgcmVjdXJzZShjdXJyZW50W2tleV0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmVjdXJzZShuZXdPYmopO1xuICByZXR1cm4gbmV3T2JqO1xufVxuXG4vKipcbiAqIOiOt+WPluW5tuehruS/nSBFUkEg55qE5YWD5pWw5o2u5ZKM54q25oCB5pWw5o2u5a+56LGh55qE5a2Y5Zyo44CCXG4gKiBAcmV0dXJucyB7e21ldGE6IG9iamVjdCwgc3RhdDogb2JqZWN0fX0g5YyF5ZCr5YWD5pWw5o2u5ZKM54q25oCB5pWw5o2u55qE5a+56LGh44CCXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRFcmFEYXRhKCk6IHsgbWV0YTogYW55OyBzdGF0OiBhbnkgfSB7XG4gIGNvbnN0IGNoYXRWYXJzID0gZ2V0VmFyaWFibGVzKENIQVRfU0NPUEUpIHx8IHt9O1xuICBjb25zdCBtZXRhID0gXy5nZXQoY2hhdFZhcnMsIE1FVEFfREFUQV9QQVRILCB7fSk7XG4gIGNvbnN0IHN0YXQgPSBfLmdldChjaGF0VmFycywgU1RBVF9EQVRBX1BBVEgsIHt9KTtcbiAgcmV0dXJuIHsgbWV0YSwgc3RhdCB9O1xufVxuXG4vKipcbiAqIOWOn+WtkOaAp+WcsOabtOaWsCBFUkEg55qE54q25oCB5pWw5o2uIChzdGF0X2RhdGEp44CCXG4gKiBAcGFyYW0geyhjdXJyZW50U3RhdERhdGE6IGFueSkgPT4gKGFueSB8IFByb21pc2U8YW55Pil9IHVwZGF0ZXIgLSDkuIDkuKrmjqXmlLblvZPliY0gc3RhdF9kYXRhIOW5tui/lOWbnuS/ruaUueWQjiBzdGF0X2RhdGEg55qE5Ye95pWwICjlj6/ku6XmmK8gYXN5bmMp44CCXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cGRhdGVFcmFTdGF0RGF0YSh1cGRhdGVyOiAoY3VycmVudFN0YXREYXRhOiBhbnkpID0+IGFueSB8IFByb21pc2U8YW55Pikge1xuICBhd2FpdCB1cGRhdGVWYXJpYWJsZXNXaXRoKGFzeW5jIHYgPT4ge1xuICAgIGNvbnN0IGN1cnJlbnRTdGF0ID0gXy5nZXQodiwgU1RBVF9EQVRBX1BBVEgsIHt9KTtcbiAgICBjb25zdCBuZXdTdGF0ID0gYXdhaXQgdXBkYXRlcihjdXJyZW50U3RhdCk7XG4gICAgXy5zZXQodiwgU1RBVF9EQVRBX1BBVEgsIG5ld1N0YXQpO1xuICAgIHJldHVybiB2O1xuICB9LCBDSEFUX1NDT1BFKTtcbn1cblxuLyoqXG4gKiDljp/lrZDmgKflnLDmm7TmlrAgRVJBIOeahOWFg+aVsOaNriAoRVJBTWV0YURhdGEp44CCXG4gKiBAcGFyYW0geyhjdXJyZW50TWV0YURhdGE6IGFueSkgPT4gKGFueSB8IFByb21pc2U8YW55Pil9IHVwZGF0ZXIgLSDkuIDkuKrmjqXmlLblvZPliY0gRVJBTWV0YURhdGEg5bm26L+U5Zue5L+u5pS55ZCOIEVSQU1ldGFEYXRhIOeahOWHveaVsCAo5Y+v5Lul5pivIGFzeW5jKeOAglxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdXBkYXRlRXJhTWV0YURhdGEodXBkYXRlcjogKGN1cnJlbnRNZXRhRGF0YTogYW55KSA9PiBhbnkgfCBQcm9taXNlPGFueT4pIHtcbiAgYXdhaXQgdXBkYXRlVmFyaWFibGVzV2l0aChhc3luYyB2ID0+IHtcbiAgICBjb25zdCBjdXJyZW50TWV0YSA9IF8uZ2V0KHYsIE1FVEFfREFUQV9QQVRILCB7fSk7XG4gICAgY29uc3QgbmV3TWV0YSA9IGF3YWl0IHVwZGF0ZXIoY3VycmVudE1ldGEpO1xuICAgIF8uc2V0KHYsIE1FVEFfREFUQV9QQVRILCBuZXdNZXRhKTtcbiAgICByZXR1cm4gdjtcbiAgfSwgQ0hBVF9TQ09QRSk7XG59XG5cbi8qKlxuICogKirjgJDpgJrnlKjjgJEqKiDmm7TmlrDmjIflrprmtojmga/nmoTlhoXlrrnjgIJcbiAqIOi/meS4qui+heWKqeWHveaVsOWwgeijheS6huWkhOeQhiBgc3dpcGVzYCDlkozmma7pgJogYG1lc3NhZ2VgIOeahOmAu+i+ke+8jOaPkOS+m+S4gOS4que7n+S4gOeahOWGmeWFpeaOpeWPo+OAglxuICogQHBhcmFtIHthbnl9IG1lc3NhZ2UgLSDopoHmm7TmlrDnmoTmtojmga/lr7nosaHjgIJcbiAqIEBwYXJhbSB7c3RyaW5nfSBuZXdDb250ZW50IC0g5YWo5paw55qE5raI5oGv5YaF5a6544CCXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cGRhdGVNZXNzYWdlQ29udGVudChtZXNzYWdlOiBhbnksIG5ld0NvbnRlbnQ6IHN0cmluZykge1xuICBjb25zdCB1cGRhdGVQYXlsb2FkOiB7IG1lc3NhZ2VfaWQ6IG51bWJlcjsgbWVzc2FnZT86IHN0cmluZzsgc3dpcGVzPzogc3RyaW5nW10gfSA9IHtcbiAgICBtZXNzYWdlX2lkOiBtZXNzYWdlLm1lc3NhZ2VfaWQsXG4gIH07XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkobWVzc2FnZS5zd2lwZXMpKSB7XG4gICAgY29uc3Qgc2lkID0gTnVtYmVyKG1lc3NhZ2Uuc3dpcGVfaWQgPz8gMCk7XG4gICAgY29uc3QgbmV3U3dpcGVzID0gWy4uLm1lc3NhZ2Uuc3dpcGVzXTtcbiAgICBuZXdTd2lwZXNbc2lkXSA9IG5ld0NvbnRlbnQ7XG4gICAgdXBkYXRlUGF5bG9hZC5zd2lwZXMgPSBuZXdTd2lwZXM7XG4gIH0gZWxzZSB7XG4gICAgdXBkYXRlUGF5bG9hZC5tZXNzYWdlID0gbmV3Q29udGVudDtcbiAgfVxuXG4gIGF3YWl0IHNldENoYXRNZXNzYWdlcyhbdXBkYXRlUGF5bG9hZF0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/ERA变量框架/utils.ts\n\n}");
  },
  "./src/ERA变量框架/variable_change_processor.ts": 
  /*!**************************************************!*\
  !*** ./src/ERA变量框架/variable_change_processor.ts ***!
  \**************************************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApplyVarChange: () => (/* binding */ ApplyVarChange),\n/* harmony export */   ApplyVarChangeForMessage: () => (/* binding */ ApplyVarChangeForMessage)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/ERA变量框架/constants.ts\");\n/* harmony import */ var _delete__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./delete */ \"./src/ERA变量框架/delete.ts\");\n/* harmony import */ var _insert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./insert */ \"./src/ERA变量框架/insert.ts\");\n/* harmony import */ var _message_key__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./message_key */ \"./src/ERA变量框架/message_key.ts\");\n/* harmony import */ var _message_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./message_utils */ \"./src/ERA变量框架/message_utils.ts\");\n/* harmony import */ var _update__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./update */ \"./src/ERA变量框架/update.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils */ \"./src/ERA变量框架/utils.ts\");\n/**\n * @file ERA 变量框架 - 变量写入模块\n * @description\n * 该模块是 ERA 框架的“执行引擎”，负责将消息内容中的变量修改指令应用到实际的 `chat` 变量中。\n *\n * **设计理念**:\n * 变量的写入是一个严谨的过程，必须确保所有变更都被正确记录，以便后续的回滚和同步。\n * 此模块的核心职责是：\n * 1. **解析指令**: 从 AI 消息中提取 `<VariableInsert>` 和 `<VariableEdit>` 块。\n * 2. **顺序执行**: 确保同一消息内的多个指令块按顺序执行，且后续指令能感知到前面指令的结果。\n * 3. **生成日志**: 在应用变更的同时，调用 `recursive.ts` 中的递归函数来生成精确的 `EditLog`。\n * 4. **覆盖式日志写入**: 确保每个消息密钥（MK）对应的 `EditLog` 严格反映其当前内容，\n *    即使内容中没有任何指令（此时会写入空日志），也要覆盖旧日志，这是防止 `swipe` 造成数据污染的关键。\n *\n * **职责边界**:\n * - 本模块**只负责读取 MK**，不负责创建。创建 MK 的职责由上游的 `message_key.ts` 承担。\n * - `ApplyVarChangeForMessage` 函数**只负责写入变量和 `EditLog`**，不负责更新 `SelectedMks`。\n *   更新 `SelectedMks` 的职责被移交给了更上层的调用者（如 `ApplyVarChange` 或同步函数），\n *   以避免在同步循环中修改正在被读取的状态，这是一种重要的并发控制策略。\n */\n\n\n\n\n\n\n\n\nconst logger = new _utils__WEBPACK_IMPORTED_MODULE_6__.Logger('variable_change_processor');\n/**\n * **【核心实现】** 对指定的消息应用变量修改。\n * 这是变量写入流程的核心，处理单个消息。\n *\n * @param {TavernMessage} msg - 要处理的酒馆消息对象。\n * @returns {Promise<string | null>} 如果成功处理，返回该消息的 MK；如果消息无需处理或处理失败，返回 null。\n */\nconst ApplyVarChangeForMessage = async (msg) => {\n    logger.debug('ApplyVarChangeForMessage', `开始处理消息...`, { msg });\n    try {\n        if (!msg || typeof msg.message_id !== 'number') {\n            logger.warn('ApplyVarChangeForMessage', '无效消息对象或缺少 message_id，退出');\n            return null;\n        }\n        const messageId = msg.message_id;\n        // 写入函数只负责读取 MK，不负责创建。创建的职责由上游的 `ensureMessageKey` 承担。\n        const MK = (0,_message_key__WEBPACK_IMPORTED_MODULE_3__.readMessageKey)(msg);\n        // 如果消息没有 MK（可能是一个异常状态，如新消息还未被注入 MK），则跳过。\n        if (!MK) {\n            logger.debug('ApplyVarChangeForMessage', `消息 (ID: ${messageId}) 不含 MK，跳过变量写入。`);\n            return null;\n        }\n        // 根据设计，用户消息自身不应包含变量修改指令，因此跳过变量处理，但返回其已有的 MK。\n        if ((0,_message_utils__WEBPACK_IMPORTED_MODULE_4__.isUserMessage)(msg)) {\n            logger.debug('ApplyVarChangeForMessage', `消息 (ID: ${messageId}) 为用户消息，跳过变量写入，但保留其 MK。`);\n            return MK;\n        }\n        const rawContent = (0,_message_utils__WEBPACK_IMPORTED_MODULE_4__.getMessageContent)(msg) || '';\n        // 1. 从消息内容中解析出所有指令块。\n        const insertBlocks = (0,_utils__WEBPACK_IMPORTED_MODULE_6__.extractBlocks)(rawContent, 'VariableInsert');\n        const editBlocks = (0,_utils__WEBPACK_IMPORTED_MODULE_6__.extractBlocks)(rawContent, 'VariableEdit');\n        const deleteBlocks = (0,_utils__WEBPACK_IMPORTED_MODULE_6__.extractBlocks)(rawContent, 'VariableDelete');\n        if (!insertBlocks.length && !editBlocks.length && !deleteBlocks.length) {\n            logger.debug('ApplyVarChangeForMessage', `消息 (ID: ${messageId}) 未检测到变量修改标签。`);\n        }\n        const rawInserts = insertBlocks.flatMap(s => (0,_utils__WEBPACK_IMPORTED_MODULE_6__.parseJsonl)(s, logger));\n        const rawEdits = editBlocks.flatMap(s => (0,_utils__WEBPACK_IMPORTED_MODULE_6__.parseJsonl)(s, logger));\n        const rawDeletes = deleteBlocks.flatMap(s => (0,_utils__WEBPACK_IMPORTED_MODULE_6__.parseJsonl)(s, logger));\n        // 在这里对从消息中解析出的原始数据进行转义，确保所有后续处理都使用转义后的数据。\n        const allInserts = (0,_utils__WEBPACK_IMPORTED_MODULE_6__.escapeEraData)(rawInserts);\n        const allEdits = (0,_utils__WEBPACK_IMPORTED_MODULE_6__.escapeEraData)(rawEdits);\n        const allDeletes = (0,_utils__WEBPACK_IMPORTED_MODULE_6__.escapeEraData)(rawDeletes);\n        logger.debug('ApplyVarChangeForMessage', '数据转义完成', {\n            before: { inserts: rawInserts, edits: rawEdits, deletes: rawDeletes },\n            after: { inserts: allInserts, edits: allEdits, deletes: allDeletes },\n        });\n        const editLog = []; // 用于收集本轮操作产生的所有变更记录。\n        // 2. --- 处理所有插入操作 (`<VariableInsert>`) ---\n        await (0,_insert__WEBPACK_IMPORTED_MODULE_2__.processInsertBlocks)(allInserts, editLog);\n        // 3. --- 处理所有编辑操作 (`<VariableEdit>`) ---\n        await (0,_update__WEBPACK_IMPORTED_MODULE_5__.processEditBlocks)(allEdits, editLog, messageId);\n        // 4. --- 处理所有删除操作 (`<VariableDelete>`) ---\n        await (0,_delete__WEBPACK_IMPORTED_MODULE_1__.processDeleteBlocks)(allDeletes, editLog);\n        // 5. --- 覆盖式写入 EditLog ---\n        /*\n         * 核心逻辑：无论本轮是否产生了有效的变量修改，都必须用当前的 editLog (哪怕是空数组) 覆盖旧的 EditLog。\n         *\n         * 为什么必须覆盖而不是在没有修改时跳过？\n         *\n         * 根本原因在于，必须确保每个 MK 对应的 EditLog，严格且唯一地反映其所属消息**当前内容**所产生的变量修改。\n         *\n         * 考虑一个场景：\n         * 1. 消息A (MK_A) 的内容包含指令，生成了 EditLog_A。\n         * 2. 用户对消息A进行 swipe，生成了消息B (MK_B)，其内容完全没有变量修改标签。\n         *\n         * 如果在处理消息B时，因为没有检测到指令就“跳过写入”，那么与 MK_B 关联的 EditLog 就会是空的或不存在的。\n         * 这在当前是正确的。\n         *\n         * 但如果用户再次 swipe，从消息B切换回消息A。此时框架会重新处理消息A。\n         * 如果我们不执行覆盖式写入，那么与 MK_A 关联的 EditLog 仍然是之前生成的 EditLog_A，这没有问题。\n         *\n         * 真正的问题在于状态的明确性。覆盖式写入确保了任何一个 MK 的日志，在任何时间点，\n         * 都是其**当前可见内容**的直接产物，没有任何历史遗留。这使得整个系统的状态变迁变得清晰、可预测，\n         * 极大地降低了在复杂操作（如多次 `swipe`、删除、编辑）中出现状态不一致的风险。\n         *\n         * 因此，正确的做法是：用本次解析消息内容生成的 editLog (在无指令的场景下是 `[]`) 去覆盖，\n         * 从而斩断任何可能存在的历史关联，确保数据的一致性和纯粹性。\n         */\n        try {\n            await (0,_utils__WEBPACK_IMPORTED_MODULE_6__.updateEraMetaData)(meta => {\n                const newArr = Array.isArray(editLog) ? editLog : (0,_utils__WEBPACK_IMPORTED_MODULE_6__.parseEditLog)(editLog);\n                logger.debug('ApplyVarChangeForMessage', `准备为 MK=${MK} (MsgID=${messageId}) 写入 EditLog:\\n${JSON.stringify(newArr, null, 2)}`);\n                // 将本轮生成的日志数组，以当前消息的 MK 为键，存入 `EditLogs` 对象。\n                _.set(meta, [_constants__WEBPACK_IMPORTED_MODULE_0__.LOGS_PATH, MK], JSON.stringify(newArr));\n                /*\n                 * N.B. 此函数不再负责更新 SelectedMks 数组。\n                 * 更新 SelectedMks 的职责已移交至上层调用者 (resyncStateOnHistoryChange 或 ApplyVarChange)，\n                 * 以避免在 resync 循环中意外修改正在被读取的 oldSelectedMks 状态。\n                 */\n                return meta;\n            });\n            logger.debug('ApplyVarChangeForMessage', `成功为 MK=${MK} 写入 EditLog。`);\n        }\n        catch (e) {\n            logger.error('ApplyVarChangeForMessage', `为 MK=${MK} 写入 EditLogs 失败: ${e?.message || e}`, e);\n        }\n        return MK;\n    }\n    catch (err) {\n        logger.error('ApplyVarChangeForMessage', `变量写入器异常: ${err?.message || err}`, err);\n        return null;\n    }\n};\n/**\n * **【标准事件处理入口】**\n * 这是一个上层封装，用于处理最新 AI 消息的变量写入，并负责更新 `SelectedMks` 数组。\n * 它会自动寻找最后一条 AI 消息进行操作，通常被绑定到“新消息生成”等事件上。\n */\nconst ApplyVarChange = async () => {\n    logger.debug('ApplyVarChange', `函数被调用...`);\n    // 1. 智能查找最后一条 AI 消息\n    const msg = (0,_message_utils__WEBPACK_IMPORTED_MODULE_4__.findLastAiMessage)();\n    if (!msg || typeof msg.message_id !== 'number') {\n        logger.log('ApplyVarChange', '未找到可处理的 AI 消息，退出。');\n        return;\n    }\n    const messageId = msg.message_id;\n    logger.log('ApplyVarChange', `找到目标 AI 消息 (ID: ${messageId})，开始处理变量写入...`);\n    // 2. 调用核心实现来处理变量和 EditLog 的写入。\n    // EditLog 会被自动关联到从该消息中读取到的 MK 上。\n    const MK = await ApplyVarChangeForMessage(msg);\n    // 3. 在核心流程执行完毕后，在此处统一更新 SelectedMks，确保状态一致。\n    try {\n        await (0,_utils__WEBPACK_IMPORTED_MODULE_6__.updateEraMetaData)(meta => {\n            const selectedMks = _.get(meta, _constants__WEBPACK_IMPORTED_MODULE_0__.SEL_PATH, []);\n            // 关键：必须使用我们正在处理的 AI 消息的 messageId 作为索引，\n            // 来更新 SelectedMks 数组中对应的 MK 记录。\n            selectedMks[messageId] = MK;\n            _.set(meta, _constants__WEBPACK_IMPORTED_MODULE_0__.SEL_PATH, selectedMks);\n            return meta;\n        });\n    }\n    catch (e) {\n        logger.error('ApplyVarChange', `更新 SelectedMks 失败: ${e?.message || e}`, e);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/variable_change_processor.ts\n\n}");
  },
  lodash: 
  /*!********************!*\
  !*** external "_" ***!
  \********************/ module => {
    module.exports = _;
  }
};

var __webpack_module_cache__ = {};

function __webpack_require__(moduleId) {
  var cachedModule = __webpack_module_cache__[moduleId];
  if (cachedModule !== undefined) {
    return cachedModule.exports;
  }
  var module = __webpack_module_cache__[moduleId] = {
    exports: {}
  };
  __webpack_modules__[moduleId](module, module.exports, __webpack_require__);
  return module.exports;
}

(() => {
  __webpack_require__.n = module => {
    var getter = module && module.__esModule ? () => module["default"] : () => module;
    __webpack_require__.d(getter, {
      a: getter
    });
    return getter;
  };
})();

(() => {
  __webpack_require__.d = (exports, definition) => {
    for (var key in definition) {
      if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: definition[key]
        });
      }
    }
  };
})();

(() => {
  __webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);
})();

(() => {
  __webpack_require__.r = exports => {
    if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
      Object.defineProperty(exports, Symbol.toStringTag, {
        value: "Module"
      });
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
  };
})();

var __webpack_exports__ = __webpack_require__("./src/ERA变量框架/index.ts");