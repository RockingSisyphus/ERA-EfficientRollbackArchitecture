var __webpack_modules__ = {
  "./src/ERA变量框架/api/command.ts": 
  /*!************************************!*\
  !*** ./src/ERA变量框架/api/command.ts ***!
  \************************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteByObject: () => (/* binding */ deleteByObject),\n/* harmony export */   deleteByPath: () => (/* binding */ deleteByPath),\n/* harmony export */   emitWriteDoneEvent: () => (/* binding */ emitWriteDoneEvent),\n/* harmony export */   insertByObject: () => (/* binding */ insertByObject),\n/* harmony export */   insertByPath: () => (/* binding */ insertByPath),\n/* harmony export */   updateByObject: () => (/* binding */ updateByObject),\n/* harmony export */   updateByPath: () => (/* binding */ updateByPath)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ \"lodash\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/constants */ \"./src/ERA变量框架/utils/constants.ts\");\n/* harmony import */ var _utils_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/data */ \"./src/ERA变量框架/utils/data.ts\");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/log */ \"./src/ERA变量框架/utils/log.ts\");\n/* harmony import */ var _utils_message__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/message */ \"./src/ERA变量框架/utils/message.ts\");\n/**\n * @file ERA 变量框架 - 外部事件 API 实现模块\n * @description\n * 该模块是 ERA 框架与外部脚本交互的接口层。它实现了一系列自定义事件的处理器。\n *\n * **设计理念**:\n * ERA 框架不直接向外暴露函数调用接口。外部脚本与 ERA 交互的**唯一**方式是通过酒馆的\n * `eventEmit(eventName, eventData)` 函数，发送特定格式的事件。\n *\n * `index.ts` 模块会监听这些 `era:*` 前缀的事件，并将其推入 `event_queue.ts` 中进行处理。\n * 事件队列最终会调用本文件中对应的处理器函数（如 `insertByObject`）。\n *\n * 本模块中的函数通过一种巧妙、解耦的方式工作：它们在最新的 AI 消息末尾动态注入\n * `<VariableInsert>` 或 `<VariableEdit>` 指令块，然后调用酒馆的 `setChatMessages` 更新消息。\n * 这次修改会触发 `character_message_rendered` 等事件，被 ERA 的主监听器捕获，\n * 从而将 API 调用无缝地整合到 ERA 的原生解析和同步流程中。\n */\n\n\n\n\n\nconst logger = new _utils_log__WEBPACK_IMPORTED_MODULE_3__.Logger('api-command');\n// 使用 lodash.debounce 创建一个防抖函数来发送 API 写入事件\nconst debouncedEmitApiWrite = lodash__WEBPACK_IMPORTED_MODULE_0___default().debounce(() => {\n    eventEmit(_utils_constants__WEBPACK_IMPORTED_MODULE_1__.ERA_EVENT_EMITTER.API_WRITE);\n    logger.log('debouncedEmitApiWrite', `已触发合并后的 ${_utils_constants__WEBPACK_IMPORTED_MODULE_1__.ERA_EVENT_EMITTER.API_WRITE} 事件。`);\n}, 50, //API调用的防抖改成50毫秒，提高即时性\n{ leading: false, trailing: true });\n// ==================================================================\n// API 事件参考\n// (事件名称的常量定义见于 `constants.ts` 中的 `ERA_API_EVENTS` 对象)\n// ==================================================================\n/**\n * @section API Event: 'era:insertByObject'\n * @description 通过一个对象，非破坏性地插入新变量。只会写入不存在的路径。\n * @param {object} detail - 要插入的变量对象。\n * @example\n * eventEmit('era:insertByObject', {\n *   player: { name: \"勇者\", hp: 100, inventory: [] }\n * });\n */\n/**\n * @section API Event: 'era:updateByObject'\n * @description 通过一个对象，修改已存在的变量。如果路径不存在，则忽略。\n * @param {object} detail - 要更新的变量对象。\n * @example\n * eventEmit('era:updateByObject', {\n *   player: { hp: 120, status: 'blessed' }\n * });\n */\n/**\n * @section API Event: 'era:insertByPath'\n * @description 通过指定路径和值，非破坏性地插入一个新变量。\n * @param {object} detail - 包含路径和值的对象。\n * @param {string} detail.path - 变量的路径，使用点或方括号表示法。\n * @param {*} detail.value - 要插入的值。\n * @example\n * eventEmit('era:insertByPath', {\n *   path: 'player.inventory[0]',\n *   value: { name: '生命药水', count: 3 }\n * });\n */\n/**\n * @section API Event: 'era:updateByPath'\n * @description 通过指定路径和值，修改一个已存在的变量。\n * @param {object} detail - 包含路径和值的对象。\n * @param {string} detail.path - 变量的路径。\n * @param {*} detail.value - 要设置的新值。可以是直接的值，也可以是运算表达式。\n * @example\n * eventEmit('era:updateByPath', {\n *   path: 'player.hp',\n *   value: '+=10'\n * });\n */\n/**\n * @section API Event: 'era:deleteByObject'\n * @description 通过一个对象，删除已存在的变量。\n * @param {object} detail - 描述要删除路径的结构。值的结构决定了删除行为。\n * @example\n * // 准备删除 player.gold。指令中 gold 的值必须是空对象 {}\n * eventEmit('era:deleteByObject', { player: { gold: {} } });\n *\n * // 准备删除整个 player 对象。\n * eventEmit('era:deleteByObject', { player: {} });\n *\n * // **重要**: 如果 player 对象包含 gold 和 mana 两个属性，\n * // 以下指令只会删除 gold 和 mana，而 player 对象本身会被保留（变为空对象）。\n * // 这与 `eventEmit('era:deleteByObject', { player: {} })` 的效果是不同的。\n * eventEmit('era:deleteByObject', { player: { gold: {}, mana: {} } });\n */\n/**\n * @section API Event: 'era:deleteByPath'\n * @description 通过指定路径，删除一个已存在的变量。\n * @param {object} detail - 包含路径的对象。\n * @param {string} detail.path - 要删除的变量的路径。\n * @example\n * eventEmit('era:deleteByPath', { path: 'player.inventory[0]' });\n */\n// ==================================================================\n// 内部核心函数\n// ==================================================================\n/**\n * 在聊天记录中查找并返回最后一条由 AI 发送的消息。\n * 这是注入变量修改指令的目标消息。\n * @returns {Promise<any | null>} 返回找到的消息对象，如果不存在 AI 消息则返回 null。\n */\n/**\n * 执行一次 API 写入操作。\n * 它将指定的变量修改块追加到最后一条 AI 消息的末尾，然后调度一个 'era:apiWrite' 事件。\n * @param {ApiWriteJob} job - 要执行的写入任务。\n */\nasync function performApiWrite(job) {\n    // 1. 生成指令块\n    const contentString = (0,_utils_data__WEBPACK_IMPORTED_MODULE_2__.J)(job.blockContent);\n    const block = `\\n<${job.blockTag}>\\n${contentString}\\n</${job.blockTag}>`;\n    // 2. 查找目标消息并追加内容\n    const lastAiMessage = await (0,_utils_message__WEBPACK_IMPORTED_MODULE_4__.findLastAiMessage)();\n    if (!lastAiMessage) {\n        logger.warn('performApiWrite', '找不到任何 AI 消息，无法执行 API 写入。');\n        return;\n    }\n    const originalContent = (0,_utils_message__WEBPACK_IMPORTED_MODULE_4__.getMessageContent)(lastAiMessage) ?? '';\n    const newContent = originalContent + block;\n    logger.log('performApiWrite', `实时写入 API 任务 (${job.blockTag}) 到消息 ID ${lastAiMessage.message_id}...`);\n    // 3. 实时更新消息内容\n    await (0,_utils_message__WEBPACK_IMPORTED_MODULE_4__.updateMessageContent)(lastAiMessage, newContent);\n    // 4. 调用防抖函数来调度写入事件的发送\n    debouncedEmitApiWrite();\n}\n// ==================================================================\n// 事件处理器实现 (由 event_queue.ts 调用)\n// ==================================================================\n/**\n * **【处理器】** 处理 `era:insertByObject` 事件。\n * @param {object} data - 从事件的 `detail` 中获取的变量对象。\n */\nfunction insertByObject(data) {\n    performApiWrite({ blockTag: 'VariableInsert', blockContent: data });\n}\n/**\n * **【处理器】** 处理 `era:updateByObject` 事件。\n * @param {object} data - 从事件的 `detail` 中获取的变量对象。\n */\nfunction updateByObject(data) {\n    performApiWrite({ blockTag: 'VariableEdit', blockContent: data });\n}\n/**\n * **【处理器】** 处理 `era:insertByPath` 事件。\n * @param {string} path - 从事件 `detail` 的 `path` 属性获取。\n * @param {*} value - 从事件 `detail` 的 `value` 属性获取。\n */\nfunction insertByPath(path, value) {\n    const block = lodash__WEBPACK_IMPORTED_MODULE_0___default().set({}, path, value);\n    performApiWrite({ blockTag: 'VariableInsert', blockContent: block });\n}\n/**\n * **【处理器】** 处理 `era:updateByPath` 事件。\n * @param {string} path - 从事件 `detail` 的 `path` 属性获取。\n * @param {*} value - 从事件 `detail` 的 `value` 属性获取。\n */\nfunction updateByPath(path, value) {\n    const block = lodash__WEBPACK_IMPORTED_MODULE_0___default().set({}, path, value);\n    performApiWrite({ blockTag: 'VariableEdit', blockContent: block });\n}\n/**\n * **【处理器】** 处理 `era:deleteByObject` 事件。\n * @param {object} data - 从事件的 `detail` 中获取的变量结构。\n */\nfunction deleteByObject(data) {\n    performApiWrite({ blockTag: 'VariableDelete', blockContent: data });\n}\n/**\n * **【处理器】** 处理 `era:deleteByPath` 事件。\n * @param {string} path - 从事件 `detail` 的 `path` 属性获取。\n */\nfunction deleteByPath(path) {\n    // 对于删除操作，我们用一个空对象作为值来表示删除该路径的意图\n    const block = lodash__WEBPACK_IMPORTED_MODULE_0___default().set({}, path, {});\n    performApiWrite({ blockTag: 'VariableDelete', blockContent: block });\n}\n// ==================================================================\n// 事件广播器实现 (由 variable_change_processor.ts 等内部模块调用)\n// ==================================================================\n/**\n * **【广播器】** 触发 `era:writeDone` 事件。\n * 当一次完整的变量写入操作（包括增、删、改）在 `variable_change_processor.ts` 中成功完成后，\n * 应调用此函数。它向外部脚本广播一个事件，通知它们变量状态已发生改变，并提供详细的上下文。\n *\n * @param {WriteDonePayload} payload - 包含写入操作关键信息的事件负载。\n * @example\n * // 这是一个在外部脚本中监听此事件的示例：\n * eventOn('era:writeDone', (detail) => {\n *   const { mk, message_id, actions, selectedMks, editLogs, stat, statWithoutMeta } = detail;\n *   console.log(`ERA 变量已更新！消息 ID: ${message_id}, MK: ${mk}`);\n *   console.log('执行的操作:', actions);\n *\n *   // 你可以根据需要使用 stat (带 meta) 或 statWithoutMeta (不带 meta)\n *   console.log('最新的纯净状态数据:', statWithoutMeta);\n *\n *   // 此时可以根据最新的状态数据更新你自己的 UI 或执行其他逻辑\n * });\n */\nfunction emitWriteDoneEvent(payload) {\n    // 在广播前，对需要暴露给外部的数据进行反转义\n    const unescapedPayload = {\n        ...payload,\n        stat: (0,_utils_data__WEBPACK_IMPORTED_MODULE_2__.unescapeEraData)(payload.stat),\n        statWithoutMeta: (0,_utils_data__WEBPACK_IMPORTED_MODULE_2__.unescapeEraData)(payload.statWithoutMeta),\n    };\n    logger.debug('emitWriteDoneEvent', 'writeDone事件广播数据反转义', {\n        before: { stat: payload.stat, statWithoutMeta: payload.statWithoutMeta },\n        after: { stat: unescapedPayload.stat, statWithoutMeta: unescapedPayload.statWithoutMeta },\n    });\n    eventEmit(_utils_constants__WEBPACK_IMPORTED_MODULE_1__.ERA_EVENT_EMITTER.WRITE_DONE, unescapedPayload);\n    logger.log('emitWriteDoneEvent', `已触发 ${_utils_constants__WEBPACK_IMPORTED_MODULE_1__.ERA_EVENT_EMITTER.WRITE_DONE} 事件。操作: ${JSON.stringify(payload.actions)}, MK: ${payload.mk}, MsgID: ${payload.message_id}, 连续处理次数: ${payload.consecutiveProcessingCount}`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/api/command.ts\n\n}");
  },
  "./src/ERA变量框架/api/macro/parser.ts": 
  /*!*****************************************!*\
  !*** ./src/ERA变量框架/api/macro/parser.ts ***!
  \*****************************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseEraMacros: () => (/* binding */ parseEraMacros)\n/* harmony export */ });\n/* harmony import */ var _utils_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/data */ \"./src/ERA变量框架/utils/data.ts\");\n/* harmony import */ var _utils_era_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/era_data */ \"./src/ERA变量框架/utils/era_data.ts\");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/log */ \"./src/ERA变量框架/utils/log.ts\");\n\n\n\nconst logger = new _utils_log__WEBPACK_IMPORTED_MODULE_2__.Logger('api-macro-parser');\n/**\n * 解析字符串中的 ERA 宏, 并将其替换为对应的变量值。\n * 这是提供给其他模块调用的公共接口。\n * @param text - 包含宏的输入字符串。\n * @returns - 替换宏后的字符串。\n */\nfunction parseEraMacros(text) {\n    const macroRegex = /{{\\s*ERA(-withmeta)?\\s*:\\s*([^}]+?)\\s*}}/gi;\n    // 如果文本中不包含宏特征字符串, 直接返回以优化性能\n    if (!text.includes('{{ERA')) {\n        return text;\n    }\n    // 获取 stat_data\n    const { stat } = (0,_utils_era_data__WEBPACK_IMPORTED_MODULE_1__.getEraData)();\n    if (!stat) {\n        logger.warn('parseEraMacros', '无法获取到 stat_data, 宏替换失败.');\n        // 如果没有 stat_data, 任何宏都无法解析, 直接返回原文本\n        return text;\n    }\n    return text.replace(macroRegex, (substring, withMeta, path) => {\n        const funcName = 'parseEraMacros';\n        const trimmedPath = path.trim();\n        const includeMeta = !!withMeta;\n        let data;\n        if (trimmedPath === '$ALLDATA') {\n            data = stat;\n        }\n        else {\n            data = _.get(stat, trimmedPath);\n        }\n        if (data === undefined) {\n            logger.warn(funcName, `在 stat_data 中未找到路径 \"${trimmedPath}\", 宏将替换为空字符串.`);\n            return ''; // 路径未找到, 返回空字符串\n        }\n        // 根据 withMeta 标志决定是否移除 $meta 字段\n        const dataBeforeUnescape = includeMeta ? data : (0,_utils_era_data__WEBPACK_IMPORTED_MODULE_1__.removeMetaFields)(data);\n        // 在返回数据前进行反转义\n        const finalData = (0,_utils_data__WEBPACK_IMPORTED_MODULE_0__.unescapeEraData)(dataBeforeUnescape);\n        logger.debug('parseEraMacros', `宏替换数据反转义: ${trimmedPath}`, {\n            before: dataBeforeUnescape,\n            after: finalData,\n        });\n        // 如果是对象或数组, 转换为 JSON 字符串\n        if (typeof finalData === 'object' && finalData !== null) {\n            return JSON.stringify(finalData);\n        }\n        // 如果是原始类型, 直接转换为字符串\n        return String(finalData);\n    });\n}\n$(() => {\n    /**\n     * 注册 ERA 宏, 用于在发送给 AI 的消息中查询当前聊天的变量数据\n     *\n     * - `{{ERA:path.to.data}}`: 查询并替换为**不含** `$meta` 的纯净数据。\n     *   - `{{ERA:$ALLDATA}}` 将返回整个移除 `$meta` 后的 `stat_data` 对象。\n     * - `{{ERA-withmeta:path.to.data}}`: 查询并替换为**包含** `$meta` 的原始数据。\n     *   - `{{ERA-withmeta:$ALLDATA}}` 将返回完整的 `stat_data` 对象。\n     */\n    registerMacroLike(/{{\\s*ERA(-withmeta)?\\s*:\\s*([^}]+?)\\s*}}/gi, (context, substring, withMeta, path) => {\n        // 直接复用 parseEraMacros 函数的逻辑。\n        // substring 参数是匹配到的完整宏字符串, 如 \"{{ERA:path.to.data}}\"\n        return parseEraMacros(substring);\n    });\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvRVJB5Y+Y6YeP5qGG5p62L2FwaS9tYWNyby9wYXJzZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFtRDtBQUNpQjtBQUMzQjtBQUV6QyxNQUFNLE1BQU0sR0FBRyxJQUFJLDhDQUFNLENBQUMsa0JBQWtCLENBQUMsQ0FBQztBQUU5Qzs7Ozs7R0FLRztBQUNJLFNBQVMsY0FBYyxDQUFDLElBQVk7SUFDekMsTUFBTSxVQUFVLEdBQUcsNENBQTRDLENBQUM7SUFFaEUsNEJBQTRCO0lBQzVCLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7UUFDNUIsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsZUFBZTtJQUNmLE1BQU0sRUFBRSxJQUFJLEVBQUUsR0FBRywyREFBVSxFQUFFLENBQUM7SUFDOUIsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ1YsTUFBTSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSx5QkFBeUIsQ0FBQyxDQUFDO1FBQ3pELG9DQUFvQztRQUNwQyxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFLENBQUMsU0FBUyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsRUFBRTtRQUM1RCxNQUFNLFFBQVEsR0FBRyxnQkFBZ0IsQ0FBQztRQUNsQyxNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDaEMsTUFBTSxXQUFXLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQztRQUUvQixJQUFJLElBQUksQ0FBQztRQUNULElBQUksV0FBVyxLQUFLLFVBQVUsRUFBRSxDQUFDO1lBQy9CLElBQUksR0FBRyxJQUFJLENBQUM7UUFDZCxDQUFDO2FBQU0sQ0FBQztZQUNOLElBQUksR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxXQUFXLENBQUMsQ0FBQztRQUNsQyxDQUFDO1FBRUQsSUFBSSxJQUFJLEtBQUssU0FBUyxFQUFFLENBQUM7WUFDdkIsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsdUJBQXVCLFdBQVcsZUFBZSxDQUFDLENBQUM7WUFDekUsT0FBTyxFQUFFLENBQUMsQ0FBQyxnQkFBZ0I7UUFDN0IsQ0FBQztRQUVELGdDQUFnQztRQUNoQyxNQUFNLGtCQUFrQixHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxpRUFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUV2RSxjQUFjO1FBQ2QsTUFBTSxTQUFTLEdBQUcsNERBQWUsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBRXRELE1BQU0sQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLEVBQUUsYUFBYSxXQUFXLEVBQUUsRUFBRTtZQUN6RCxNQUFNLEVBQUUsa0JBQWtCO1lBQzFCLEtBQUssRUFBRSxTQUFTO1NBQ2pCLENBQUMsQ0FBQztRQUVILHlCQUF5QjtRQUN6QixJQUFJLE9BQU8sU0FBUyxLQUFLLFFBQVEsSUFBSSxTQUFTLEtBQUssSUFBSSxFQUFFLENBQUM7WUFDeEQsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ25DLENBQUM7UUFFRCxvQkFBb0I7UUFDcEIsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDM0IsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDO0FBRUQsQ0FBQyxDQUFDLEdBQUcsRUFBRTtJQUNMOzs7Ozs7O09BT0c7SUFDSCxpQkFBaUIsQ0FBQyw0Q0FBNEMsRUFBRSxDQUFDLE9BQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxFQUFFO1FBQ3JHLDZCQUE2QjtRQUM3QixvREFBb0Q7UUFDcEQsT0FBTyxjQUFjLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDbkMsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsic3JjOi8vdGF2ZXJuX2hlbHBlcl90ZW1wbGF0ZS9zcmMvRVJB5Y+Y6YeP5qGG5p62L2FwaS9tYWNyby9wYXJzZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdW5lc2NhcGVFcmFEYXRhIH0gZnJvbSAnLi4vLi4vdXRpbHMvZGF0YSc7XG5pbXBvcnQgeyBnZXRFcmFEYXRhLCByZW1vdmVNZXRhRmllbGRzIH0gZnJvbSAnLi4vLi4vdXRpbHMvZXJhX2RhdGEnO1xuaW1wb3J0IHsgTG9nZ2VyIH0gZnJvbSAnLi4vLi4vdXRpbHMvbG9nJztcblxuY29uc3QgbG9nZ2VyID0gbmV3IExvZ2dlcignYXBpLW1hY3JvLXBhcnNlcicpO1xuXG4vKipcbiAqIOino+aekOWtl+espuS4suS4reeahCBFUkEg5a6PLCDlubblsIblhbbmm7/mjaLkuLrlr7nlupTnmoTlj5jph4/lgLzjgIJcbiAqIOi/meaYr+aPkOS+m+e7meWFtuS7luaooeWdl+iwg+eUqOeahOWFrOWFseaOpeWPo+OAglxuICogQHBhcmFtIHRleHQgLSDljIXlkKvlro/nmoTovpPlhaXlrZfnrKbkuLLjgIJcbiAqIEByZXR1cm5zIC0g5pu/5o2i5a6P5ZCO55qE5a2X56ym5Liy44CCXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUVyYU1hY3Jvcyh0ZXh0OiBzdHJpbmcpOiBzdHJpbmcge1xuICBjb25zdCBtYWNyb1JlZ2V4ID0gL3t7XFxzKkVSQSgtd2l0aG1ldGEpP1xccyo6XFxzKihbXn1dKz8pXFxzKn19L2dpO1xuXG4gIC8vIOWmguaenOaWh+acrOS4reS4jeWMheWQq+Wuj+eJueW+geWtl+espuS4siwg55u05o6l6L+U5Zue5Lul5LyY5YyW5oCn6IO9XG4gIGlmICghdGV4dC5pbmNsdWRlcygne3tFUkEnKSkge1xuICAgIHJldHVybiB0ZXh0O1xuICB9XG5cbiAgLy8g6I635Y+WIHN0YXRfZGF0YVxuICBjb25zdCB7IHN0YXQgfSA9IGdldEVyYURhdGEoKTtcbiAgaWYgKCFzdGF0KSB7XG4gICAgbG9nZ2VyLndhcm4oJ3BhcnNlRXJhTWFjcm9zJywgJ+aXoOazleiOt+WPluWIsCBzdGF0X2RhdGEsIOWuj+abv+aNouWksei0pS4nKTtcbiAgICAvLyDlpoLmnpzmsqHmnIkgc3RhdF9kYXRhLCDku7vkvZXlro/pg73ml6Dms5Xop6PmnpAsIOebtOaOpei/lOWbnuWOn+aWh+acrFxuICAgIHJldHVybiB0ZXh0O1xuICB9XG5cbiAgcmV0dXJuIHRleHQucmVwbGFjZShtYWNyb1JlZ2V4LCAoc3Vic3RyaW5nLCB3aXRoTWV0YSwgcGF0aCkgPT4ge1xuICAgIGNvbnN0IGZ1bmNOYW1lID0gJ3BhcnNlRXJhTWFjcm9zJztcbiAgICBjb25zdCB0cmltbWVkUGF0aCA9IHBhdGgudHJpbSgpO1xuICAgIGNvbnN0IGluY2x1ZGVNZXRhID0gISF3aXRoTWV0YTtcblxuICAgIGxldCBkYXRhO1xuICAgIGlmICh0cmltbWVkUGF0aCA9PT0gJyRBTExEQVRBJykge1xuICAgICAgZGF0YSA9IHN0YXQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRhdGEgPSBfLmdldChzdGF0LCB0cmltbWVkUGF0aCk7XG4gICAgfVxuXG4gICAgaWYgKGRhdGEgPT09IHVuZGVmaW5lZCkge1xuICAgICAgbG9nZ2VyLndhcm4oZnVuY05hbWUsIGDlnKggc3RhdF9kYXRhIOS4reacquaJvuWIsOi3r+W+hCBcIiR7dHJpbW1lZFBhdGh9XCIsIOWuj+Wwhuabv+aNouS4uuepuuWtl+espuS4si5gKTtcbiAgICAgIHJldHVybiAnJzsgLy8g6Lev5b6E5pyq5om+5YiwLCDov5Tlm57nqbrlrZfnrKbkuLJcbiAgICB9XG5cbiAgICAvLyDmoLnmja4gd2l0aE1ldGEg5qCH5b+X5Yaz5a6a5piv5ZCm56e76ZmkICRtZXRhIOWtl+autVxuICAgIGNvbnN0IGRhdGFCZWZvcmVVbmVzY2FwZSA9IGluY2x1ZGVNZXRhID8gZGF0YSA6IHJlbW92ZU1ldGFGaWVsZHMoZGF0YSk7XG5cbiAgICAvLyDlnKjov5Tlm57mlbDmja7liY3ov5vooYzlj43ovazkuYlcbiAgICBjb25zdCBmaW5hbERhdGEgPSB1bmVzY2FwZUVyYURhdGEoZGF0YUJlZm9yZVVuZXNjYXBlKTtcblxuICAgIGxvZ2dlci5kZWJ1ZygncGFyc2VFcmFNYWNyb3MnLCBg5a6P5pu/5o2i5pWw5o2u5Y+N6L2s5LmJOiAke3RyaW1tZWRQYXRofWAsIHtcbiAgICAgIGJlZm9yZTogZGF0YUJlZm9yZVVuZXNjYXBlLFxuICAgICAgYWZ0ZXI6IGZpbmFsRGF0YSxcbiAgICB9KTtcblxuICAgIC8vIOWmguaenOaYr+WvueixoeaIluaVsOe7hCwg6L2s5o2i5Li6IEpTT04g5a2X56ym5LiyXG4gICAgaWYgKHR5cGVvZiBmaW5hbERhdGEgPT09ICdvYmplY3QnICYmIGZpbmFsRGF0YSAhPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGZpbmFsRGF0YSk7XG4gICAgfVxuXG4gICAgLy8g5aaC5p6c5piv5Y6f5aeL57G75Z6LLCDnm7TmjqXovazmjaLkuLrlrZfnrKbkuLJcbiAgICByZXR1cm4gU3RyaW5nKGZpbmFsRGF0YSk7XG4gIH0pO1xufVxuXG4kKCgpID0+IHtcbiAgLyoqXG4gICAqIOazqOWGjCBFUkEg5a6PLCDnlKjkuo7lnKjlj5HpgIHnu5kgQUkg55qE5raI5oGv5Lit5p+l6K+i5b2T5YmN6IGK5aSp55qE5Y+Y6YeP5pWw5o2uXG4gICAqXG4gICAqIC0gYHt7RVJBOnBhdGgudG8uZGF0YX19YDog5p+l6K+i5bm25pu/5o2i5Li6KirkuI3lkKsqKiBgJG1ldGFgIOeahOe6r+WHgOaVsOaNruOAglxuICAgKiAgIC0gYHt7RVJBOiRBTExEQVRBfX1gIOWwhui/lOWbnuaVtOS4quenu+mZpCBgJG1ldGFgIOWQjueahCBgc3RhdF9kYXRhYCDlr7nosaHjgIJcbiAgICogLSBge3tFUkEtd2l0aG1ldGE6cGF0aC50by5kYXRhfX1gOiDmn6Xor6Llubbmm7/mjaLkuLoqKuWMheWQqyoqIGAkbWV0YWAg55qE5Y6f5aeL5pWw5o2u44CCXG4gICAqICAgLSBge3tFUkEtd2l0aG1ldGE6JEFMTERBVEF9fWAg5bCG6L+U5Zue5a6M5pW055qEIGBzdGF0X2RhdGFgIOWvueixoeOAglxuICAgKi9cbiAgcmVnaXN0ZXJNYWNyb0xpa2UoL3t7XFxzKkVSQSgtd2l0aG1ldGEpP1xccyo6XFxzKihbXn1dKz8pXFxzKn19L2dpLCAoY29udGV4dCwgc3Vic3RyaW5nLCB3aXRoTWV0YSwgcGF0aCkgPT4ge1xuICAgIC8vIOebtOaOpeWkjeeUqCBwYXJzZUVyYU1hY3JvcyDlh73mlbDnmoTpgLvovpHjgIJcbiAgICAvLyBzdWJzdHJpbmcg5Y+C5pWw5piv5Yy56YWN5Yiw55qE5a6M5pW05a6P5a2X56ym5LiyLCDlpoIgXCJ7e0VSQTpwYXRoLnRvLmRhdGF9fVwiXG4gICAgcmV0dXJuIHBhcnNlRXJhTWFjcm9zKHN1YnN0cmluZyk7XG4gIH0pO1xufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/ERA变量框架/api/macro/parser.ts\n\n}");
  },
  "./src/ERA变量框架/core/crud/delete.ts": 
  /*!*****************************************!*\
  !*** ./src/ERA变量框架/core/crud/delete.ts ***!
  \*****************************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   processDeleteBlocks: () => (/* binding */ processDeleteBlocks)\n/* harmony export */ });\n/* harmony import */ var _utils_era_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/era_data */ \"./src/ERA变量框架/utils/era_data.ts\");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/log */ \"./src/ERA变量框架/utils/log.ts\");\n/**\n * @file ERA 变量框架 - 变量删除模块\n * @description\n * 该模块负责处理 `<VariableDelete>` 指令，实现对已存在变量的删除，并生成相应的 `EditLog`。\n *\n * **设计理念**:\n * - **指令驱动**: 递归行为由指令对象的结构驱动。空对象 `{}` 表示删除当前节点，非空对象表示递归删除子节点。\n * - **安全第一**: 删除是破坏性操作，因此引入了 `$meta.necessary` 权限机制来防止误删。\n * - **精确豁免**: `necessary` 的保护只有在删除指令明确指向 `necessary` 属性自身时才会被绕过。\n * - **原子性日志**: 为每一次删除生成单一、精确的 `EditLog`，确保操作可完全回滚。\n */\n\n\n\nconst logger = new _utils_log__WEBPACK_IMPORTED_MODULE_1__.Logger('core-crud-delete');\n/**\n * **【递归删除】**\n * 实现了 `<VariableDelete>` 的核心逻辑，其行为由指令 `patchObj` 的结构驱动。\n *\n * @param {any} statData - 状态数据对象 (即 `stat_data`)。\n * @param {string} basePath - 当前递归层级的基础路径。\n * @param {any} patchObj - 从指令中解析出的、与 `basePath` 对应的部分。\n * @param {any[]} editLog - 用于收集变更记录的日志数组。\n */\nfunction applyDeleteAtLevel(statData, basePath, patchObj, editLog) {\n    // --- 1. 入口守卫和状态获取 ---\n    const currentNodeInVars = basePath ? _.get(statData, basePath) : statData;\n    if (currentNodeInVars === undefined) {\n        logger.warn('applyDeleteAtLevel', `VariableDelete 跳过：路径不存在 -> ${basePath || '(root)'}`);\n        return;\n    }\n    const necessary = _.get(currentNodeInVars, ['$meta', 'necessary']);\n    // 精确判断豁免条件\n    const metaPatch = _.get(patchObj, '$meta');\n    const isBypassingProtection = \n    // 场景1: 指令要删除整个 $meta 对象\n    (_.isPlainObject(metaPatch) && _.isEmpty(metaPatch)) ||\n        // 场景2: 指令明确要删除 $meta.necessary 键\n        _.has(patchObj, ['$meta', 'necessary']);\n    // --- 2. 判断意图：递归删除子节点 vs 删除当前节点 ---\n    if (_.isPlainObject(patchObj) && !_.isEmpty(patchObj)) {\n        // **意图：递归删除子节点**\n        // 权限检查：如果节点受 'all' 保护，且指令不满足豁免条件，则禁止深入。\n        if (necessary === 'all' && !isBypassingProtection) {\n            logger.warn('applyDeleteAtLevel', `VariableDelete 失败：路径 <${basePath}> 受 \"necessary: all\" 保护，其子节点无法被删除。`);\n            return;\n        }\n        // 权限通过，或存在豁免，继续向内递归。\n        for (const key of Object.keys(patchObj)) {\n            const fullPath = basePath ? `${basePath}.${key}` : key;\n            const subPatchObj = patchObj[key];\n            applyDeleteAtLevel(statData, fullPath, subPatchObj, editLog);\n        }\n        return; // 子节点处理完毕，返回。\n    }\n    // --- 3. 执行删除当前节点 ---\n    // (能走到这里，说明 patchObj 是空对象、非对象或 null)\n    // **意图：删除当前节点 `basePath`**\n    // 权限检查：'self' 或 'all' 都会阻止当前节点的直接删除。\n    // 直接删除节点的意图无法豁免保护，必须通过递归意图删除 '$meta' 来解除保护。\n    if (necessary === 'self' || necessary === 'all') {\n        logger.warn('applyDeleteAtLevel', `VariableDelete 失败：路径 <${basePath}> 受 \"necessary: ${necessary}\" 保护，无法被直接删除。`);\n        return;\n    }\n    // 根节点（basePath 为 ''）不应被删除。\n    if (basePath === '') {\n        logger.error('applyDeleteAtLevel', 'VariableDelete 失败：不允许删除根对象。');\n        return;\n    }\n    // 执行原子性删除\n    const valOld = _.cloneDeep(currentNodeInVars);\n    _.unset(statData, basePath);\n    editLog.push({ op: 'delete', path: basePath, value_old: valOld });\n    logger.debug('applyDeleteAtLevel', `成功删除节点: ${basePath}`);\n}\n/**\n * 处理所有 `<VariableDelete>` 指令块。\n *\n * @param {any[]} allDeletes - 从消息中解析出的所有 delete 指令对象。\n * @param {any[]} editLog - 用于收集变更记录的日志数组。\n */\nasync function processDeleteBlocks(allDeletes, editLog) {\n    if (allDeletes.length > 0) {\n        for (const deleteRoot of allDeletes) {\n            if (!_.isPlainObject(deleteRoot) || _.isEmpty(deleteRoot))\n                continue;\n            try {\n                await (0,_utils_era_data__WEBPACK_IMPORTED_MODULE_0__.updateEraStatData)(stat => {\n                    logger.debug('processDeleteBlocks', `处理 deleteRoot: ${JSON.stringify(deleteRoot)}`);\n                    // 从根路径开始递归\n                    applyDeleteAtLevel(stat, '', deleteRoot, editLog);\n                    return stat;\n                });\n            }\n            catch (e) {\n                logger.error('processDeleteBlocks', `处理 deleteRoot 失败: ${e?.message || e}`, e);\n            }\n        }\n        logger.log('processDeleteBlocks', '所有 VariableDelete 操作完成');\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/core/crud/delete.ts\n\n}");
  },
  "./src/ERA变量框架/core/crud/insert/insert.ts": 
  /*!************************************************!*\
  !*** ./src/ERA变量框架/core/crud/insert/insert.ts ***!
  \************************************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyInsertAtLevel: () => (/* binding */ applyInsertAtLevel),\n/* harmony export */   processInsertBlocks: () => (/* binding */ processInsertBlocks)\n/* harmony export */ });\n/* harmony import */ var _template__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./template */ \"./src/ERA变量框架/core/crud/insert/template.ts\");\n/* harmony import */ var _utils_era_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/era_data */ \"./src/ERA变量框架/utils/era_data.ts\");\n/* harmony import */ var _utils_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../utils/data */ \"./src/ERA变量框架/utils/data.ts\");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../utils/log */ \"./src/ERA变量框架/utils/log.ts\");\n/**\n * @file ERA 变量框架 - 变量插入模块\n * @description\n * 该模块负责处理 `<VariableInsert>` 指令，实现变量的非破坏性插入，并生成相应的 `EditLog`。\n *\n * **设计理念**:\n * - **职责单一**: 模块只关心如何根据指令修改变量状态并生成日志，不关心指令从何而来。\n * - **原子性操作**: `applyInsertAtLevel` 实现了原子性的插入，确保了数据结构的完整性。\n *   如果一个基础路径不存在，它会将整个对象作为一整个单元一次性插入。\n * - **容错性**: 当遇到无效路径（如尝试向已存在的路径插入）时，会跳过该条指令并继续处理其他有效指令，\n *   而不是中断整个写入过程。\n */\n\n\n\n\n\nconst logger = new _utils_log__WEBPACK_IMPORTED_MODULE_3__.Logger('core-crud-insert-insert');\n/**\n * **【递归插入】**\n * 实现了 `<VariableInsert>` 的核心逻辑：**非破坏性地**递归插入值。\n *\n * **核心规则**:\n * 1. **只在路径不存在时写入**。如果路径已存在，则跳过该路径的写入。\n * 2. **原子性插入**。如果一个基础路径（如 `player.inventory`）不存在，它会将整个 `inventory`\n *    对象作为一整个单元一次性插入，并只记录一条 `insert` 日志。\n * 3. **递归补充**。如果基础路径已存在，它会递归地深入，尝试在其下补充插入新的子路径。\n * 4. **模板支持**。支持从 `$template` 中继承模板，实现数据结构的复用。\n *\n * @param {any} statData - 状态数据对象 (即 `stat_data`)。\n * @param {string} basePath - 当前递归层级的基础路径。\n * @param {any} patchObj - 从指令中解析出的、要应用于当前层级的补丁对象。\n * @param {any[]} editLog - 用于收集变更记录的日志数组（引用传递）。\n * @param {any} inheritedContent - 从上层继承的、纯粹的模板“内容”对象。\n * @param {any} parentData - 当前节点的父节点在 `statData` 中的数据。\n */\nfunction applyInsertAtLevel(statData, basePath, patchObj, editLog, inheritedContent, parentData) {\n    // --- 1. 确定当前层级的模板内容 ---\n    // 调用 resolveTemplate，它现在直接使用传入的 parentData\n    const localTplContent = (0,_template__WEBPACK_IMPORTED_MODULE_0__.resolveTemplate)(inheritedContent, parentData);\n    logger.debug('applyInsertAtLevel', `[入口] basePath: \"${basePath || 'root'}\"`, {\n        statData: _.cloneDeep(statData),\n    });\n    // --- 2. 检查路径存在性，决定执行策略 ---\n    const currentNodeInVars = basePath ? _.get(statData, basePath) : statData;\n    logger.debug('applyInsertAtLevel', `[路径检查] at path: \"${basePath || 'root'}\". currentNodeInVars 的值:`, currentNodeInVars);\n    // **策略一：原子性插入 (Atomic Insert)**\n    // 如果当前路径在变量中不存在，则将整个补丁对象作为新值一次性插入。\n    if (basePath && currentNodeInVars === undefined) {\n        // 调用 applyTemplateToPatch 函数，将合并后的模板内容应用到补丁上\n        const composed = (0,_template__WEBPACK_IMPORTED_MODULE_0__.applyTemplateToPatch)(localTplContent, patchObj);\n        const finalValue = (0,_utils_data__WEBPACK_IMPORTED_MODULE_2__.sanitizeArrays)(composed); // 清理数组中的 null 等无效值。\n        logger.debug('applyInsertAtLevel', `最终插入数据 at ${basePath}:\\n${JSON.stringify(finalValue, null, 2)}`);\n        _.set(statData, basePath, finalValue); // 执行插入。\n        editLog.push({ op: 'insert', path: basePath, value_new: _.cloneDeep(finalValue) });\n        logger.debug('applyInsertAtLevel', `原子性插入到新路径: ${basePath}`);\n        return; // 插入完成，终止递归。\n    }\n    // **策略二：递归补充 (Recursive Supplement)**\n    // 如果当前路径已存在，并且补丁和当前值都是对象，则深入递归。\n    if (_.isPlainObject(currentNodeInVars) && _.isPlainObject(patchObj)) {\n        logger.debug('applyInsertAtLevel', `[递归补充] at path: \"${basePath || 'root'}\"\n      - 当前层级模板 (localTplContent): ${JSON.stringify(localTplContent)}`);\n        for (const key of Object.keys(patchObj)) {\n            const subPath = basePath ? `${basePath}.${key}` : key;\n            const subPatch = patchObj[key];\n            // 调用 getInheritedTemplateContent，从当前模板内容中为子节点查找其应继承的内容\n            const subInheritedContent = (0,_template__WEBPACK_IMPORTED_MODULE_0__.getInheritedTemplateContent)(localTplContent, key);\n            logger.debug('applyInsertAtLevel', `  - 准备递归子节点: \"${key}\"\n      - 将传递给子节点的模板 (subInheritedContent): ${JSON.stringify(subInheritedContent)}`);\n            // 将当前节点数据 currentNodeInVars 作为下一层的 parentData 传递下去\n            applyInsertAtLevel(statData, subPath, subPatch, editLog, subInheritedContent, currentNodeInVars);\n        }\n    }\n    else if (basePath) {\n        // **插入失败**\n        // 如果路径已存在，但不是可递归补充的对象结构（例如，一个是对象，另一个是字符串），\n        // 则记录警告。insert 不会覆盖已存在的值。\n        logger.warn('applyInsertAtLevel', `VariableInsert 失败：路径已存在且无法递归补充 -> ${basePath}`);\n    }\n    // 如果 basePath 为空（在根级别）且 patch 不是对象，则不执行任何操作，因为根不能被非对象替换。\n}\n/**\n * 处理所有 `<VariableInsert>` 指令块。\n *\n * @param {any[]} allInserts - 从消息中解析出的所有 insert 指令对象。\n * @param {any[]} editLog - 用于收集变更记录的日志数组。\n */\nasync function processInsertBlocks(allInserts, editLog) {\n    if (allInserts.length > 0) {\n        await (0,_utils_era_data__WEBPACK_IMPORTED_MODULE_1__.updateEraStatData)(async (stat) => {\n            logger.debug('processInsertBlocks', '[初始状态] 进入 processInsertBlocks 时的 statData:', _.cloneDeep(stat));\n            return stat;\n        });\n        /*\n         * N.B. 必须对每个 insertRoot 单独调用 updateVariablesWith，而不是将所有操作合并到一次调用中。\n         * 这是为了确保在同一条消息内，前一个 <VariableInsert> 块中插入的模板或数据，\n         * 可以被后一个 <VariableInsert> 或 <VariableEdit> 块访问和使用。\n         * 每次 await updateVariablesWith 完成后，变量状态都会被刷新，从而使后续操作能看到最新的结果。\n         */\n        for (const insertRoot of allInserts) {\n            if (!_.isPlainObject(insertRoot) || _.isEmpty(insertRoot))\n                continue;\n            try {\n                await (0,_utils_era_data__WEBPACK_IMPORTED_MODULE_1__.updateEraStatData)(stat => {\n                    logger.debug('processInsertBlocks', `处理 insertRoot: ${JSON.stringify(insertRoot)}`);\n                    // 从根路径 '' 开始统一递归入口，顶层调用时，父节点为 null\n                    applyInsertAtLevel(stat, '', insertRoot, editLog, null, null);\n                    return stat;\n                });\n            }\n            catch (e) {\n                logger.error('processInsertBlocks', `处理 insertRoot 失败: ${e?.message || e}`, e);\n            }\n        }\n        logger.log('processInsertBlocks', '所有 VariableInsert 操作完成');\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvRVJB5Y+Y6YeP5qGG5p62L2NvcmUvY3J1ZC9pbnNlcnQvaW5zZXJ0LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7OztHQVdHO0FBQ1U7QUFFbUY7QUFDcEM7QUFDUDtBQUNUO0FBRTVDLE1BQU0sTUFBTSxHQUFHLElBQUksOENBQU0sQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO0FBRXJEOzs7Ozs7Ozs7Ozs7Ozs7OztHQWlCRztBQUNJLFNBQVMsa0JBQWtCLENBQ2hDLFFBQWEsRUFDYixRQUFnQixFQUNoQixRQUFhLEVBQ2IsT0FBYyxFQUNkLGdCQUFxQixFQUNyQixVQUFlO0lBRWYseUJBQXlCO0lBQ3pCLDJDQUEyQztJQUMzQyxNQUFNLGVBQWUsR0FBRywwREFBZSxDQUFDLGdCQUFnQixFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQ3RFLE1BQU0sQ0FBQyxLQUFLLENBQUMsb0JBQW9CLEVBQUUsbUJBQW1CLFFBQVEsSUFBSSxNQUFNLEdBQUcsRUFBRTtRQUMzRSxRQUFRLEVBQUUsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUM7S0FDaEMsQ0FBQyxDQUFDO0lBRUgsNEJBQTRCO0lBQzVCLE1BQU0saUJBQWlCLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDO0lBQzFFLE1BQU0sQ0FBQyxLQUFLLENBQ1Ysb0JBQW9CLEVBQ3BCLG9CQUFvQixRQUFRLElBQUksTUFBTSwwQkFBMEIsRUFDaEUsaUJBQWlCLENBQ2xCLENBQUM7SUFFRixnQ0FBZ0M7SUFDaEMsbUNBQW1DO0lBQ25DLElBQUksUUFBUSxJQUFJLGlCQUFpQixLQUFLLFNBQVMsRUFBRSxDQUFDO1FBQ2hELDZDQUE2QztRQUM3QyxNQUFNLFFBQVEsR0FBRywrREFBb0IsQ0FBQyxlQUFlLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFFakUsTUFBTSxVQUFVLEdBQUcsMkRBQWMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLG9CQUFvQjtRQUNqRSxNQUFNLENBQUMsS0FBSyxDQUFDLG9CQUFvQixFQUFFLGFBQWEsUUFBUSxNQUFNLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDckcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsUUFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUMsUUFBUTtRQUMvQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNuRixNQUFNLENBQUMsS0FBSyxDQUFDLG9CQUFvQixFQUFFLGNBQWMsUUFBUSxFQUFFLENBQUMsQ0FBQztRQUM3RCxPQUFPLENBQUMsYUFBYTtJQUN2QixDQUFDO0lBRUQsc0NBQXNDO0lBQ3RDLGdDQUFnQztJQUNoQyxJQUFJLENBQUMsQ0FBQyxhQUFhLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUM7UUFDcEUsTUFBTSxDQUFDLEtBQUssQ0FDVixvQkFBb0IsRUFDcEIsb0JBQW9CLFFBQVEsSUFBSSxNQUFNO29DQUNSLElBQUksQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLEVBQUUsQ0FDaEUsQ0FBQztRQUNGLEtBQUssTUFBTSxHQUFHLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDO1lBQ3hDLE1BQU0sT0FBTyxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUMsR0FBRyxRQUFRLElBQUksR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQztZQUN0RCxNQUFNLFFBQVEsR0FBRyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDL0IsdURBQXVEO1lBQ3ZELE1BQU0sbUJBQW1CLEdBQUcsc0VBQTJCLENBQUMsZUFBZSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1lBQzlFLE1BQU0sQ0FBQyxLQUFLLENBQ1Ysb0JBQW9CLEVBQ3BCLGlCQUFpQixHQUFHOzRDQUNnQixJQUFJLENBQUMsU0FBUyxDQUFDLG1CQUFtQixDQUFDLEVBQUUsQ0FDMUUsQ0FBQztZQUNGLG1EQUFtRDtZQUNuRCxrQkFBa0IsQ0FBQyxRQUFRLEVBQUUsT0FBTyxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztRQUNuRyxDQUFDO0lBQ0gsQ0FBQztTQUFNLElBQUksUUFBUSxFQUFFLENBQUM7UUFDcEIsV0FBVztRQUNYLDJDQUEyQztRQUMzQywwQkFBMEI7UUFDMUIsTUFBTSxDQUFDLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxxQ0FBcUMsUUFBUSxFQUFFLENBQUMsQ0FBQztJQUNyRixDQUFDO0lBQ0QseURBQXlEO0FBQzNELENBQUM7QUFFRDs7Ozs7R0FLRztBQUNJLEtBQUssVUFBVSxtQkFBbUIsQ0FBQyxVQUFpQixFQUFFLE9BQWM7SUFDekUsSUFBSSxVQUFVLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRSxDQUFDO1FBQzFCLE1BQU0sa0VBQWlCLENBQUMsS0FBSyxFQUFDLElBQUksRUFBQyxFQUFFO1lBQ25DLE1BQU0sQ0FBQyxLQUFLLENBQUMscUJBQXFCLEVBQUUsNENBQTRDLEVBQUUsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ3JHLE9BQU8sSUFBSSxDQUFDO1FBQ2QsQ0FBQyxDQUFDLENBQUM7UUFDSDs7Ozs7V0FLRztRQUNILEtBQUssTUFBTSxVQUFVLElBQUksVUFBVSxFQUFFLENBQUM7WUFDcEMsSUFBSSxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUM7Z0JBQUUsU0FBUztZQUNwRSxJQUFJLENBQUM7Z0JBQ0gsTUFBTSxrRUFBaUIsQ0FBQyxJQUFJLENBQUMsRUFBRTtvQkFDN0IsTUFBTSxDQUFDLEtBQUssQ0FBQyxxQkFBcUIsRUFBRSxrQkFBa0IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUM7b0JBQ3BGLG1DQUFtQztvQkFDbkMsa0JBQWtCLENBQUMsSUFBSSxFQUFFLEVBQUUsRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztvQkFDOUQsT0FBTyxJQUFJLENBQUM7Z0JBQ2QsQ0FBQyxDQUFDLENBQUM7WUFDTCxDQUFDO1lBQUMsT0FBTyxDQUFNLEVBQUUsQ0FBQztnQkFDaEIsTUFBTSxDQUFDLEtBQUssQ0FBQyxxQkFBcUIsRUFBRSxxQkFBcUIsQ0FBQyxFQUFFLE9BQU8sSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUNqRixDQUFDO1FBQ0gsQ0FBQztRQUNELE1BQU0sQ0FBQyxHQUFHLENBQUMscUJBQXFCLEVBQUUsd0JBQXdCLENBQUMsQ0FBQztJQUM5RCxDQUFDO0FBQ0gsQ0FBQyIsInNvdXJjZXMiOlsic3JjOi8vdGF2ZXJuX2hlbHBlcl90ZW1wbGF0ZS9zcmMvRVJB5Y+Y6YeP5qGG5p62L2NvcmUvY3J1ZC9pbnNlcnQvaW5zZXJ0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGUgRVJBIOWPmOmHj+ahhuaetiAtIOWPmOmHj+aPkuWFpeaooeWdl1xuICogQGRlc2NyaXB0aW9uXG4gKiDor6XmqKHlnZfotJ/otKPlpITnkIYgYDxWYXJpYWJsZUluc2VydD5gIOaMh+S7pO+8jOWunueOsOWPmOmHj+eahOmdnuegtOWdj+aAp+aPkuWFpe+8jOW5tueUn+aIkOebuOW6lOeahCBgRWRpdExvZ2DjgIJcbiAqXG4gKiAqKuiuvuiuoeeQhuW/tSoqOlxuICogLSAqKuiBjOi0o+WNleS4gCoqOiDmqKHlnZflj6rlhbPlv4PlpoLkvZXmoLnmja7mjIfku6Tkv67mlLnlj5jph4/nirbmgIHlubbnlJ/miJDml6Xlv5fvvIzkuI3lhbPlv4PmjIfku6Tku47kvZXogIzmnaXjgIJcbiAqIC0gKirljp/lrZDmgKfmk43kvZwqKjogYGFwcGx5SW5zZXJ0QXRMZXZlbGAg5a6e546w5LqG5Y6f5a2Q5oCn55qE5o+S5YWl77yM56Gu5L+d5LqG5pWw5o2u57uT5p6E55qE5a6M5pW05oCn44CCXG4gKiAgIOWmguaenOS4gOS4quWfuuehgOi3r+W+hOS4jeWtmOWcqO+8jOWug+S8muWwhuaVtOS4quWvueixoeS9nOS4uuS4gOaVtOS4quWNleWFg+S4gOasoeaAp+aPkuWFpeOAglxuICogLSAqKuWuuemUmeaApyoqOiDlvZPpgYfliLDml6DmlYjot6/lvoTvvIjlpoLlsJ3or5XlkJHlt7LlrZjlnKjnmoTot6/lvoTmj5LlhaXvvInml7bvvIzkvJrot7Pov4for6XmnaHmjIfku6Tlubbnu6fnu63lpITnkIblhbbku5bmnInmlYjmjIfku6TvvIxcbiAqICAg6ICM5LiN5piv5Lit5pat5pW05Liq5YaZ5YWl6L+H56iL44CCXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHsgYXBwbHlUZW1wbGF0ZVRvUGF0Y2gsIGdldEluaGVyaXRlZFRlbXBsYXRlQ29udGVudCwgcmVzb2x2ZVRlbXBsYXRlIH0gZnJvbSAnLi90ZW1wbGF0ZSc7XG5pbXBvcnQgeyB1cGRhdGVFcmFTdGF0RGF0YSB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL2VyYV9kYXRhJztcbmltcG9ydCB7IHNhbml0aXplQXJyYXlzIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvZGF0YSc7XG5pbXBvcnQgeyBMb2dnZXIgfSBmcm9tICcuLi8uLi8uLi91dGlscy9sb2cnO1xuXG5jb25zdCBsb2dnZXIgPSBuZXcgTG9nZ2VyKCdjb3JlLWNydWQtaW5zZXJ0LWluc2VydCcpO1xuXG4vKipcbiAqICoq44CQ6YCS5b2S5o+S5YWl44CRKipcbiAqIOWunueOsOS6hiBgPFZhcmlhYmxlSW5zZXJ0PmAg55qE5qC45b+D6YC76L6R77yaKirpnZ7noLTlnY/mgKflnLAqKumAkuW9kuaPkuWFpeWAvOOAglxuICpcbiAqICoq5qC45b+D6KeE5YiZKio6XG4gKiAxLiAqKuWPquWcqOi3r+W+hOS4jeWtmOWcqOaXtuWGmeWFpSoq44CC5aaC5p6c6Lev5b6E5bey5a2Y5Zyo77yM5YiZ6Lez6L+H6K+l6Lev5b6E55qE5YaZ5YWl44CCXG4gKiAyLiAqKuWOn+WtkOaAp+aPkuWFpSoq44CC5aaC5p6c5LiA5Liq5Z+656GA6Lev5b6E77yI5aaCIGBwbGF5ZXIuaW52ZW50b3J5YO+8ieS4jeWtmOWcqO+8jOWug+S8muWwhuaVtOS4qiBgaW52ZW50b3J5YFxuICogICAg5a+56LGh5L2c5Li65LiA5pW05Liq5Y2V5YWD5LiA5qyh5oCn5o+S5YWl77yM5bm25Y+q6K6w5b2V5LiA5p2hIGBpbnNlcnRgIOaXpeW/l+OAglxuICogMy4gKirpgJLlvZLooaXlhYUqKuOAguWmguaenOWfuuehgOi3r+W+hOW3suWtmOWcqO+8jOWug+S8mumAkuW9kuWcsOa3seWFpe+8jOWwneivleWcqOWFtuS4i+ihpeWFheaPkuWFpeaWsOeahOWtkOi3r+W+hOOAglxuICogNC4gKirmqKHmnb/mlK/mjIEqKuOAguaUr+aMgeS7jiBgJHRlbXBsYXRlYCDkuK3nu6fmib/mqKHmnb/vvIzlrp7njrDmlbDmja7nu5PmnoTnmoTlpI3nlKjjgIJcbiAqXG4gKiBAcGFyYW0ge2FueX0gc3RhdERhdGEgLSDnirbmgIHmlbDmja7lr7nosaEgKOWNsyBgc3RhdF9kYXRhYCnjgIJcbiAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlUGF0aCAtIOW9k+WJjemAkuW9kuWxgue6p+eahOWfuuehgOi3r+W+hOOAglxuICogQHBhcmFtIHthbnl9IHBhdGNoT2JqIC0g5LuO5oyH5Luk5Lit6Kej5p6Q5Ye655qE44CB6KaB5bqU55So5LqO5b2T5YmN5bGC57qn55qE6KGl5LiB5a+56LGh44CCXG4gKiBAcGFyYW0ge2FueVtdfSBlZGl0TG9nIC0g55So5LqO5pS26ZuG5Y+Y5pu06K6w5b2V55qE5pel5b+X5pWw57uE77yI5byV55So5Lyg6YCS77yJ44CCXG4gKiBAcGFyYW0ge2FueX0gaW5oZXJpdGVkQ29udGVudCAtIOS7juS4iuWxgue7p+aJv+eahOOAgee6r+eyueeahOaooeadv+KAnOWGheWuueKAneWvueixoeOAglxuICogQHBhcmFtIHthbnl9IHBhcmVudERhdGEgLSDlvZPliY3oioLngrnnmoTniLboioLngrnlnKggYHN0YXREYXRhYCDkuK3nmoTmlbDmja7jgIJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFwcGx5SW5zZXJ0QXRMZXZlbChcbiAgc3RhdERhdGE6IGFueSxcbiAgYmFzZVBhdGg6IHN0cmluZyxcbiAgcGF0Y2hPYmo6IGFueSxcbiAgZWRpdExvZzogYW55W10sXG4gIGluaGVyaXRlZENvbnRlbnQ6IGFueSxcbiAgcGFyZW50RGF0YTogYW55LCAvLyDmlrDlop7lj4LmlbDvvIznm7TmjqXkvKDpgJLniLboioLngrnmlbDmja5cbikge1xuICAvLyAtLS0gMS4g56Gu5a6a5b2T5YmN5bGC57qn55qE5qih5p2/5YaF5a65IC0tLVxuICAvLyDosIPnlKggcmVzb2x2ZVRlbXBsYXRl77yM5a6D546w5Zyo55u05o6l5L2/55So5Lyg5YWl55qEIHBhcmVudERhdGFcbiAgY29uc3QgbG9jYWxUcGxDb250ZW50ID0gcmVzb2x2ZVRlbXBsYXRlKGluaGVyaXRlZENvbnRlbnQsIHBhcmVudERhdGEpO1xuICBsb2dnZXIuZGVidWcoJ2FwcGx5SW5zZXJ0QXRMZXZlbCcsIGBb5YWl5Y+jXSBiYXNlUGF0aDogXCIke2Jhc2VQYXRoIHx8ICdyb290J31cImAsIHtcbiAgICBzdGF0RGF0YTogXy5jbG9uZURlZXAoc3RhdERhdGEpLFxuICB9KTtcblxuICAvLyAtLS0gMi4g5qOA5p+l6Lev5b6E5a2Y5Zyo5oCn77yM5Yaz5a6a5omn6KGM562W55WlIC0tLVxuICBjb25zdCBjdXJyZW50Tm9kZUluVmFycyA9IGJhc2VQYXRoID8gXy5nZXQoc3RhdERhdGEsIGJhc2VQYXRoKSA6IHN0YXREYXRhO1xuICBsb2dnZXIuZGVidWcoXG4gICAgJ2FwcGx5SW5zZXJ0QXRMZXZlbCcsXG4gICAgYFvot6/lvoTmo4Dmn6VdIGF0IHBhdGg6IFwiJHtiYXNlUGF0aCB8fCAncm9vdCd9XCIuIGN1cnJlbnROb2RlSW5WYXJzIOeahOWAvDpgLFxuICAgIGN1cnJlbnROb2RlSW5WYXJzLFxuICApO1xuXG4gIC8vICoq562W55Wl5LiA77ya5Y6f5a2Q5oCn5o+S5YWlIChBdG9taWMgSW5zZXJ0KSoqXG4gIC8vIOWmguaenOW9k+WJjei3r+W+hOWcqOWPmOmHj+S4reS4jeWtmOWcqO+8jOWImeWwhuaVtOS4quihpeS4geWvueixoeS9nOS4uuaWsOWAvOS4gOasoeaAp+aPkuWFpeOAglxuICBpZiAoYmFzZVBhdGggJiYgY3VycmVudE5vZGVJblZhcnMgPT09IHVuZGVmaW5lZCkge1xuICAgIC8vIOiwg+eUqCBhcHBseVRlbXBsYXRlVG9QYXRjaCDlh73mlbDvvIzlsIblkIjlubblkI7nmoTmqKHmnb/lhoXlrrnlupTnlKjliLDooaXkuIHkuIpcbiAgICBjb25zdCBjb21wb3NlZCA9IGFwcGx5VGVtcGxhdGVUb1BhdGNoKGxvY2FsVHBsQ29udGVudCwgcGF0Y2hPYmopO1xuXG4gICAgY29uc3QgZmluYWxWYWx1ZSA9IHNhbml0aXplQXJyYXlzKGNvbXBvc2VkKTsgLy8g5riF55CG5pWw57uE5Lit55qEIG51bGwg562J5peg5pWI5YC844CCXG4gICAgbG9nZ2VyLmRlYnVnKCdhcHBseUluc2VydEF0TGV2ZWwnLCBg5pyA57uI5o+S5YWl5pWw5o2uIGF0ICR7YmFzZVBhdGh9OlxcbiR7SlNPTi5zdHJpbmdpZnkoZmluYWxWYWx1ZSwgbnVsbCwgMil9YCk7XG4gICAgXy5zZXQoc3RhdERhdGEsIGJhc2VQYXRoLCBmaW5hbFZhbHVlKTsgLy8g5omn6KGM5o+S5YWl44CCXG4gICAgZWRpdExvZy5wdXNoKHsgb3A6ICdpbnNlcnQnLCBwYXRoOiBiYXNlUGF0aCwgdmFsdWVfbmV3OiBfLmNsb25lRGVlcChmaW5hbFZhbHVlKSB9KTtcbiAgICBsb2dnZXIuZGVidWcoJ2FwcGx5SW5zZXJ0QXRMZXZlbCcsIGDljp/lrZDmgKfmj5LlhaXliLDmlrDot6/lvoQ6ICR7YmFzZVBhdGh9YCk7XG4gICAgcmV0dXJuOyAvLyDmj5LlhaXlrozmiJDvvIznu4jmraLpgJLlvZLjgIJcbiAgfVxuXG4gIC8vICoq562W55Wl5LqM77ya6YCS5b2S6KGl5YWFIChSZWN1cnNpdmUgU3VwcGxlbWVudCkqKlxuICAvLyDlpoLmnpzlvZPliY3ot6/lvoTlt7LlrZjlnKjvvIzlubbkuJTooaXkuIHlkozlvZPliY3lgLzpg73mmK/lr7nosaHvvIzliJnmt7HlhaXpgJLlvZLjgIJcbiAgaWYgKF8uaXNQbGFpbk9iamVjdChjdXJyZW50Tm9kZUluVmFycykgJiYgXy5pc1BsYWluT2JqZWN0KHBhdGNoT2JqKSkge1xuICAgIGxvZ2dlci5kZWJ1ZyhcbiAgICAgICdhcHBseUluc2VydEF0TGV2ZWwnLFxuICAgICAgYFvpgJLlvZLooaXlhYVdIGF0IHBhdGg6IFwiJHtiYXNlUGF0aCB8fCAncm9vdCd9XCJcbiAgICAgIC0g5b2T5YmN5bGC57qn5qih5p2/IChsb2NhbFRwbENvbnRlbnQpOiAke0pTT04uc3RyaW5naWZ5KGxvY2FsVHBsQ29udGVudCl9YCxcbiAgICApO1xuICAgIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHBhdGNoT2JqKSkge1xuICAgICAgY29uc3Qgc3ViUGF0aCA9IGJhc2VQYXRoID8gYCR7YmFzZVBhdGh9LiR7a2V5fWAgOiBrZXk7XG4gICAgICBjb25zdCBzdWJQYXRjaCA9IHBhdGNoT2JqW2tleV07XG4gICAgICAvLyDosIPnlKggZ2V0SW5oZXJpdGVkVGVtcGxhdGVDb250ZW5077yM5LuO5b2T5YmN5qih5p2/5YaF5a655Lit5Li65a2Q6IqC54K55p+l5om+5YW25bqU57un5om/55qE5YaF5a65XG4gICAgICBjb25zdCBzdWJJbmhlcml0ZWRDb250ZW50ID0gZ2V0SW5oZXJpdGVkVGVtcGxhdGVDb250ZW50KGxvY2FsVHBsQ29udGVudCwga2V5KTtcbiAgICAgIGxvZ2dlci5kZWJ1ZyhcbiAgICAgICAgJ2FwcGx5SW5zZXJ0QXRMZXZlbCcsXG4gICAgICAgIGAgIC0g5YeG5aSH6YCS5b2S5a2Q6IqC54K5OiBcIiR7a2V5fVwiXG4gICAgICAtIOWwhuS8oOmAkue7meWtkOiKgueCueeahOaooeadvyAoc3ViSW5oZXJpdGVkQ29udGVudCk6ICR7SlNPTi5zdHJpbmdpZnkoc3ViSW5oZXJpdGVkQ29udGVudCl9YCxcbiAgICAgICk7XG4gICAgICAvLyDlsIblvZPliY3oioLngrnmlbDmja4gY3VycmVudE5vZGVJblZhcnMg5L2c5Li65LiL5LiA5bGC55qEIHBhcmVudERhdGEg5Lyg6YCS5LiL5Y67XG4gICAgICBhcHBseUluc2VydEF0TGV2ZWwoc3RhdERhdGEsIHN1YlBhdGgsIHN1YlBhdGNoLCBlZGl0TG9nLCBzdWJJbmhlcml0ZWRDb250ZW50LCBjdXJyZW50Tm9kZUluVmFycyk7XG4gICAgfVxuICB9IGVsc2UgaWYgKGJhc2VQYXRoKSB7XG4gICAgLy8gKirmj5LlhaXlpLHotKUqKlxuICAgIC8vIOWmguaenOi3r+W+hOW3suWtmOWcqO+8jOS9huS4jeaYr+WPr+mAkuW9kuihpeWFheeahOWvueixoee7k+aehO+8iOS+i+Wmgu+8jOS4gOS4quaYr+Wvueixoe+8jOWPpuS4gOS4quaYr+Wtl+espuS4su+8ie+8jFxuICAgIC8vIOWImeiusOW9leitpuWRiuOAgmluc2VydCDkuI3kvJropobnm5blt7LlrZjlnKjnmoTlgLzjgIJcbiAgICBsb2dnZXIud2FybignYXBwbHlJbnNlcnRBdExldmVsJywgYFZhcmlhYmxlSW5zZXJ0IOWksei0pe+8mui3r+W+hOW3suWtmOWcqOS4lOaXoOazlemAkuW9kuihpeWFhSAtPiAke2Jhc2VQYXRofWApO1xuICB9XG4gIC8vIOWmguaenCBiYXNlUGF0aCDkuLrnqbrvvIjlnKjmoLnnuqfliKvvvInkuJQgcGF0Y2gg5LiN5piv5a+56LGh77yM5YiZ5LiN5omn6KGM5Lu75L2V5pON5L2c77yM5Zug5Li65qC55LiN6IO96KKr6Z2e5a+56LGh5pu/5o2i44CCXG59XG5cbi8qKlxuICog5aSE55CG5omA5pyJIGA8VmFyaWFibGVJbnNlcnQ+YCDmjIfku6TlnZfjgIJcbiAqXG4gKiBAcGFyYW0ge2FueVtdfSBhbGxJbnNlcnRzIC0g5LuO5raI5oGv5Lit6Kej5p6Q5Ye655qE5omA5pyJIGluc2VydCDmjIfku6Tlr7nosaHjgIJcbiAqIEBwYXJhbSB7YW55W119IGVkaXRMb2cgLSDnlKjkuo7mlLbpm4blj5jmm7TorrDlvZXnmoTml6Xlv5fmlbDnu4TjgIJcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHByb2Nlc3NJbnNlcnRCbG9ja3MoYWxsSW5zZXJ0czogYW55W10sIGVkaXRMb2c6IGFueVtdKSB7XG4gIGlmIChhbGxJbnNlcnRzLmxlbmd0aCA+IDApIHtcbiAgICBhd2FpdCB1cGRhdGVFcmFTdGF0RGF0YShhc3luYyBzdGF0ID0+IHtcbiAgICAgIGxvZ2dlci5kZWJ1ZygncHJvY2Vzc0luc2VydEJsb2NrcycsICdb5Yid5aeL54q25oCBXSDov5vlhaUgcHJvY2Vzc0luc2VydEJsb2NrcyDml7bnmoQgc3RhdERhdGE6JywgXy5jbG9uZURlZXAoc3RhdCkpO1xuICAgICAgcmV0dXJuIHN0YXQ7XG4gICAgfSk7XG4gICAgLypcbiAgICAgKiBOLkIuIOW/hemhu+Wvueavj+S4qiBpbnNlcnRSb290IOWNleeLrOiwg+eUqCB1cGRhdGVWYXJpYWJsZXNXaXRo77yM6ICM5LiN5piv5bCG5omA5pyJ5pON5L2c5ZCI5bm25Yiw5LiA5qyh6LCD55So5Lit44CCXG4gICAgICog6L+Z5piv5Li65LqG56Gu5L+d5Zyo5ZCM5LiA5p2h5raI5oGv5YaF77yM5YmN5LiA5LiqIDxWYXJpYWJsZUluc2VydD4g5Z2X5Lit5o+S5YWl55qE5qih5p2/5oiW5pWw5o2u77yMXG4gICAgICog5Y+v5Lul6KKr5ZCO5LiA5LiqIDxWYXJpYWJsZUluc2VydD4g5oiWIDxWYXJpYWJsZUVkaXQ+IOWdl+iuv+mXruWSjOS9v+eUqOOAglxuICAgICAqIOavj+asoSBhd2FpdCB1cGRhdGVWYXJpYWJsZXNXaXRoIOWujOaIkOWQju+8jOWPmOmHj+eKtuaAgemDveS8muiiq+WIt+aWsO+8jOS7juiAjOS9v+WQjue7reaTjeS9nOiDveeci+WIsOacgOaWsOeahOe7k+aenOOAglxuICAgICAqL1xuICAgIGZvciAoY29uc3QgaW5zZXJ0Um9vdCBvZiBhbGxJbnNlcnRzKSB7XG4gICAgICBpZiAoIV8uaXNQbGFpbk9iamVjdChpbnNlcnRSb290KSB8fCBfLmlzRW1wdHkoaW5zZXJ0Um9vdCkpIGNvbnRpbnVlO1xuICAgICAgdHJ5IHtcbiAgICAgICAgYXdhaXQgdXBkYXRlRXJhU3RhdERhdGEoc3RhdCA9PiB7XG4gICAgICAgICAgbG9nZ2VyLmRlYnVnKCdwcm9jZXNzSW5zZXJ0QmxvY2tzJywgYOWkhOeQhiBpbnNlcnRSb290OiAke0pTT04uc3RyaW5naWZ5KGluc2VydFJvb3QpfWApO1xuICAgICAgICAgIC8vIOS7juaguei3r+W+hCAnJyDlvIDlp4vnu5/kuIDpgJLlvZLlhaXlj6PvvIzpobblsYLosIPnlKjml7bvvIzniLboioLngrnkuLogbnVsbFxuICAgICAgICAgIGFwcGx5SW5zZXJ0QXRMZXZlbChzdGF0LCAnJywgaW5zZXJ0Um9vdCwgZWRpdExvZywgbnVsbCwgbnVsbCk7XG4gICAgICAgICAgcmV0dXJuIHN0YXQ7XG4gICAgICAgIH0pO1xuICAgICAgfSBjYXRjaCAoZTogYW55KSB7XG4gICAgICAgIGxvZ2dlci5lcnJvcigncHJvY2Vzc0luc2VydEJsb2NrcycsIGDlpITnkIYgaW5zZXJ0Um9vdCDlpLHotKU6ICR7ZT8ubWVzc2FnZSB8fCBlfWAsIGUpO1xuICAgICAgfVxuICAgIH1cbiAgICBsb2dnZXIubG9nKCdwcm9jZXNzSW5zZXJ0QmxvY2tzJywgJ+aJgOaciSBWYXJpYWJsZUluc2VydCDmk43kvZzlrozmiJAnKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/ERA变量框架/core/crud/insert/insert.ts\n\n}");
  },
  "./src/ERA变量框架/core/crud/insert/template.ts": 
  /*!**************************************************!*\
  !*** ./src/ERA变量框架/core/crud/insert/template.ts ***!
  \**************************************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval('{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyTemplateToPatch: () => (/* binding */ applyTemplateToPatch),\n/* harmony export */   getInheritedTemplateContent: () => (/* binding */ getInheritedTemplateContent),\n/* harmony export */   resolveTemplate: () => (/* binding */ resolveTemplate)\n/* harmony export */ });\n/* harmony import */ var _utils_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/data */ "./src/ERA变量框架/utils/data.ts");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/log */ "./src/ERA变量框架/utils/log.ts");\n\n\n\nconst logger = new _utils_log__WEBPACK_IMPORTED_MODULE_1__.Logger(\'core-crud-insert-template\');\n/**\n * **【解析并合并模板内容】**\n *\n * 从继承的模板内容和父节点变量中定义的模板内容中，合并出当前层级可用的模板。\n *\n * @param inheritedContent - 从上上层继承的模板内容。\n * @param parentNodeData - 当前正在处理的节点的 **父节点** 在变量中的数据。\n * @returns {any} - 合并后的单一内容对象，如果所有来源都无效，则返回 `null`。\n */\nfunction resolveTemplate(inheritedContent, parentNodeData) {\n    // 1. 从父节点变量中，找到作为当前节点兄弟的 $template\n    const varsContent = _.get(parentNodeData, \'$template\');\n    logger.debug(\'resolveTemplate\', `解析出的模板内容:\\n    - 继承: ${JSON.stringify(inheritedContent)}\\n    - 父节点变量: ${JSON.stringify(varsContent)}`);\n    // 2. 按优先级合并 (父节点变量 > 继承)\n    let mergedContent = {};\n    mergedContent = (0,_utils_data__WEBPACK_IMPORTED_MODULE_0__.mergeReplaceArray)(mergedContent, inheritedContent);\n    mergedContent = (0,_utils_data__WEBPACK_IMPORTED_MODULE_0__.mergeReplaceArray)(mergedContent, varsContent);\n    logger.debug(\'resolveTemplate\', `合并后的最终模板内容: ${JSON.stringify(mergedContent)}`);\n    if (_.isEmpty(mergedContent)) {\n        return null;\n    }\n    return mergedContent;\n}\n/**\n * **【获取子节点要继承的模板内容】**\n *\n * 在一个给定的“父级模板内容”中，查找并合并其内部定义的“原型规则” (`$template`) 和“特异性规则” (`key`)，\n * 以生成供特定子节点 `key` 使用的最终模板内容。\n *\n * @example\n * // 输入:\n * const parentTplContent = {\n *   "$template": { "hp": 10, "mana": 100, "a": { "d": 1 } },\n *   "lili": { "hp": 15, "class": "warrior", "a": { "c": 1 } }\n * };\n * const key = "lili";\n * // 输出 (合并后的内容):\n * // { "hp": 15, "mana": 100, "class": "warrior", "a": { "c": 1, "d": 1 } }\n *\n * @param parentTplContent - 父级的模板内容，它本身可能包含 `$template` 和 `key` 作为子键。\n * @param key - 正在处理的子节点的键名。\n * @returns {any} - 子节点应该继承的、已合并的模板内容，或 `undefined`。\n */\nfunction getInheritedTemplateContent(parentTplContent, key) {\n    if (!parentTplContent)\n        return undefined;\n    // 步骤 1: 在父级模板内容中查找通用的原型规则\n    const prototypeContent = _.get(parentTplContent, \'$template\');\n    // 步骤 2: 在父级模板内容中查找给 key 的特异性规则\n    const specificContent = _.get(parentTplContent, key);\n    // 步骤 3: 根据查找结果决定最终模板内容\n    if (_.isPlainObject(prototypeContent) && _.isPlainObject(specificContent)) {\n        logger.debug(\'getInheritedTemplateContent\', `为子节点 "${key}" 同时找到原型和特异性内容。\\n      - 原型: ${JSON.stringify(prototypeContent)}\\n      - 特异性: ${JSON.stringify(specificContent)}`);\n        // 直接使用 mergeReplaceArray 进行合并\n        const merged = (0,_utils_data__WEBPACK_IMPORTED_MODULE_0__.mergeReplaceArray)(_.cloneDeep(prototypeContent), specificContent);\n        logger.debug(\'getInheritedTemplateContent\', `  - 合并后: ${JSON.stringify(merged)}`);\n        return merged;\n    }\n    else if (_.isPlainObject(specificContent)) {\n        logger.debug(\'getInheritedTemplateContent\', `为子节点 "${key}" 只找到特异性内容: ${JSON.stringify(specificContent)}`);\n        return specificContent;\n    }\n    else if (_.isPlainObject(prototypeContent)) {\n        logger.debug(\'getInheritedTemplateContent\', `为子节点 "${key}" 只找到原型内容: ${JSON.stringify(prototypeContent)}`);\n        return prototypeContent;\n    }\n    logger.debug(\'getInheritedTemplateContent\', `在父级模板内容中未为子节点 "${key}" 找到任何可继承的规则。`);\n    return undefined;\n}\n/**\n * **【应用模板内容到补丁】**\n *\n * 将一个“模板内容”对象应用到一个“补丁”对象上，作为其默认值。\n *\n * @param tplContent - 当前层级合并后的模板内容。\n * @param patchObj - 要应用模板的补丁数据。\n * @returns {any} - 应用了模板默认值之后，最终合成的数据对象。\n */\nfunction applyTemplateToPatch(tplContent, patchObj) {\n    logger.debug(\'applyTemplateToPatch\', `[进入] 模板内容: ${JSON.stringify(tplContent)}, 补丁: ${JSON.stringify(patchObj)}`);\n    if (!_.isPlainObject(patchObj)) {\n        logger.debug(\'applyTemplateToPatch\', `[退出] 补丁不是一个普通对象，直接返回。`);\n        return patchObj;\n    }\n    if (!tplContent) {\n        logger.debug(\'applyTemplateToPatch\', `[退出] 模板内容无效，直接返回补丁。`);\n        return patchObj;\n    }\n    // 如果补丁是空对象，直接使用模板内容\n    if (_.isEmpty(patchObj)) {\n        logger.debug(\'applyTemplateToPatch\', `补丁为空对象，完全使用模板内容。`);\n        return _.cloneDeep(tplContent);\n    }\n    // 如果补丁非空，将模板内容作为默认值与补丁合并\n    const composed = (0,_utils_data__WEBPACK_IMPORTED_MODULE_0__.mergeReplaceArray)(_.cloneDeep(tplContent), patchObj);\n    logger.debug(\'applyTemplateToPatch\', `合并模板与补丁后的结果: ${JSON.stringify(composed)}`);\n    return composed;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/core/crud/insert/template.ts\n\n}');
  },
  "./src/ERA变量框架/core/crud/patcher.ts": 
  /*!******************************************!*\
  !*** ./src/ERA变量框架/core/crud/patcher.ts ***!
  \******************************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApplyVarChange: () => (/* binding */ ApplyVarChange),\n/* harmony export */   ApplyVarChangeForMessage: () => (/* binding */ ApplyVarChangeForMessage)\n/* harmony export */ });\n/* harmony import */ var _core_key_mk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/key/mk */ \"./src/ERA变量框架/core/key/mk.ts\");\n/* harmony import */ var _utils_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/constants */ \"./src/ERA变量框架/utils/constants.ts\");\n/* harmony import */ var _utils_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/data */ \"./src/ERA变量框架/utils/data.ts\");\n/* harmony import */ var _utils_era_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/era_data */ \"./src/ERA变量框架/utils/era_data.ts\");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/log */ \"./src/ERA变量框架/utils/log.ts\");\n/* harmony import */ var _utils_message__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/message */ \"./src/ERA变量框架/utils/message.ts\");\n/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/string */ \"./src/ERA变量框架/utils/string.ts\");\n/* harmony import */ var _delete__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./delete */ \"./src/ERA变量框架/core/crud/delete.ts\");\n/* harmony import */ var _insert_insert__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./insert/insert */ \"./src/ERA变量框架/core/crud/insert/insert.ts\");\n/* harmony import */ var _update__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./update */ \"./src/ERA变量框架/core/crud/update.ts\");\n/**\n * @file ERA 变量框架 - 变量写入模块\n * @description\n * 该模块是 ERA 框架的“执行引擎”，负责将消息内容中的变量修改指令应用到实际的 `chat` 变量中。\n *\n * **设计理念**:\n * 变量的写入是一个严谨的过程，必须确保所有变更都被正确记录，以便后续的回滚和同步。\n * 此模块的核心职责是：\n * 1. **解析指令**: 从 AI 消息中提取 `<VariableInsert>` 和 `<VariableEdit>` 块。\n * 2. **顺序执行**: 确保同一消息内的多个指令块按顺序执行，且后续指令能感知到前面指令的结果。\n * 3. **生成日志**: 在应用变更的同时，调用 `recursive.ts` 中的递归函数来生成精确的 `EditLog`。\n * 4. **覆盖式日志写入**: 确保每个消息密钥（MK）对应的 `EditLog` 严格反映其当前内容，\n *    即使内容中没有任何指令（此时会写入空日志），也要覆盖旧日志，这是防止 `swipe` 造成数据污染的关键。\n *\n * **职责边界**:\n * - 本模块**只负责读取 MK**，不负责创建。创建 MK 的职责由上游的 `message_key.ts` 承担。\n * - `ApplyVarChangeForMessage` 函数**只负责写入变量和 `EditLog`**，不负责更新 `SelectedMks`。\n *   更新 `SelectedMks` 的职责被移交给了更上层的调用者（如 `ApplyVarChange` 或同步函数），\n *   以避免在同步循环中修改正在被读取的状态，这是一种重要的并发控制策略。\n */\n\n\n\n\n\n\n\n\n\n\n\nconst logger = new _utils_log__WEBPACK_IMPORTED_MODULE_4__.Logger('core-crud-patcher');\n/**\n * **【核心实现】** 对指定的消息应用变量修改。\n * 这是变量写入流程的核心，处理单个消息。\n *\n * @param {TavernMessage} msg - 要处理的酒馆消息对象。\n * @returns {Promise<string | null>} 如果成功处理，返回该消息的 MK；如果消息无需处理或处理失败，返回 null。\n */\nconst ApplyVarChangeForMessage = async (msg) => {\n    logger.debug('ApplyVarChangeForMessage', `开始处理消息...`, { msg });\n    try {\n        if (!msg || typeof msg.message_id !== 'number') {\n            logger.warn('ApplyVarChangeForMessage', '无效消息对象或缺少 message_id，退出');\n            return null;\n        }\n        const messageId = msg.message_id;\n        // 写入函数只负责读取 MK，不负责创建。创建的职责由上游的 `ensureMessageKey` 承担。\n        const MK = (0,_core_key_mk__WEBPACK_IMPORTED_MODULE_0__.readMessageKey)(msg);\n        // 如果消息没有 MK（可能是一个异常状态，如新消息还未被注入 MK），则跳过。\n        if (!MK) {\n            logger.debug('ApplyVarChangeForMessage', `消息 (ID: ${messageId}) 不含 MK，跳过变量写入。`);\n            return null;\n        }\n        // 根据设计，用户消息自身不应包含变量修改指令，因此跳过变量处理，但返回其已有的 MK。\n        if ((0,_utils_message__WEBPACK_IMPORTED_MODULE_5__.isUserMessage)(msg)) {\n            logger.debug('ApplyVarChangeForMessage', `消息 (ID: ${messageId}) 为用户消息，跳过变量写入，但保留其 MK。`);\n            return MK;\n        }\n        const rawContent = (0,_utils_message__WEBPACK_IMPORTED_MODULE_5__.getMessageContent)(msg) || '';\n        // 1. 从消息内容中解析出所有指令块。\n        const insertBlocks = (0,_utils_string__WEBPACK_IMPORTED_MODULE_6__.extractBlocks)(rawContent, 'VariableInsert');\n        const editBlocks = (0,_utils_string__WEBPACK_IMPORTED_MODULE_6__.extractBlocks)(rawContent, 'VariableEdit');\n        const deleteBlocks = (0,_utils_string__WEBPACK_IMPORTED_MODULE_6__.extractBlocks)(rawContent, 'VariableDelete');\n        // 调试日志：输出提取的原始块\n        //logger.debug('【ERA调试】原始指令块', insertBlocks);\n        if (!insertBlocks.length && !editBlocks.length && !deleteBlocks.length) {\n            logger.debug('ApplyVarChangeForMessage', `消息 (ID: ${messageId}) 未检测到变量修改标签。`);\n        }\n        const rawInserts = insertBlocks.flatMap(s => (0,_utils_data__WEBPACK_IMPORTED_MODULE_2__.parseJsonl)(s));\n        const rawEdits = editBlocks.flatMap(s => (0,_utils_data__WEBPACK_IMPORTED_MODULE_2__.parseJsonl)(s));\n        const rawDeletes = deleteBlocks.flatMap(s => (0,_utils_data__WEBPACK_IMPORTED_MODULE_2__.parseJsonl)(s));\n        // 调试日志：输出 JSONL 解析结果\n        //logger.debug('【ERA调试】JSONL解析结果', rawInserts);\n        // 在这里对从消息中解析出的原始数据进行转义，确保所有后续处理都使用转义后的数据。\n        const allInserts = (0,_utils_data__WEBPACK_IMPORTED_MODULE_2__.escapeEraData)(rawInserts);\n        const allEdits = (0,_utils_data__WEBPACK_IMPORTED_MODULE_2__.escapeEraData)(rawEdits);\n        const allDeletes = (0,_utils_data__WEBPACK_IMPORTED_MODULE_2__.escapeEraData)(rawDeletes);\n        logger.debug('ApplyVarChangeForMessage', '数据转义完成', {\n            before: { inserts: rawInserts, edits: rawEdits, deletes: rawDeletes },\n            after: { inserts: allInserts, edits: allEdits, deletes: allDeletes },\n        });\n        const editLog = []; // 用于收集本轮操作产生的所有变更记录。\n        // 2. --- 处理所有插入操作 (`<VariableInsert>`) ---\n        await (0,_insert_insert__WEBPACK_IMPORTED_MODULE_8__.processInsertBlocks)(allInserts, editLog);\n        // 3. --- 处理所有编辑操作 (`<VariableEdit>`) ---\n        await (0,_update__WEBPACK_IMPORTED_MODULE_9__.processEditBlocks)(allEdits, editLog, messageId);\n        // 4. --- 处理所有删除操作 (`<VariableDelete>`) ---\n        await (0,_delete__WEBPACK_IMPORTED_MODULE_7__.processDeleteBlocks)(allDeletes, editLog);\n        // 5. --- 覆盖式写入 EditLog ---\n        /*\n         * 核心逻辑：无论本轮是否产生了有效的变量修改，都必须用当前的 editLog (哪怕是空数组) 覆盖旧的 EditLog。\n         *\n         * 为什么必须覆盖而不是在没有修改时跳过？\n         *\n         * 根本原因在于，必须确保每个 MK 对应的 EditLog，严格且唯一地反映其所属消息**当前内容**所产生的变量修改。\n         *\n         * 考虑一个场景：\n         * 1. 消息A (MK_A) 的内容包含指令，生成了 EditLog_A。\n         * 2. 用户对消息A进行 swipe，生成了消息B (MK_B)，其内容完全没有变量修改标签。\n         *\n         * 如果在处理消息B时，因为没有检测到指令就“跳过写入”，那么与 MK_B 关联的 EditLog 就会是空的或不存在的。\n         * 这在当前是正确的。\n         *\n         * 但如果用户再次 swipe，从消息B切换回消息A。此时框架会重新处理消息A。\n         * 如果我们不执行覆盖式写入，那么与 MK_A 关联的 EditLog 仍然是之前生成的 EditLog_A，这没有问题。\n         *\n         * 真正的问题在于状态的明确性。覆盖式写入确保了任何一个 MK 的日志，在任何时间点，\n         * 都是其**当前可见内容**的直接产物，没有任何历史遗留。这使得整个系统的状态变迁变得清晰、可预测，\n         * 极大地降低了在复杂操作（如多次 `swipe`、删除、编辑）中出现状态不一致的风险。\n         *\n         * 因此，正确的做法是：用本次解析消息内容生成的 editLog (在无指令的场景下是 `[]`) 去覆盖，\n         * 从而斩断任何可能存在的历史关联，确保数据的一致性和纯粹性。\n         */\n        try {\n            await (0,_utils_era_data__WEBPACK_IMPORTED_MODULE_3__.updateEraMetaData)(meta => {\n                const newArr = Array.isArray(editLog) ? editLog : (0,_utils_data__WEBPACK_IMPORTED_MODULE_2__.parseEditLog)(editLog);\n                logger.debug('ApplyVarChangeForMessage', `准备为 MK=${MK} (MsgID=${messageId}) 写入 EditLog:\\n${JSON.stringify(newArr, null, 2)}`);\n                // 将本轮生成的日志数组，以当前消息的 MK 为键，存入 `EditLogs` 对象。\n                _.set(meta, [_utils_constants__WEBPACK_IMPORTED_MODULE_1__.LOGS_PATH, MK], JSON.stringify(newArr));\n                /*\n                 * N.B. 此函数不再负责更新 SelectedMks 数组。\n                 * 更新 SelectedMks 的职责已移交至上层调用者 (resyncStateOnHistoryChange 或 ApplyVarChange)，\n                 * 以避免在 resync 循环中意外修改正在被读取的 oldSelectedMks 状态。\n                 */\n                return meta;\n            });\n            logger.debug('ApplyVarChangeForMessage', `成功为 MK=${MK} 写入 EditLog。`);\n        }\n        catch (e) {\n            logger.error('ApplyVarChangeForMessage', `为 MK=${MK} 写入 EditLogs 失败: ${e?.message || e}`, e);\n        }\n        return MK;\n    }\n    catch (err) {\n        logger.error('ApplyVarChangeForMessage', `变量写入器异常: ${err?.message || err}`, err);\n        return null;\n    }\n};\n/**\n * **【标准事件处理入口】**\n * 这是一个上层封装，用于处理最新 AI 消息的变量写入，并负责更新 `SelectedMks` 数组。\n * 它会自动寻找最后一条 AI 消息进行操作，通常被绑定到“新消息生成”等事件上。\n */\nconst ApplyVarChange = async () => {\n    logger.debug('ApplyVarChange', `函数被调用...`);\n    // 1. 智能查找最后一条 AI 消息\n    const msg = (0,_utils_message__WEBPACK_IMPORTED_MODULE_5__.findLastAiMessage)();\n    if (!msg || typeof msg.message_id !== 'number') {\n        logger.log('ApplyVarChange', '未找到可处理的 AI 消息，退出。');\n        return;\n    }\n    const messageId = msg.message_id;\n    logger.log('ApplyVarChange', `找到目标 AI 消息 (ID: ${messageId})，开始处理变量写入...`);\n    // 2. 调用核心实现来处理变量和 EditLog 的写入。\n    // EditLog 会被自动关联到从该消息中读取到的 MK 上。\n    const MK = await ApplyVarChangeForMessage(msg);\n    // 3. 在核心流程执行完毕后，在此处统一更新 SelectedMks，确保状态一致。\n    try {\n        await (0,_utils_era_data__WEBPACK_IMPORTED_MODULE_3__.updateEraMetaData)(meta => {\n            const selectedMks = _.get(meta, _utils_constants__WEBPACK_IMPORTED_MODULE_1__.SEL_PATH, []);\n            // 关键：必须使用我们正在处理的 AI 消息的 messageId 作为索引，\n            // 来更新 SelectedMks 数组中对应的 MK 记录。\n            selectedMks[messageId] = MK;\n            _.set(meta, _utils_constants__WEBPACK_IMPORTED_MODULE_1__.SEL_PATH, selectedMks);\n            return meta;\n        });\n    }\n    catch (e) {\n        logger.error('ApplyVarChange', `更新 SelectedMks 失败: ${e?.message || e}`, e);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/core/crud/patcher.ts\n\n}");
  },
  "./src/ERA变量框架/core/crud/update.ts": 
  /*!*****************************************!*\
  !*** ./src/ERA变量框架/core/crud/update.ts ***!
  \*****************************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyEditAtLevel: () => (/* binding */ applyEditAtLevel),\n/* harmony export */   processEditBlocks: () => (/* binding */ processEditBlocks)\n/* harmony export */ });\n/* harmony import */ var _rollback__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../rollback */ \"./src/ERA变量框架/core/rollback.ts\");\n/* harmony import */ var _utils_era_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/era_data */ \"./src/ERA变量框架/utils/era_data.ts\");\n/* harmony import */ var _utils_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/data */ \"./src/ERA变量框架/utils/data.ts\");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/log */ \"./src/ERA变量框架/utils/log.ts\");\n/**\n * @file ERA 变量框架 - 变量编辑模块\n * @description\n * 该模块负责处理 `<VariableEdit>` 指令，实现对已存在变量的修改，并生成用于回滚的精确 `EditLog`。\n *\n * **设计理念**:\n * - **职责单一**: 模块只关心如何根据指令修改变量状态并生成日志，不关心指令从何而来。\n * - **精确日志**: `EditLog` 的准确性是回滚功能的基础。`applyEditAtLevel` 通过精巧的逻辑，\n *   特别是对“旧值”的历史追溯，确保了日志的绝对可靠。\n * - **容错性**: 当遇到无效路径（如尝试编辑不存在的路径）时，会跳过该条指令并继续处理其他有效指令，\n *   而不是中断整个写入过程。\n */\n\n\n\n\n\nconst logger = new _utils_log__WEBPACK_IMPORTED_MODULE_3__.Logger('core-crud-update');\n/**\n * **【递归编辑】**\n * 实现了 `<VariableEdit>` 的核心逻辑：**只修改已存在的路径**。\n *\n * **核心规则**:\n * 1. **路径必须存在**。如果指令中指定的路径在当前变量状态中不存在，则跳过该操作。\n * 2. **叶子节点操作**。只在遇到指令对象中的叶子节点（非对象值）时才执行实际的修改和日志记录。\n * 3. **精确的旧值查找**。为了生成可供回滚的 `EditLog`，它需要找到变量在本次修改发生**之前**的“旧值”。\n *    查找顺序为：首先通过 `findLatestNewValue` 在历史 `EditLog` 中回溯；如果找不到，\n *    则从当前消息处理开始时的变量快照中获取。这是确保日志准确性的关键。\n *\n * @param {any} statData - 状态数据对象 (即 `stat_data`)。\n * @param {string} basePath - 当前递归层级的基础路径。\n * @param {any} patchObj - 要应用的补丁对象。\n * @param {any[]} editLog - 用于收集变更记录的日志数组。\n * @param {number} messageId - 当前正在处理的消息的 ID，用于历史追溯。\n * @param {Map<string, any>} intraMessageState - 用于跟踪在**同一条消息内部**对同一变量的连续修改。\n */\nasync function applyEditAtLevel(statData, basePath, patchObj, editLog, messageId, intraMessageState) {\n    // --- 1. 路径和存在性检查 ---\n    const currentNodeInVars = basePath ? _.get(statData, basePath) : statData;\n    if (currentNodeInVars === undefined) {\n        logger.warn('applyEditAtLevel', `VariableEdit 跳过：路径不存在 -> ${basePath || '(root)'}`);\n        return;\n    }\n    // --- 2. 权限检查 (`updatable`) ---\n    // 读取 updatable 标志，如果未定义，则默认为 true (允许更新)。\n    const isUpdatable = _.get(currentNodeInVars, ['$meta', 'updatable'], true);\n    // 定义豁免条件：只有当指令明确要将 updatable 从 false 改为 true 时，才允许操作。\n    const isBypassingProtection = isUpdatable === false && // 当前是受保护的\n        _.get(patchObj, ['$meta', 'updatable']) === true; // 且指令意图是明确地将其改为 true\n    // 如果受保护且不满足豁免条件，则阻止整个子树的更新。\n    if (isUpdatable === false && !isBypassingProtection) {\n        logger.warn('applyEditAtLevel', `VariableEdit 失败：路径 <${basePath}> 受 \"$meta.updatable: false\" 保护，无法被修改。`);\n        return; // 终止此分支的递归。\n    }\n    // --- 3. 递归或执行 ---\n    // 遍历指令的键，以驱动递归。\n    for (const key of Object.keys(patchObj)) {\n        const subPath = basePath ? `${basePath}.${key}` : key;\n        const valNew = patchObj[key];\n        // **策略一：递归深入**\n        // 如果指令的值是对象，则继续向内递归。\n        if (_.isPlainObject(valNew)) {\n            await applyEditAtLevel(statData, subPath, valNew, editLog, messageId, intraMessageState);\n            continue; // 继续处理下一个键。\n        }\n        // **策略二：执行更新 (叶子节点)**\n        // 只有当指令的值不是对象时，才执行更新操作。\n        // 路径合法性检查：确保要写入的完整路径是存在的。\n        if (!_.has(statData, subPath)) {\n            logger.warn('applyEditAtLevel', `VariableEdit 失败：路径非法，无法写入 -> ${subPath}`);\n            continue;\n        }\n        // a. 查找旧值 (`valOld`)\n        // 这是确保回滚准确性的核心。\n        logger.debug('applyEditAtLevel', `[旧值查找] 准备为路径 <${subPath}> 从消息 ID <${messageId}> 向上追溯...`);\n        let valOld = await (0,_rollback__WEBPACK_IMPORTED_MODULE_0__.findLatestNewValue)(subPath, messageId, logger);\n        if (valOld === null) {\n            valOld = _.get(statData, subPath);\n            logger.debug('applyEditAtLevel', `[旧值查找] 追溯未找到历史值，从当前 stat_data 中获取到旧值: ${JSON.stringify(valOld)}`);\n        }\n        else {\n            logger.debug('applyEditAtLevel', `[旧值查找] 追溯成功，找到历史旧值: ${JSON.stringify(valOld)}`);\n        }\n        const cleaned = (0,_utils_data__WEBPACK_IMPORTED_MODULE_2__.sanitizeArrays)(valNew); // 清理新值\n        // b. 记录编辑意图\n        // 即使新旧值相同，也记录 EditLog，以完整反映作者的编辑意图。\n        // 这对于调试和历史追溯非常有用。\n        _.set(statData, subPath, cleaned);\n        editLog.push({\n            op: 'update',\n            path: subPath,\n            value_old: _.cloneDeep(valOld),\n            value_new: _.cloneDeep(cleaned),\n        });\n        // c. 更新楼内状态 Map，以便同一消息内的后续操作能正确追溯到这个新值。\n        intraMessageState.set(subPath, _.cloneDeep(cleaned));\n    }\n}\n/**\n * 处理所有 `<VariableEdit>` 指令块。\n *\n * @param {any[]} allEdits - 从消息中解析出的所有 edit 指令对象。\n * @param {any[]} editLog - 用于收集变更记录的日志数组。\n * @param {number} messageId - 当前正在处理的消息的 ID。\n */\nasync function processEditBlocks(allEdits, editLog, messageId) {\n    if (allEdits.length > 0) {\n        const intraMessageState = new Map(); // 用于跟踪在**本消息内部**对变量的连续修改。\n        // N.B. 同样，编辑操作也需要独立调用以确保能读取到同一消息中、此前已完成的插入或编辑操作的结果。\n        for (const editRoot of allEdits) {\n            if (!_.isPlainObject(editRoot) || _.isEmpty(editRoot))\n                continue;\n            try {\n                await (0,_utils_era_data__WEBPACK_IMPORTED_MODULE_1__.updateEraStatData)(async (stat) => {\n                    logger.debug('processEditBlocks', `处理 editRoot: ${JSON.stringify(editRoot)}`);\n                    // 从根路径 '' 开始统一递归入口，保持逻辑一致性。\n                    await applyEditAtLevel(stat, '', editRoot, editLog, messageId, intraMessageState);\n                    return stat;\n                });\n            }\n            catch (e) {\n                logger.error('processEditBlocks', `处理 editRoot 失败: ${e?.message || e}`, e);\n            }\n        }\n        logger.log('processEditBlocks', '所有 VariableEdit 操作完成');\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/core/crud/update.ts\n\n}");
  },
  "./src/ERA变量框架/core/key/mk.ts": 
  /*!************************************!*\
  !*** ./src/ERA变量框架/core/key/mk.ts ***!
  \************************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ensureMessageKey: () => (/* binding */ ensureMessageKey),\n/* harmony export */   ensureMkForLatestMessage: () => (/* binding */ ensureMkForLatestMessage),\n/* harmony export */   readMessageKey: () => (/* binding */ readMessageKey),\n/* harmony export */   updateLatestSelectedMk: () => (/* binding */ updateLatestSelectedMk)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ \"lodash\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/constants */ \"./src/ERA变量框架/utils/constants.ts\");\n/* harmony import */ var _utils_message__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/message */ \"./src/ERA变量框架/utils/message.ts\");\n/* harmony import */ var _utils_era_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/era_data */ \"./src/ERA变量框架/utils/era_data.ts\");\n/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/string */ \"./src/ERA变量框架/utils/string.ts\");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/log */ \"./src/ERA变量框架/utils/log.ts\");\n/**\n * @file ERA 变量框架 - 消息密钥 (MK) 管理模块\n * @description\n * 这个模块是 ERA 框架的基石，负责管理“消息密钥”（Message Key, MK）。\n *\n * **设计理念**:\n * ERA 的核心优势在于其鲁棒性，它通过将变量状态与 SillyTavern 不稳定的消息变量（message variables）\n * 解耦来实现这一点。MK 正是实现解耦的关键。\n *\n * MK 是一个由 **ERA 框架自身** 动态生成并**注入到消息内容字符串顶部**的唯一标识符。\n * 它就像一个不可变的“锚点”，随消息内容本身一起存在。ERA 的所有核心逻辑，包括变量追踪、\n * 回滚和同步，都围绕着识别和操作这些锚点来进行，而不是依赖于可能发生错位或被错误继承的消息变量。\n *\n * **MK 格式**:\n * MK 被包裹在一个独特的、类似 XML 的 `<era_data>` 标签中，其内部是一种**非标准**的类 JSON 格式，\n * 使用 `=` 作为分隔符，以避免与 AI 可能生成的标准 JSON 混淆。\n * e.g., `<era_data>{\"era-message-key\"=\"era_mk_...\",\"era-message-type\"=\"user\"}</era_data>`\n * 这种设计（而不是用 HTML 注释 `\x3c!-- --\x3e`）是为了防止 MK 被其他可能移除注释的脚本无意中破坏。\n *\n * **核心功能**:\n * 1. **生成与注入**: `ensureMessageKey` 函数确保任何需要追踪的消息都拥有一个 MK。如果不存在，\n *    它会生成一个新的 MK 并注入到消息内容的开头。\n * 2. **解析与读取**: `readMessageKey` 函数提供了一个只读的接口，用于从消息内容中解析出 MK。\n * 3. **同步保障**: `updateLatestSelectedMk` 等函数确保核心数据结构 `SelectedMks` 与最新的\n *    消息状态保持一致，是框架自愈能力的重要组成部分。\n */\n\n\n\n\n\n\n\nconst logger = new _utils_log__WEBPACK_IMPORTED_MODULE_5__.Logger('core-key-mk');\n// ==================================================================\n// 内部辅助函数\n// ==================================================================\n/**\n * 从消息内容字符串中解析出 `EraData` 对象。这是一个只读操作。\n * @param {string | null | undefined} messageContent - 消息的内容字符串。\n * @returns {EraData | null} 解析成功则返回 `EraData` 对象，否则返回 null。\n */\nfunction parseEraData(messageContent) {\n    if (typeof messageContent !== 'string') {\n        return null;\n    }\n    const match = messageContent.match(_utils_constants__WEBPACK_IMPORTED_MODULE_1__.ERA_DATA_REGEX);\n    if (!match || !match[1]) {\n        return null;\n    }\n    try {\n        // 由于 MK 块内部是自定义的 `{\"key\"=\"value\"}` 格式，不能使用 JSON.parse。\n        // 必须使用正则表达式进行宽松匹配来提取键值。\n        const customFormatBlock = match[1];\n        const keyMatch = customFormatBlock.match(/\"era-message-key\"\\s*=\\s*\"(.*?)\"/);\n        const typeMatch = customFormatBlock.match(/\"era-message-type\"\\s*=\\s*\"(.*?)\"/);\n        if (keyMatch?.[1] && typeMatch?.[1]) {\n            return {\n                'era-message-key': keyMatch[1],\n                'era-message-type': typeMatch[1],\n            };\n        }\n        return null;\n    }\n    catch {\n        return null;\n    }\n}\n// ==================================================================\n// 导出的核心函数\n// ==================================================================\n/**\n * **【读取 MK】** 从一个消息对象中只读地提取其消息密钥（MK）。\n * 这个函数经过特别优化，以应对滑动（swipe）等场景下消息对象结构不一致的问题。\n * 它会全面检查消息的 `mes`、`message` 以及 `swipes` 数组中的每一个元素，直到找到第一个有效的 MK 为止。\n * @param {TavernMessage} msg - 酒馆消息对象。\n * @returns {string} 找到的 MK；如果不存在，则返回空字符串。\n */\nfunction readMessageKey(msg) {\n    if (!msg)\n        return '';\n    // 核心逻辑：始终且仅根据 getMessageContent 的结果来解析 MK。\n    const content = (0,_utils_message__WEBPACK_IMPORTED_MODULE_2__.getMessageContent)(msg);\n    const mk = parseEraData(content)?.['era-message-key'] || '';\n    // 移除遍历其他 swipes 的错误逻辑。如果当前激活的内容没有 MK，就必须返回空字符串，\n    // 以强制 ensureMessageKey 生成新的 MK。\n    return mk;\n    /*\n     * ==================================================================\n     * 【已废弃的兼容逻辑】 - 2025/10/02\n     *\n     * 以下代码块是为了兼容旧版酒馆的一个特性：一个消息的多个 swipe 可能共享同一个底层消息变量，\n     * 因此 MK 可能存在于任何一个 swipe 中。\n     *\n     * **废弃原因**:\n     * 在当前的 ERA 架构中，每个 swipe 都被视为独立的内容。如果当前激活的 swipe 内容中没有 MK，\n     * 就意味着它是一个全新的、需要被赋予新 MK 的消息。此时若继续查找并返回其他 swipe 的旧 MK，\n     * 将会导致 `ensureMessageKey` 错误地认为新消息已有 MK，从而跳过必要的“生成新 MK”流程。\n     * 这正是导致 swipe 新消息时无法正确写入变量的根本原因。\n     *\n     * 因此，该兼容逻辑已被注释掉，以确保 `readMessageKey` 的行为与当前架构的设计意图保持一致。\n     * ==================================================================\n     */\n    // const mkFromCurrent = parseEraData(content)?.['era-message-key'];\n    // if (mkFromCurrent) {\n    //   return mkFromCurrent;\n    // }\n    // if (Array.isArray(msg.swipes)) {\n    //   for (const swipeContent of msg.swipes) {\n    //     const mkFromSwipe = parseEraData(swipeContent)?.['era-message-key'];\n    //     if (mkFromSwipe) {\n    //       return mkFromSwipe;\n    //     }\n    //   }\n    // }\n    // const mkFromMessage = parseEraData(msg.message)?.['era-message-key'];\n    // if (mkFromMessage) {\n    //   return mkFromMessage;\n    // }\n    // return '';\n}\n/**\n * **【确保 MK 存在】**\n * 这是本模块最核心的函数。它检查一个消息是否已拥有 MK，如果尚未拥有，则为其生成一个新的 MK 并注入到消息内容中。\n * 这是解决“鸡生蛋/蛋生鸡”问题的关键：在对变量进行任何操作之前，必须先确保有一个可供依附的锚点（MK）。\n *\n * @param {TavernMessage} msg - 目标消息对象 (必须包含 `message_id`, `role`, 以及 `message` 或 `swipes`)。\n * @returns {Promise<{mk: string, isNew: boolean}>} 返回包含 MK 和一个布尔值的对象，该布尔值指示是否创建了新的 MK。\n */\nasync function ensureMessageKey(msg) {\n    if (!msg || typeof msg.message_id !== 'number' || !msg.role) {\n        logger.warn('ensureMessageKey', `无效的消息对象结构，无法确保Key。msg=${JSON.stringify(msg)}`);\n        return { mk: '', isNew: false };\n    }\n    // 1. 使用增强的 readMessageKey 检查是否已存在 MK\n    const existingMk = readMessageKey(msg);\n    if (existingMk) {\n        return { mk: existingMk, isNew: false }; // 已存在，直接返回\n    }\n    // 2. 生成新的 MK 和元数据块\n    const newMk = `era_mk_${Date.now()}_${(0,_utils_string__WEBPACK_IMPORTED_MODULE_4__.rnd)()}`;\n    const messageType = msg.role === 'user' ? 'user' : 'assistant';\n    const dataString = `<${_utils_constants__WEBPACK_IMPORTED_MODULE_1__.ERA_DATA_TAG}>{\"era-message-key\"=\"${newMk}\",\"era-message-type\"=\"${messageType}\"}</${_utils_constants__WEBPACK_IMPORTED_MODULE_1__.ERA_DATA_TAG}>`;\n    logger.log('ensureMessageKey', `为消息 (ID: ${msg.message_id}) 注入新的Key: ${newMk}`);\n    // 3. 构造新的消息内容并统一调用更新函数\n    const currentContent = (0,_utils_message__WEBPACK_IMPORTED_MODULE_2__.getMessageContent)(msg) ?? '';\n    const newContent = dataString + '\\n' + currentContent;\n    // 使用从 utils.ts 导入的通用函数来更新消息，该函数已封装了处理 swipes 的逻辑。\n    await (0,_utils_message__WEBPACK_IMPORTED_MODULE_2__.updateMessageContent)(msg, newContent);\n    return { mk: newMk, isNew: true };\n}\n/**\n * **【确保最新消息的 MK】**\n * 这是一个便捷函数，专门用于确保当前聊天记录中的最后一条消息拥有 MK。\n * 它通常在监听到新消息生成等事件时被调用，以确保新消息能被 ERA 系统正确追踪。\n * @returns {Promise<{mk: string, message_id: number | null, isNewKey: boolean}>} 返回包含 MK、消息 ID 和一个布尔值的对象，该布尔值指示是否创建了新的 MK。\n */\nconst ensureMkForLatestMessage = async () => {\n    try {\n        const msg = getChatMessages(-1, { include_swipes: true })?.[0];\n        // 保留此日志，因为它对于调试事件触发时的消息状态至关重要。\n        logger.debug('ensureMkForLatestMessage', `获取到的最新消息对象 (msg): ${JSON.stringify(msg)}`);\n        if (!msg || typeof msg.message_id !== 'number') {\n            logger.warn('ensureMkForLatestMessage', '无法读取最新消息或其ID，退出');\n            return { mk: '', message_id: null, isNewKey: false };\n        }\n        // ensureMessageKey 会返回最终的 MK 和一个布尔值\n        const { mk, isNew } = await ensureMessageKey(msg);\n        logger.log('ensureMkForLatestMessage', `已为最新消息 ${msg.message_id} 确保 MK 存在。 (是否新建: ${isNew})`);\n        return { mk, message_id: msg.message_id, isNewKey: isNew };\n    }\n    catch (err) {\n        logger.error('ensureMkForLatestMessage', `确保MK时异常: ${err?.message || err}`, err);\n        return { mk: '', message_id: null, isNewKey: false };\n    }\n};\n/**\n * **【更新最新已选 MK】**\n * 这是一个“保险”函数，用于在每次事件处理的最后，强制校准 `SelectedMks` 数组中关于**最新消息**的记录。\n * 它确保即使在复杂的异步流程中，`SelectedMks` 的尾部也始终与实际的最新消息保持严格同步。\n * @returns {Promise<void>}\n */\nconst updateLatestSelectedMk = async () => {\n    const msg = getChatMessages(-1, { include_swipes: true })?.[0];\n    if (!msg || typeof msg.message_id !== 'number')\n        return;\n    // 确保 MK 存在并获取它\n    const { mk: MK } = await ensureMessageKey(msg);\n    if (!MK)\n        return;\n    // 更新 ERAMetaData 中的 SelectedMks 数组\n    await (0,_utils_era_data__WEBPACK_IMPORTED_MODULE_3__.updateEraMetaData)(meta => {\n        const selectedMks = lodash__WEBPACK_IMPORTED_MODULE_0___default().get(meta, _utils_constants__WEBPACK_IMPORTED_MODULE_1__.SEL_PATH, []);\n        // 只有在记录不一致时才执行写操作，以优化性能\n        if (selectedMks[msg.message_id] !== MK) {\n            selectedMks[msg.message_id] = MK;\n            lodash__WEBPACK_IMPORTED_MODULE_0___default().set(meta, _utils_constants__WEBPACK_IMPORTED_MODULE_1__.SEL_PATH, selectedMks);\n        }\n        return meta;\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/core/key/mk.ts\n\n}");
  },
  "./src/ERA变量框架/core/rollback.ts": 
  /*!**************************************!*\
  !*** ./src/ERA变量框架/core/rollback.ts ***!
  \**************************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   findLatestNewValue: () => (/* binding */ findLatestNewValue),\n/* harmony export */   rollbackByMk: () => (/* binding */ rollbackByMk)\n/* harmony export */ });\n/* harmony import */ var _utils_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/constants */ \"./src/ERA变量框架/utils/constants.ts\");\n/* harmony import */ var _key_mk__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./key/mk */ \"./src/ERA变量框架/core/key/mk.ts\");\n/* harmony import */ var _utils_message__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/message */ \"./src/ERA变量框架/utils/message.ts\");\n/* harmony import */ var _utils_era_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/era_data */ \"./src/ERA变量框架/utils/era_data.ts\");\n/* harmony import */ var _utils_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/data */ \"./src/ERA变量框架/utils/data.ts\");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/log */ \"./src/ERA变量框架/utils/log.ts\");\n/**\n * @file ERA 变量框架 - 回滚与历史追溯模块\n * @description\n * 该模块提供了 ERA 框架“时间旅行”能力的核心实现。它负责根据 `EditLog` 精确地撤销变量修改，\n * 以及在需要时向上追溯历史以查找变量的旧值。\n *\n * **设计理念**:\n * - **可逆操作**: 所有的变量写入操作都必须是可逆的。`rollbackByMk` 函数通过读取 `EditLog`\n *   并执行反向操作（`insert` -> `unset`, `update` -> `set to value_old`）来保证这一点。\n * - **历史的权威性**: `EditLog` 是变量状态变迁的唯一真实记录。`findLatestNewValue` 函数\n *   体现了这一原则，它不信任任何临时的变量快照，而是通过回溯 `EditLog` 链来查找一个变量\n *   在特定时间点之前的真实值。\n */\n\n\n\n\n\n\n\nconst logger = new _utils_log__WEBPACK_IMPORTED_MODULE_5__.Logger('core-rollback');\n/**\n * **【回滚】**\n * 根据一个给定的消息密钥（MK），精确地撤销该消息所引入的所有变量变更。\n *\n * @param {string} MK - 要回滚的目标消息的密钥。\n * @param {boolean} [silent=false] - 是否为静默模式。在静默模式下，函数不会自己触发日志刷新，\n *   这在 `resyncStateOnHistoryChange` 等批量操作中非常有用，可以避免产生大量冗余日志。\n */\nasync function rollbackByMk(MK, silent = false) {\n    try {\n        logger.log('rollbackByMk', `开始回滚, MK=${MK}`);\n        await updateVariablesWith(v => {\n            const meta = _.get(v, _utils_constants__WEBPACK_IMPORTED_MODULE_0__.META_DATA_PATH, {});\n            const stat = _.get(v, _utils_constants__WEBPACK_IMPORTED_MODULE_0__.STAT_DATA_PATH, {});\n            const raw = _.get(meta, [_utils_constants__WEBPACK_IMPORTED_MODULE_0__.LOGS_PATH, MK]);\n            const arr = (0,_utils_data__WEBPACK_IMPORTED_MODULE_4__.parseEditLog)(raw);\n            if (!arr || !arr.length) {\n                logger.debug('rollbackByMk', `EditLog 为空或无效，跳过回滚。`);\n                return v;\n            }\n            // 关键：必须逆序遍历 EditLog 来执行回滚。\n            // 这确保了对同一变量的多次修改能够被正确地、按相反的顺序撤销。\n            for (let i = arr.length - 1; i >= 0; i--) {\n                const e = arr[i];\n                const op = String(e?.op || '').toLowerCase();\n                const path = String(e?.path || '');\n                if (!path)\n                    continue;\n                if (op === 'insert') {\n                    // 对于“插入”操作，回滚即为“删除”。\n                    _.unset(stat, path);\n                    continue;\n                }\n                if (op === 'update' || op === 'delete') {\n                    // 对于“更新”或“删除”操作，回滚即为恢复到“旧值”。\n                    if (typeof e?.value_old === 'undefined') {\n                        // 如果日志中没有记录旧值，最安全的回滚方式是直接删除该路径。\n                        _.unset(stat, path);\n                    }\n                    else {\n                        _.set(stat, path, _.cloneDeep(e.value_old));\n                    }\n                }\n            }\n            _.set(v, _utils_constants__WEBPACK_IMPORTED_MODULE_0__.STAT_DATA_PATH, stat);\n            return v;\n        }, _utils_constants__WEBPACK_IMPORTED_MODULE_0__.CHAT_SCOPE);\n        logger.log('rollbackByMk', `回滚完成：MK=${MK}`);\n    }\n    catch (e) {\n        logger.error('rollbackByMk', `回滚异常：MK=${MK} → ${e?.message || e}`, e);\n    }\n}\n/**\n * **【历史追溯】**\n * 向上追溯聊天历史，查找某个变量路径在指定消息之前的最后一个值 (`value_new`)。\n * 这是为 `applyEditAtLevel` 函数提供支持的关键辅助函数，用于在生成 `update` 日志时，\n * 准确地记录下 `value_old`。\n *\n * @param {string} path - 要查找的变量的完整路径。\n * @param {number} startMessageId - 从此消息 ID 的**前一条**消息开始向上查找。\n * @param {Logger} [logger] - 可选的 Logger 实例，用于记录详细的追溯过程。\n * @returns {Promise<any>} 返回找到的 `value_new`。如果追溯到聊天记录的开头都未找到，则返回 `null`。\n */\nasync function findLatestNewValue(path, startMessageId, logger) {\n    logger?.debug('findLatestNewValue', `开始为路径 <${path}> 从消息ID <${startMessageId}> 向上追溯历史值...`);\n    const messages = getChatMessages('0-{{lastMessageId}}', { include_swipes: false });\n    if (!messages || messages.length < 1) {\n        logger?.debug('findLatestNewValue', `消息历史为空，无法追溯。`);\n        return null;\n    }\n    const startIndex = messages.findIndex(m => m.message_id === startMessageId);\n    if (startIndex === -1) {\n        logger?.warn('findLatestNewValue', `错误：在消息列表中未找到起始消息ID: ${startMessageId}`);\n        return null;\n    }\n    // 从起始消息的前一条开始，向上（向旧）遍历历史消息。\n    for (let i = startIndex - 1; i >= 0; i--) {\n        const message = messages[i];\n        const msgId = message?.message_id;\n        logger?.debug('findLatestNewValue', `[进度] 正在检查消息 (ID: ${msgId})，内容: \"${((0,_utils_message__WEBPACK_IMPORTED_MODULE_2__.getMessageContent)(message) || '').substring(0, 100)}...\"`);\n        // 使用 isUserMessage 辅助函数，并检查 message_id\n        if ((0,_utils_message__WEBPACK_IMPORTED_MODULE_2__.isUserMessage)(message) || typeof msgId !== 'number') {\n            continue;\n        }\n        const mk = (0,_key_mk__WEBPACK_IMPORTED_MODULE_1__.readMessageKey)(message);\n        if (!mk) {\n            logger?.debug('findLatestNewValue', `[进度] 消息 (ID: ${msgId}) 无 MK，跳过。`);\n            continue; // 跳过没有 MK 的 AI 消息。\n        }\n        const { meta: metaData } = (0,_utils_era_data__WEBPACK_IMPORTED_MODULE_3__.getEraData)();\n        const editLogRaw = _.get(metaData, [_utils_constants__WEBPACK_IMPORTED_MODULE_0__.LOGS_PATH, mk]);\n        const editLog = (0,_utils_data__WEBPACK_IMPORTED_MODULE_4__.parseEditLog)(editLogRaw);\n        if (!editLog || editLog.length === 0) {\n            logger?.debug('findLatestNewValue', `[进度] MK ${mk} 的 EditLog 为空，跳过。`);\n            continue; // 跳过 EditLog 为空的。\n        }\n        logger?.debug('findLatestNewValue', `[进度] 正在检查 MK ${mk} 的 EditLog...\\n${(0,_utils_data__WEBPACK_IMPORTED_MODULE_4__.J)(editLog)}`);\n        // 关键：从后向前遍历该消息的 EditLog，这样找到的第一个匹配项就是最新的。\n        for (let j = editLog.length - 1; j >= 0; j--) {\n            const logEntry = editLog[j];\n            if (!logEntry || !logEntry.path)\n                continue;\n            // Case 1: 精确路径匹配。\n            if (logEntry.path === path) {\n                // 如果在历史追溯中找到了 delete 记录，这意味着状态可能不一致。\n                // 因为 applyEditAtLevel 的前置检查应阻止对已删除变量的更新。\n                // 记录一个错误以供调试，并返回 null，因为该变量在逻辑上是不存在的。\n                if (logEntry.op === 'delete') {\n                    logger?.error('findLatestNewValue', `>> 状态异常! 在消息(ID:${message.message_id}, MK:${mk})中为路径 <${path}> 找到了 'delete' 记录。这表明 update 操作可能正在尝试修改一个已被删除的变量。`);\n                    return null;\n                }\n                logger?.debug('findLatestNewValue', `>> 成功! 在消息(ID:${message.message_id}, MK:${mk})中找到精确路径 <${path}> 的值为: ${(0,_utils_data__WEBPACK_IMPORTED_MODULE_4__.J)(logEntry.value_new)}`);\n                return _.cloneDeep(logEntry.value_new);\n            }\n            // Case 2: 查找的路径是日志条目路径的子路径 (即 logEntry.path 是父级)。\n            // 例如, 查找 \"a.b.c\", 而日志中有对 \"a.b\" 的修改。\n            if (path.startsWith(logEntry.path + '.')) {\n                const subPath = path.substring(logEntry.path.length + 1);\n                const parentNewVal = logEntry.value_new;\n                if (_.isPlainObject(parentNewVal) && _.has(parentNewVal, subPath)) {\n                    const foundVal = _.get(parentNewVal, subPath);\n                    logger?.debug('findLatestNewValue', `>> 成功! 在消息(ID:${message.message_id}, MK:${mk})中找到父级路径 <${logEntry.path}>, 并从中提取子路径 <${subPath}> 的值为: ${(0,_utils_data__WEBPACK_IMPORTED_MODULE_4__.J)(foundVal)}`);\n                    return _.cloneDeep(foundVal);\n                }\n            }\n        }\n    }\n    // 如果追溯到聊天记录的开头都未找到，说明这是该变量的首次出现。\n    logger?.debug('findLatestNewValue', `向上追溯未找到路径 ${path} 的任何历史值，将使用 null 作为旧值`);\n    return null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/core/rollback.ts\n\n}");
  },
  "./src/ERA变量框架/core/sync.ts": 
  /*!**********************************!*\
  !*** ./src/ERA变量框架/core/sync.ts ***!
  \**********************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   forceSyncLastAiMessage: () => (/* binding */ forceSyncLastAiMessage),\n/* harmony export */   resyncStateOnHistoryChange: () => (/* binding */ resyncStateOnHistoryChange)\n/* harmony export */ });\n/* harmony import */ var _utils_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/constants */ \"./src/ERA变量框架/utils/constants.ts\");\n/* harmony import */ var _key_mk__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./key/mk */ \"./src/ERA变量框架/core/key/mk.ts\");\n/* harmony import */ var _utils_message__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/message */ \"./src/ERA变量框架/utils/message.ts\");\n/* harmony import */ var _rollback__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rollback */ \"./src/ERA变量框架/core/rollback.ts\");\n/* harmony import */ var _utils_era_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/era_data */ \"./src/ERA变量框架/utils/era_data.ts\");\n/* harmony import */ var _utils_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/data */ \"./src/ERA变量框架/utils/data.ts\");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/log */ \"./src/ERA变量框架/utils/log.ts\");\n/* harmony import */ var _crud_patcher__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./crud/patcher */ \"./src/ERA变量框架/core/crud/patcher.ts\");\n\n/**\n * @file 状态同步核心\n * @description 本文件中的 `resyncStateOnHistoryChange` 是 ERA 变量框架最核心的函数之一。\n * 它通过实现“逆序回滚，顺序重算”的逻辑，解决了因消息删除、切换分支 (swipe) 等操作导致的变量状态与消息历史不一致的棘手问题。\n *\n * ### 酒馆的奇特行为 (Feature, not a bug)\n *\n * 当删除一条 swipe (例如，带有变量 id=2 的消息) 时：\n * 1. **内容与变量错位**: 后一条 swipe (id=3) 的**内容**会“顶”到被删除的 swipe (id=2) 的位置上，但**变量**却保留了 id=2 的变量。\n * 2. **孤儿变量残留**: 原本的 swipe 3 消息虽然在界面上消失了，但它对应的**消息变量** (id=3) 仍然残留在聊天数据中，成为“孤儿变量”。\n * 3. **孤儿变量继承**: 如果用户此时再 swipe 一次，新生成的 swipe 3 将会**继承**这个残留的孤儿变量 (id=3)，导致新内容配旧变量，进一步加剧状态混乱。\n * 4. **结果**: 我们得到了一个内容是 id=3、变量是 id=2 的“混合”消息，并且还有一个 id=3 的孤儿变量随时可能被新消息继承，造成严重的状态不一致。\n *\n * ### 本函数的解决策略\n *\n * `resyncStateOnHistoryChange` 通过全面的状态比对来解决此问题：\n * 1. 在 `message_deleted`, `message_swiped` 等事件触发时被调用。\n * 2. 全面获取当前实际的消息列表，并与之前记录的 `SelectedMks` 序列进行比对。\n * 3. 精确找到第一个不一致的点（无论是删除、还是修改）。\n * 4. **逆序回滚**: 从后往前，将所有不一致的 `MK` 所引入的变量修改全部撤销。\n * 5. **顺序重算**: 从不一致点开始，根据当前消息的**实际内容**，重新计算并写入变量。\n *\n * **最终效果**: 无论历史记录发生何种变化，变量状态都能被完美地自动修复，确保数据一致性。\n */\n\n\n\n\n\n\n\n\nconst logger = new _utils_log__WEBPACK_IMPORTED_MODULE_6__.Logger('core-sync');\n/**\n * 获取用于变量操作的MK。如果消息是用户消息，则返回null以跳过操作。\n * @param msg 消息对象\n * @returns MK 字符串或 null\n */\nconst getMkFromMsg = (msg) => {\n    const key = (0,_key_mk__WEBPACK_IMPORTED_MODULE_1__.readMessageKey)(msg);\n    if (!key)\n        return null;\n    return key;\n};\n/**\n * 检查一组 MK 对应的 EditLog 是否都为空\n * @param mks MK 列表\n * @returns 如果所有 EditLog 都为空则返回 true\n */\nconst checkEditLogsAreEmpty = (mks) => {\n    const { meta: metaData } = (0,_utils_era_data__WEBPACK_IMPORTED_MODULE_4__.getEraData)();\n    for (const mk of mks) {\n        if (!mk)\n            continue; // 跳过 null (用户消息)\n        const editLogRaw = _.get(metaData, [_utils_constants__WEBPACK_IMPORTED_MODULE_0__.LOGS_PATH, mk]);\n        const editLog = (0,_utils_data__WEBPACK_IMPORTED_MODULE_5__.parseEditLog)(editLogRaw);\n        if (editLog.length > 0) {\n            return false; // 发现一个非空 log，直接返回 false\n        }\n    }\n    return true; // 所有 log 都为空\n};\n/**\n * 当聊天记录发生变化（删除、切换分支）时，重新同步状态的核心函数\n * 实现了“逆序回滚，顺序重算”的逻辑\n * @param {boolean} [forceFullResync=false] - 如果为 true，则强制从头开始完全重算，忽略差异检测。\n */\nconst resyncStateOnHistoryChange = async (forceFullResync = false) => {\n    if (forceFullResync) {\n        logger.warn('resyncStateOnHistoryChange', '强制完全重算模式已启动！');\n    }\n    else {\n        logger.log('resyncStateOnHistoryChange', '聊天记录变更，启动状态同步...');\n    }\n    // 核心假设：getChatMessages 会重新生成 message_id，使其保持从 0 开始的连续序列。\n    const allMessages = getChatMessages('0-{{lastMessageId}}', { include_swipes: true });\n    logger.debug('resyncStateOnHistoryChange', '获取到的 allMessages:', allMessages);\n    const { meta: oldMetaData } = (0,_utils_era_data__WEBPACK_IMPORTED_MODULE_4__.getEraData)();\n    const oldSelectedMks = _.cloneDeep(_.get(oldMetaData, _utils_constants__WEBPACK_IMPORTED_MODULE_0__.SEL_PATH, []));\n    logger.debug('resyncStateOnHistoryChange', `状态快照: oldSelectedMks.length=${oldSelectedMks.length}, allMessages.length=${allMessages?.length ?? 0}`);\n    if (!allMessages || allMessages.length === 0) {\n        logger.log('resyncStateOnHistoryChange', '当前聊天记录为空，不执行任何操作，同步终止。');\n        return;\n    }\n    let firstRecalcId = -1;\n    if (forceFullResync) {\n        firstRecalcId = 0;\n        logger.log('resyncStateOnHistoryChange', '强制模式：设置重算起点为 0。');\n    }\n    // Case 1: 消息被删除 (新列表比旧列表短)\n    else if (allMessages.length < oldSelectedMks.length) {\n        logger.log('resyncStateOnHistoryChange', '检测到消息删除。');\n        // 从后往前，寻找第一个 \"currentMk === oldMk_at_same_index\" 的对齐点\n        for (let i = allMessages.length - 1; i >= 0; i--) {\n            const currentMk = getMkFromMsg(allMessages[i]);\n            const recordedMk = oldSelectedMks[i];\n            logger.debug('resyncStateOnHistoryChange', `[删除-对齐检查] i=${i}, currentMk=${currentMk}, recordedMk=${recordedMk}`);\n            if (currentMk === recordedMk) {\n                firstRecalcId = i + 1;\n                logger.log('resyncStateOnHistoryChange', `找到对齐点于 message_id=${i} (MK=${currentMk})。将从 ID ${firstRecalcId} 开始检查。`);\n                break;\n            }\n        }\n        if (firstRecalcId === -1) {\n            firstRecalcId = 0;\n            logger.log('resyncStateOnHistoryChange', '未找到任何对齐点，将从头开始检查。');\n        }\n        // 【优化】检查被删除的 MK 是否影响变量\n        // 稳健地找出被删除的 MK：对比新旧 MK 序列的差异\n        const currentMkSequence = allMessages.map(getMkFromMsg).filter(mk => mk);\n        const oldMkSequence = oldSelectedMks.filter(mk => mk);\n        const deletedMks = _.difference(oldMkSequence, currentMkSequence);\n        logger.debug('resyncStateOnHistoryChange', `旧MK序列: [${oldMkSequence.join(', ')}]`);\n        logger.debug('resyncStateOnHistoryChange', `新MK序列: [${currentMkSequence.join(', ')}]`);\n        logger.debug('resyncStateOnHistoryChange', `计算出的被删除MK: [${deletedMks.join(', ')}]`);\n        if (deletedMks.length > 0 && checkEditLogsAreEmpty(deletedMks)) {\n            logger.log('resyncStateOnHistoryChange', `检测到被删除的 ${deletedMks.length} 条消息均不含变量修改，执行快速同步。`);\n            const newSelectedMks = [];\n            for (let i = 0; i < allMessages.length; i++) {\n                newSelectedMks[i] = getMkFromMsg(allMessages[i]);\n            }\n            await (0,_utils_era_data__WEBPACK_IMPORTED_MODULE_4__.updateEraMetaData)(meta => {\n                _.set(meta, _utils_constants__WEBPACK_IMPORTED_MODULE_0__.SEL_PATH, newSelectedMks);\n                return meta;\n            });\n            logger.log('resyncStateOnHistoryChange', '快速同步完成，仅修正 SelectedMks 数组。');\n            return;\n        }\n    }\n    // Case 2: 消息被修改/切换 (长度不变)\n    else if (allMessages.length === oldSelectedMks.length) {\n        logger.log('resyncStateOnHistoryChange', '检测到消息长度不变，可能为修改或切换。');\n        // 从后往前，寻找第一个不匹配的点\n        for (let i = allMessages.length - 1; i >= 0; i--) {\n            const currentMk = getMkFromMsg(allMessages[i]);\n            const recordedMk = oldSelectedMks[i];\n            logger.debug('resyncStateOnHistoryChange', `[切换-对齐检查] i=${i}, currentMk=${currentMk}, recordedMk=${recordedMk}`);\n            if (currentMk !== recordedMk) {\n                firstRecalcId = i;\n            }\n        }\n        if (firstRecalcId === -1) {\n            logger.log('resyncStateOnHistoryChange', '所有MK均匹配，无需重算。');\n            // N.B. 在当前架构下，MK 已被直接写入消息内容，与内容强绑定。\n            // 因此，任何导致内容变化的操作（如 swipe）也必然会导致 MK 的变化。\n            // 这意味着，如果 MK 序列完全匹配，那么内容也必然完全匹配，无需进行任何重算或保险性检查。\n            return; // 直接返回，终止同步。\n        }\n        else {\n            logger.log('resyncStateOnHistoryChange', `找到最早的不匹配点于 message_id=${firstRecalcId}。将从该点开始重算。`);\n        }\n    }\n    // Case 3: 消息被添加 (新列表比旧列表长)\n    else {\n        logger.log('resyncStateOnHistoryChange', '检测到消息添加。');\n        // 将重算起点设置为新消息的起始索引，让同步流程统一处理\n        firstRecalcId = oldSelectedMks.length;\n        logger.log('resyncStateOnHistoryChange', `新增消息的写入逻辑已由同步流程接管。将从新增消息 (ID: ${firstRecalcId}) 开始处理。`);\n    }\n    // 3. 收集需要回滚的 MK 列表，并执行逆序回滚\n    if (firstRecalcId > -1) {\n        const mksToRollback = oldSelectedMks.slice(firstRecalcId).filter(mk => mk);\n        if (mksToRollback.length > 0) {\n            logger.log('resyncStateOnHistoryChange', `准备回滚 ${mksToRollback.length} 个MK: [${mksToRollback.join(', ')}]`);\n            for (const mk of mksToRollback.reverse()) {\n                logger.debug('resyncStateOnHistoryChange', `[回滚] 正在回滚 MK: ${mk}`);\n                await (0,_rollback__WEBPACK_IMPORTED_MODULE_3__.rollbackByMk)(mk, true); // true 表示只回滚，不重写\n            }\n            logger.log('resyncStateOnHistoryChange', '逆序回滚完成。');\n        }\n    }\n    // 4. 从不匹配点开始，顺序重新应用变量修改，并构建新的 selectedMks\n    logger.log('resyncStateOnHistoryChange', `从 ID ${firstRecalcId} 开始顺序重算...`);\n    const newSelectedMks = oldSelectedMks.slice(0, firstRecalcId); // 继承匹配部分\n    for (let i = firstRecalcId; i < allMessages.length; i++) {\n        const msg = allMessages[i];\n        logger.debug('resyncStateOnHistoryChange', `[重算] 正在处理消息索引: ${i}`);\n        const newMk = await (0,_crud_patcher__WEBPACK_IMPORTED_MODULE_7__.ApplyVarChangeForMessage)(msg);\n        newSelectedMks[i] = newMk; // 使用重算后的新 message_id (即 i) 作为索引\n    }\n    logger.log('resyncStateOnHistoryChange', '顺序重算完成。');\n    // 5. 更新 SelectedMks 数组\n    await (0,_utils_era_data__WEBPACK_IMPORTED_MODULE_4__.updateEraMetaData)(meta => {\n        _.set(meta, _utils_constants__WEBPACK_IMPORTED_MODULE_0__.SEL_PATH, newSelectedMks);\n        return meta;\n    });\n    logger.log('resyncStateOnHistoryChange', '状态同步完成。');\n    // ==================================================================\n    // 【保险机制】 - 已于 2025/10/02 移除\n    //\n    // **历史原因**:\n    // 该机制最初是为了解决一个旧架构下的“内容-变量错位”问题。在旧架构中，当删除一条 swipe 时，\n    // 后一条 swipe 的内容会“顶替”上来，但其底层的消息变量（及其 MK）却保持不变。\n    // 这导致主同步逻辑的 MK 比对失效，无法发现状态变化。\n    // 为此，保险机制被设计为：通过 `oldSelectedMks`（状态变更前的快照）找到被删除的旧 MK，\n    // 强制回滚它，然后根据当前可见的新内容重新写入变量，从而修复错位。\n    //\n    // **当前架构下的情况与移除原因**:\n    // 在当前架构中，MK 已被直接写入消息内容，与内容强绑定。当 swipe 导致内容变化时，MK 也会随之变化。\n    // 这使得主同步逻辑（逆序回滚、顺序重算）已经能够完全、正确地处理 swipe 等场景，不再需要此保险机制。\n    //\n    // 继续保留该机制不仅是冗余的，而且会主动引发 Bug：\n    // 它依然按照旧逻辑，使用 `oldSelectedMks` 回滚一个过时的、不相关的 MK，这会破坏主逻辑刚刚同步好的正确状态。\n    // 随后，在被破坏的状态上进行的重写操作会失败或产生错误结果（例如，生成一个空的 EditLog），\n    // 并覆盖掉之前由主逻辑正确生成的 EditLog，导致数据丢失。\n    //\n    // 综上，该机制已从“保险”变为“风险”，因此被完全注释掉。\n    // ==================================================================\n    // logger.log('resyncStateOnHistoryChange', '执行【保险机制】：无条件回滚并重写最后一楼...');\n    // const lastWrittenMk = [...oldSelectedMks].reverse().find(mk => mk);\n    // if (lastWrittenMk) {\n    //   logger.log('resyncStateOnHistoryChange', `找到最后一个写入的MK: ${lastWrittenMk}，执行回滚...`);\n    //   await rollbackByMk(lastWrittenMk, true);\n    //   logger.log('resyncStateOnHistoryChange', '回滚完成，准备根据当前最后一楼内容重写...');\n    //   await ApplyVarChange(); // ApplyVarChange 默认处理最后一楼\n    //   logger.log('resyncStateOnHistoryChange', '保险性重写完成。');\n    // } else {\n    //   logger.log('resyncStateOnHistoryChange', '未找到任何可供回滚的旧MK，跳过保险机制。');\n    // }\n};\n/**\n * **【强制同步最后一条AI消息】**\n * 这是一个用于特定场景的函数，例如由外部 API 触发，需要强制重算最后一条 AI 消息的变量。\n * 它解决了在消息内容被外部修改（但 MK 未变）时，状态无法自动更新的问题。\n *\n * **执行逻辑**:\n * 1. **定位**: 找到最后一条 AI 消息。\n * 2. **回滚**: 如果该消息存在且有 MK，则无条件回滚此 MK 引入的所有变量修改。\n * 3. **重算**: 立即根据该消息的**当前内容**重新计算变量，并生成新的 `EditLog`。\n * 4. **更新**: 将新的 MK 更新到 `SelectedMks` 数组的正确位置。\n *\n * **安全性**:\n * 此函数操作目标明确（最后一条 AI 消息），且回滚和重算在同一调用链中完成，\n * 避免了旧“保险机制”中因目标不明确而破坏 `resync` 状态的风险。\n */\nconst forceSyncLastAiMessage = async () => {\n    logger.log('forceSyncLastAiMessage', '启动强制同步最后一条 AI 消息...');\n    // 1. 定位\n    const msg = (0,_utils_message__WEBPACK_IMPORTED_MODULE_2__.findLastAiMessage)();\n    if (!msg || typeof msg.message_id !== 'number') {\n        logger.warn('forceSyncLastAiMessage', '未找到可供强制同步的 AI 消息。');\n        return;\n    }\n    const messageId = msg.message_id;\n    const MK = (0,_key_mk__WEBPACK_IMPORTED_MODULE_1__.readMessageKey)(msg);\n    if (!MK) {\n        logger.warn('forceSyncLastAiMessage', `消息 (ID: ${messageId}) 不含 MK，无法执行强制同步。将转为执行常规写入...`);\n        // 如果没有 MK，说明是新消息，直接走标准写入流程即可\n        await (0,_crud_patcher__WEBPACK_IMPORTED_MODULE_7__.ApplyVarChangeForMessage)(msg);\n        return;\n    }\n    logger.log('forceSyncLastAiMessage', `目标消息 (ID: ${messageId}, MK: ${MK})。`);\n    // 2. 回滚\n    logger.debug('forceSyncLastAiMessage', `正在回滚 MK: ${MK}...`);\n    await (0,_rollback__WEBPACK_IMPORTED_MODULE_3__.rollbackByMk)(MK, true); // silent=true，避免不必要的日志刷新\n    // 3. 重算\n    logger.debug('forceSyncLastAiMessage', `回滚完成，正在根据当前内容重算 MK: ${MK}...`);\n    const newMK = await (0,_crud_patcher__WEBPACK_IMPORTED_MODULE_7__.ApplyVarChangeForMessage)(msg);\n    // 4. 更新 SelectedMks\n    if (newMK) {\n        try {\n            await (0,_utils_era_data__WEBPACK_IMPORTED_MODULE_4__.updateEraMetaData)(meta => {\n                const selectedMks = _.get(meta, _utils_constants__WEBPACK_IMPORTED_MODULE_0__.SEL_PATH, []);\n                selectedMks[messageId] = newMK;\n                _.set(meta, _utils_constants__WEBPACK_IMPORTED_MODULE_0__.SEL_PATH, selectedMks);\n                return meta;\n            });\n            logger.log('forceSyncLastAiMessage', `强制同步完成，已更新 SelectedMks[${messageId}] = ${newMK}`);\n        }\n        catch (e) {\n            logger.error('forceSyncLastAiMessage', `强制同步后更新 SelectedMks 失败: ${e?.message || e}`, e);\n        }\n    }\n    else {\n        logger.error('forceSyncLastAiMessage', `重算后未能获取新的 MK，SelectedMks 可能未更新。`);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/core/sync.ts\n\n}");
  },
  "./src/ERA变量框架/events/dispatcher.ts": 
  /*!******************************************!*\
  !*** ./src/ERA变量框架/events/dispatcher.ts ***!
  \******************************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dispatchAndExecuteTask: () => (/* binding */ dispatchAndExecuteTask)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ \"lodash\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _api_command__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../api/command */ \"./src/ERA变量框架/api/command.ts\");\n/* harmony import */ var _core_crud_patcher__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/crud/patcher */ \"./src/ERA变量框架/core/crud/patcher.ts\");\n/* harmony import */ var _core_key_mk__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/key/mk */ \"./src/ERA变量框架/core/key/mk.ts\");\n/* harmony import */ var _core_rollback__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/rollback */ \"./src/ERA变量框架/core/rollback.ts\");\n/* harmony import */ var _core_sync__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/sync */ \"./src/ERA变量框架/core/sync.ts\");\n/* harmony import */ var _ui_patch__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ui/patch */ \"./src/ERA变量框架/ui/patch.ts\");\n/* harmony import */ var _utils_constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/constants */ \"./src/ERA变量框架/utils/constants.ts\");\n/* harmony import */ var _utils_era_data__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/era_data */ \"./src/ERA变量框架/utils/era_data.ts\");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/log */ \"./src/ERA变量框架/utils/log.ts\");\n/* harmony import */ var _merger__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./merger */ \"./src/ERA变量框架/events/merger.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\nconst logger = new _utils_log__WEBPACK_IMPORTED_MODULE_9__.Logger('events-dispatcher');\n/**\n * @constant {number} RENDER_EVENTS_TO_IGNORE_AFTER_MK_INJECTION\n * @description 当 `ensureMessageKey` 注入一个新的 MK 后，需要忽略的由该操作触发的 `character_message_rendered` 事件的数量。\n * 通常设置为 1，因为一次消息内容更新通常只会触发一次渲染事件。\n */\nconst RENDER_EVENTS_TO_IGNORE_AFTER_MK_INJECTION = 1;\n/**\n * @var {ConsecutiveMkState | null} consecutiveMkState\n * @description 追踪同一个 MK 被连续处理次数的状态。\n * **作用域**: 跨批次持久化。在整个脚本生命周期内，记录字面意义上的“上一次”执行的 MK。\n */\nlet consecutiveMkState = null;\n/**\n * **【辅助函数】处理由 MK 注入触发的冗余渲染事件**\n * @param eventType - 当前事件的类型。\n * @param currentMk - 当前消息的 MK。\n * @param mkToIgnore - 当前的忽略规则。\n * @returns {{ shouldSkip: boolean; newIgnoreRule: IgnoreRule | null }} - 返回是否应跳过此事件，以及更新后的忽略规则。\n */\nfunction handleRedundantRenderEvent(eventType, currentMk, mkToIgnore) {\n    if (mkToIgnore && eventType === tavern_events.CHARACTER_MESSAGE_RENDERED && currentMk === mkToIgnore.mk) {\n        logger.log('handleRedundantRenderEvent', `忽略由 MK (${mkToIgnore.mk}) 注入触发的冗余渲染事件。剩余忽略次数: ${mkToIgnore.ignoreCount - 1}`);\n        mkToIgnore.ignoreCount--;\n        if (mkToIgnore.ignoreCount <= 0) {\n            mkToIgnore = null; // 忽略次数用完，重置\n            logger.log('handleRedundantRenderEvent', `忽略次数用完`);\n        }\n        return { shouldSkip: true, newIgnoreRule: mkToIgnore };\n    }\n    return { shouldSkip: false, newIgnoreRule: mkToIgnore };\n}\n/**\n * **【任务执行器】**\n * 负责执行单个事件任务，包含所有前置、后置处理和错误捕获。\n * @param {EventJob} job - 要执行的事件任务。\n * @param {IgnoreRule | null} mkToIgnore - 当前的忽略规则。**作用域**: 仅在单次批处理 (event queue processing loop) 中生效。\n * @returns {Promise<IgnoreRule | null>} - 返回更新后的忽略规则。\n */\nasync function dispatchAndExecuteTask(job, mkToIgnore) {\n    const { type: eventType, detail } = job;\n    const eventGroup = (0,_merger__WEBPACK_IMPORTED_MODULE_10__.getEventGroup)(eventType);\n    let message_id = null;\n    let currentConsecutiveCount = 1;\n    // 在每轮任务开始时，初始化操作记录器\n    const actionsTaken = { rollback: false, apply: false, resync: false, api: false, apiWrite: false };\n    try {\n        // **前置保障**: 确保最新消息有 MK 并设置日志上下文。\n        const { mk, message_id: msgId, isNewKey } = await (0,_core_key_mk__WEBPACK_IMPORTED_MODULE_3__.ensureMkForLatestMessage)();\n        _utils_log__WEBPACK_IMPORTED_MODULE_9__.logContext.mk = mk;\n        message_id = msgId;\n        // 如果 ensureMkForLatestMessage 刚刚注入了一个新的 MK，就创建或更新忽略规则。\n        if (isNewKey && mk) {\n            mkToIgnore = {\n                mk: mk,\n                ignoreCount: RENDER_EVENTS_TO_IGNORE_AFTER_MK_INJECTION,\n            };\n        }\n        // **核心优化**: 检查并处理由 MK 注入触发的冗余渲染事件。\n        const { shouldSkip, newIgnoreRule } = handleRedundantRenderEvent(eventType, mk, mkToIgnore);\n        mkToIgnore = newIgnoreRule; // 更新忽略规则的状态\n        if (shouldSkip) {\n            // 如果事件被忽略，则直接返回，不更新连续处理计数\n            return mkToIgnore;\n        }\n        logger.log('dispatchAndExecuteTask', `执行任务: ${eventType} (分组: ${eventGroup})`);\n        // **任务分发**\n        logger.debug('dispatchAndExecuteTask - task dispatch', `分发事件: ${eventType}`, { detail, eventGroup });\n        if (eventGroup === 'WRITE') {\n            // 关键：写入前先回滚，确保操作的幂等性。\n            // 即使事件被意外触发多次，也只会产生一次有效写入。\n            const msg = getChatMessages(-1, { include_swipes: true })?.[0];\n            if (msg) {\n                const MK = (0,_core_key_mk__WEBPACK_IMPORTED_MODULE_3__.readMessageKey)(msg);\n                if (MK) {\n                    await (0,_core_rollback__WEBPACK_IMPORTED_MODULE_4__.rollbackByMk)(MK, true);\n                    actionsTaken.rollback = true;\n                }\n            }\n            await (0,_core_crud_patcher__WEBPACK_IMPORTED_MODULE_2__.ApplyVarChange)();\n            actionsTaken.apply = true;\n            // 如果是 API 触发的写入，则标记\n            if (eventType === _utils_constants__WEBPACK_IMPORTED_MODULE_7__.ERA_EVENT_EMITTER.API_WRITE) {\n                actionsTaken.apiWrite = true;\n            }\n            // 在变量写入完成后，强制重新渲染消息以触发宏\n            (0,_ui_patch__WEBPACK_IMPORTED_MODULE_6__.forceRenderRecentMessages)();\n        }\n        else if (eventGroup === 'SYNC') {\n            logger.debug('dispatchAndExecuteTask - task dispatch', `事件 ${eventType} 触发状态同步流程...`);\n            const isFullSync = eventType === 'manual_full_sync';\n            await (0,_core_sync__WEBPACK_IMPORTED_MODULE_5__.resyncStateOnHistoryChange)(isFullSync);\n            actionsTaken.resync = true;\n            // 在同步完成后，强制重新渲染消息以触发宏\n            if (eventType != 'combo_sync')\n                (0,_ui_patch__WEBPACK_IMPORTED_MODULE_6__.forceRenderRecentMessages)();\n        }\n        else if (eventGroup === 'API') {\n            actionsTaken.api = true;\n            // API 事件是“即发即忘”的，同步调用处理器将任务推入 api.ts 的队列后立即返回，不阻塞事件队列。\n            if (eventType === _utils_constants__WEBPACK_IMPORTED_MODULE_7__.ERA_API_EVENTS.INSERT_BY_OBJECT)\n                (0,_api_command__WEBPACK_IMPORTED_MODULE_1__.insertByObject)(detail);\n            else if (eventType === _utils_constants__WEBPACK_IMPORTED_MODULE_7__.ERA_API_EVENTS.UPDATE_BY_OBJECT)\n                (0,_api_command__WEBPACK_IMPORTED_MODULE_1__.updateByObject)(detail);\n            else if (eventType === _utils_constants__WEBPACK_IMPORTED_MODULE_7__.ERA_API_EVENTS.INSERT_BY_PATH)\n                (0,_api_command__WEBPACK_IMPORTED_MODULE_1__.insertByPath)(detail.path, detail.value);\n            else if (eventType === _utils_constants__WEBPACK_IMPORTED_MODULE_7__.ERA_API_EVENTS.UPDATE_BY_PATH)\n                (0,_api_command__WEBPACK_IMPORTED_MODULE_1__.updateByPath)(detail.path, detail.value);\n            else if (eventType === _utils_constants__WEBPACK_IMPORTED_MODULE_7__.ERA_API_EVENTS.DELETE_BY_OBJECT)\n                (0,_api_command__WEBPACK_IMPORTED_MODULE_1__.deleteByObject)(detail);\n            else if (eventType === _utils_constants__WEBPACK_IMPORTED_MODULE_7__.ERA_API_EVENTS.DELETE_BY_PATH)\n                (0,_api_command__WEBPACK_IMPORTED_MODULE_1__.deleteByPath)(detail.path);\n        }\n        else if (eventGroup === 'UPDATE_MK_ONLY') {\n            // 监听此事件仅用于为用户消息创建 MK。\n            await (0,_core_key_mk__WEBPACK_IMPORTED_MODULE_3__.updateLatestSelectedMk)();\n        }\n    }\n    catch (error) {\n        logger.error('dispatchAndExecuteTask', `事件 ${eventType} 处理异常: ${error}`, error);\n    }\n    finally {\n        // 仅当本轮处理中实际执行了 ERA 核心操作时，才校准并广播事件\n        // --- 3. 触发写入完成事件 ---\n        if (actionsTaken.rollback || actionsTaken.apply || actionsTaken.resync) {\n            // **后置保障**: 强制校准 `SelectedMks` 的最新记录。\n            await (0,_core_key_mk__WEBPACK_IMPORTED_MODULE_3__.updateLatestSelectedMk)();\n            // **只有在事件实际执行了写入/同步操作时，才更新连续处理计数**\n            const mk = _utils_log__WEBPACK_IMPORTED_MODULE_9__.logContext.mk;\n            if (mk && consecutiveMkState && consecutiveMkState.mk === mk) {\n                logger.debug('dispatchAndExecuteTask', `连续处理写入/同步操作的 MK: ${mk}。旧计数: ${consecutiveMkState.count}，新计数: ${consecutiveMkState.count + 1}`);\n                consecutiveMkState.count++;\n            }\n            else {\n                logger.debug('dispatchAndExecuteTask', `新的写入/同步操作的 MK: ${mk}。重置计数为 1。前一个 MK 是: ${consecutiveMkState?.mk}`);\n                consecutiveMkState = { mk: mk, count: 1 };\n            }\n            currentConsecutiveCount = consecutiveMkState.count;\n            // 在所有操作（包括校准）完成后，获取最新状态并广播事件\n            if (_utils_log__WEBPACK_IMPORTED_MODULE_9__.logContext.mk && message_id !== null) {\n                const { meta: metaData, stat: statData } = (0,_utils_era_data__WEBPACK_IMPORTED_MODULE_8__.getEraData)();\n                const selectedMks = lodash__WEBPACK_IMPORTED_MODULE_0___default().get(metaData, _utils_constants__WEBPACK_IMPORTED_MODULE_7__.SEL_PATH, []);\n                const editLogs = lodash__WEBPACK_IMPORTED_MODULE_0___default().get(metaData, _utils_constants__WEBPACK_IMPORTED_MODULE_7__.LOGS_PATH, {});\n                const statWithoutMeta = (0,_utils_era_data__WEBPACK_IMPORTED_MODULE_8__.removeMetaFields)(statData);\n                const payload = {\n                    mk: _utils_log__WEBPACK_IMPORTED_MODULE_9__.logContext.mk,\n                    message_id: message_id,\n                    actions: actionsTaken,\n                    selectedMks: selectedMks,\n                    editLogs: editLogs,\n                    stat: statData,\n                    statWithoutMeta: statWithoutMeta,\n                    consecutiveProcessingCount: currentConsecutiveCount,\n                };\n                logger.debug('dispatchAndExecuteTask', `准备发送 writeDone 事件。触发事件: ${eventType}, 条件: 核心操作已执行 (rollback/apply/resync)。`, {\n                    triggeringEvent: eventType,\n                    conditions: {\n                        actionsTaken,\n                        mk: _utils_log__WEBPACK_IMPORTED_MODULE_9__.logContext.mk,\n                        message_id,\n                    },\n                    payload,\n                });\n                (0,_api_command__WEBPACK_IMPORTED_MODULE_1__.emitWriteDoneEvent)(payload);\n            }\n        }\n        // 清理日志上下文，为下一个事件做准备\n        _utils_log__WEBPACK_IMPORTED_MODULE_9__.logContext.mk = '';\n        // **节流**: 在每个独立任务后都进行短暂等待，确保酒馆底层有时间完成其异步操作。\n        //暂时取消等待逻辑，提高即时性。\n        //await new Promise(resolve => setTimeout(resolve, 50));\n    }\n    return mkToIgnore;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/events/dispatcher.ts\n\n}");
  },
  "./src/ERA变量框架/events/merger.ts": 
  /*!**************************************!*\
  !*** ./src/ERA变量框架/events/merger.ts ***!
  \**************************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EVENT_COLLISION_MAP: () => (/* binding */ EVENT_COLLISION_MAP),\n/* harmony export */   EVENT_COMBO_MAP: () => (/* binding */ EVENT_COMBO_MAP),\n/* harmony export */   EVENT_DEBOUNCE_MAP: () => (/* binding */ EVENT_DEBOUNCE_MAP),\n/* harmony export */   EVENT_GROUPS: () => (/* binding */ EVENT_GROUPS),\n/* harmony export */   getEventGroup: () => (/* binding */ getEventGroup),\n/* harmony export */   mergeEventBatch: () => (/* binding */ mergeEventBatch)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ \"lodash\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/constants */ \"./src/ERA变量框架/utils/constants.ts\");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/log */ \"./src/ERA变量框架/utils/log.ts\");\n\n\n\n\nconst logger = new _utils_log__WEBPACK_IMPORTED_MODULE_2__.Logger('events-merger');\n/**\n * @description 定义需要监听的事件的分组\n */\nconst EVENT_GROUPS = {\n    WRITE: [\n        //tavern_events.CHARACTER_MESSAGE_RENDERED,\n        tavern_events.APP_READY,\n        'manual_write',\n        _utils_constants__WEBPACK_IMPORTED_MODULE_1__.ERA_EVENT_EMITTER.API_WRITE,\n        //tavern_events.MESSAGE_RECEIVED,\n    ],\n    SYNC: [\n        tavern_events.MESSAGE_RECEIVED,\n        tavern_events.MESSAGE_DELETED,\n        tavern_events.MESSAGE_SWIPED,\n        tavern_events.CHAT_CHANGED,\n        'manual_sync',\n        'manual_full_sync',\n        /** 由 message_updated 和 generation_started 组合而成的同步事件 */\n        'combo_sync',\n    ],\n    API: Object.values(_utils_constants__WEBPACK_IMPORTED_MODULE_1__.ERA_API_EVENTS),\n    /** 仅更新MK的事件 */\n    UPDATE_MK_ONLY: [tavern_events.MESSAGE_SENT],\n    /** 仅用于对冲检测的事件，本身不触发逻辑 */\n    COLLISION_DETECTORS: [tavern_events.GENERATION_STARTED],\n    /** 用于组合事件的起始事件 */\n    COMBO_STARTERS: [tavern_events.MESSAGE_UPDATED],\n};\n/**\n * @constant {Map<string, string>} EVENT_COLLISION_MAP\n * @description\n * 定义了事件对冲规则。\n * 如果在事件队列的同一次批处理中，同时出现了 key 事件和 value 事件，\n * 则这两个事件都将被忽略。\n *\n * @example\n * // 当用户快速左滑然后点击生成时，会依次触发 `MESSAGE_SWIPED` 和 `GENERATION_STARTED`。\n * // 这条规则会捕获这种模式并同时忽略这两个事件，避免不必要的同步。\n * new Map([\n *   [tavern_events.MESSAGE_SWIPED, { next: tavern_events.GENERATION_STARTED, maxInterval: 500 }]\n * ])\n */\nconst EVENT_COLLISION_MAP = new Map([\n    [tavern_events.MESSAGE_SWIPED, { next: tavern_events.GENERATION_STARTED, maxInterval: 600 }],\n]);\n/**\n * @constant {Map<string, { next: string; resultType: string; maxInterval: number }>} EVENT_COMBO_MAP\n * @description\n * 定义了事件组合规则。\n * 如果在事件队列的同一次批处理中，一个 key 事件紧跟着一个 `next` 事件，\n * 它们将被合并成一个新的 `resultType` 事件。\n *\n * @example\n * // 当用户消息被AI编辑后立刻开始生成下一条消息时，会依次触发 `MESSAGE_UPDATED` 和 `GENERATION_STARTED`。\n * // 这条规则会捕获这种模式并将它们合并为一个 `combo_sync` 事件，以确保数据一致性。\n * new Map([\n *   [tavern_events.MESSAGE_UPDATED, { next: tavern_events.GENERATION_STARTED, resultType: 'combo_sync', maxInterval: 2100 }]\n * ])\n */\nconst EVENT_COMBO_MAP = new Map([\n    [\n        tavern_events.MESSAGE_UPDATED,\n        { next: tavern_events.GENERATION_STARTED, resultType: 'combo_sync', maxInterval: 1600 },\n    ],\n]);\n/**\n * @constant {Map<string, number>} EVENT_DEBOUNCE_MAP\n * @description\n * 为特定事件定义自定义的防抖时间（毫秒）。\n * 在事件队列处理器中，如果一个事件在此映射中定义了时间，\n * 将使用该时间代替默认的防抖时间。\n * 这对于那些需要更长窗口来捕获后续事件的“前置事件”特别有用。\n *\n * @example\n * // 为 MESSAGE_SWIPED 设置更长的等待时间，以确保能捕获到后续的 GENERATION_STARTED\n * new Map([\n *   [tavern_events.MESSAGE_SWIPED, 500]\n * ])\n */\nconst EVENT_DEBOUNCE_MAP = new Map([\n    [tavern_events.MESSAGE_SWIPED, 500], // 对冲事件的前置事件\n    [tavern_events.MESSAGE_UPDATED, 1500], // 组合事件的前置事件\n]);\n/**\n * 根据事件类型，查找它属于哪个预定义的组。\n * @param {string} eventType - 要检查的事件类型。\n * @returns {string} 事件所属的组名 ('WRITE', 'SYNC', 'API', 'UPDATE_MK_ONLY', 'UNKNOWN')。\n */\nfunction getEventGroup(eventType) {\n    // 使用 as string[] 来解决 TypeScript 因 'as const' 推断出的过于严格的类型问题\n    if (EVENT_GROUPS.WRITE.includes(eventType))\n        return 'WRITE';\n    if (EVENT_GROUPS.SYNC.includes(eventType))\n        return 'SYNC';\n    if (EVENT_GROUPS.API.includes(eventType))\n        return 'API';\n    if (EVENT_GROUPS.UPDATE_MK_ONLY.includes(eventType))\n        return 'UPDATE_MK_ONLY';\n    if (EVENT_GROUPS.COLLISION_DETECTORS.includes(eventType))\n        return 'COLLISION_DETECTORS';\n    if (EVENT_GROUPS.COMBO_STARTERS.includes(eventType))\n        return 'COMBO_STARTERS';\n    return 'UNKNOWN';\n}\n/**\n * **【事件合并器】**\n * 对一批事件进行智能合并，包括处理事件对冲和合并同组可覆盖事件。\n * @param {EventJob[]} batchToProcess - 从队列中取出的一批原始事件。\n * @returns {EventJob[]} - 经过合并优化后的事件数组。\n */\nfunction mergeEventBatch(batchToProcess) {\n    const originalEvents = lodash__WEBPACK_IMPORTED_MODULE_0___default().cloneDeep(batchToProcess);\n    const finalJobs = [];\n    // 使用 for...of 循环，让逻辑更清晰\n    for (const currentJob of batchToProcess) {\n        // 如果是第一个事件，直接放入结果中\n        if (finalJobs.length === 0) {\n            finalJobs.push(currentJob);\n            continue; // 继续处理下一个事件\n        }\n        const prevJob = finalJobs[finalJobs.length - 1];\n        const timeDifference = currentJob.timestamp - prevJob.timestamp;\n        // 1. 检查事件组合\n        const comboRule = EVENT_COMBO_MAP.get(prevJob.type);\n        if (comboRule && currentJob.type === comboRule.next) {\n            if (timeDifference <= comboRule.maxInterval) {\n                logger.debug('mergeEventBatch', `检测到事件组合: ${prevJob.type} 和 ${currentJob.type} (时间差: ${timeDifference}ms <= ${comboRule.maxInterval}ms)。将合并为 ${comboRule.resultType} 事件。`);\n                finalJobs.pop(); // 移除前一个事件\n                finalJobs.push({ type: comboRule.resultType, timestamp: currentJob.timestamp, detail: currentJob.detail });\n                continue;\n            }\n            else {\n                logger.debug('mergeEventBatch', `检测到潜在的事件组合，但因超时而失败: ${prevJob.type} 和 ${currentJob.type} (时间差: ${timeDifference}ms > ${comboRule.maxInterval}ms)。`);\n            }\n        }\n        // 2. 检查事件对冲\n        const collisionRule = EVENT_COLLISION_MAP.get(prevJob.type);\n        if (collisionRule && currentJob.type === collisionRule.next) {\n            if (timeDifference <= collisionRule.maxInterval) {\n                logger.debug('mergeEventBatch', `检测到相邻事件对冲: ${prevJob.type} 和 ${currentJob.type} (时间差: ${timeDifference}ms <= ${collisionRule.maxInterval}ms)。将忽略这两个事件。`);\n                finalJobs.pop(); // 移除前一个事件\n                continue; // 跳过当前事件，从而忽略两者\n            }\n            else {\n                logger.debug('mergeEventBatch', `检测到潜在的事件对冲，但因超时而失败: ${prevJob.type} 和 ${currentJob.type} (时间差: ${timeDifference}ms > ${collisionRule.maxInterval}ms)。`);\n            }\n        }\n        // 3. 如果不冲突或组合，则检查同组事件合并\n        const prevGroup = getEventGroup(prevJob.type);\n        const currentGroup = getEventGroup(currentJob.type);\n        // 定义合并条件，让 if 判断的意图更清晰\n        const areInSameGroup = prevGroup === currentGroup;\n        const isMergeableGroup = prevGroup === 'WRITE' || prevGroup === 'SYNC';\n        // 如果满足合并条件\n        if (areInSameGroup && isMergeableGroup) {\n            // 用当前事件覆盖掉结果数组中的最后一个事件\n            finalJobs[finalJobs.length - 1] = currentJob;\n        }\n        else {\n            // 否则，将当前事件追加到结果数组\n            finalJobs.push(currentJob);\n        }\n    }\n    // 最后，清理掉所有未配对的检测器和组合起始事件\n    const filteredJobs = finalJobs.filter(job => {\n        const group = getEventGroup(job.type);\n        const isOrphanedDetector = group === 'COLLISION_DETECTORS';\n        const isOrphanedComboStarter = group === 'COMBO_STARTERS';\n        if (isOrphanedDetector || isOrphanedComboStarter) {\n            logger.debug('mergeEventBatch', `清理未配对的事件: ${job.type}`);\n        }\n        return !isOrphanedDetector && !isOrphanedComboStarter;\n    });\n    // 打印合并日志\n    logger.debug('mergeEventBatch', `事件合并: ${originalEvents.length} -> ${filteredJobs.length}`, {\n        before: originalEvents.map(e => e.type),\n        after: filteredJobs.map(e => e.type),\n    });\n    return filteredJobs;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/events/merger.ts\n\n}");
  },
  "./src/ERA变量框架/events/queue.ts": 
  /*!*************************************!*\
  !*** ./src/ERA变量框架/events/queue.ts ***!
  \*************************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pushToQueue: () => (/* binding */ pushToQueue)\n/* harmony export */ });\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/log */ \"./src/ERA变量框架/utils/log.ts\");\n/* harmony import */ var _dispatcher__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dispatcher */ \"./src/ERA变量框架/events/dispatcher.ts\");\n/* harmony import */ var _merger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./merger */ \"./src/ERA变量框架/events/merger.ts\");\n/**\n * @file ERA 变量框架 - 事件队列与总调度模块\n * @description\n * 该模块是 ERA 框架的“神经中枢”。它通过一个事件队列机制，将所有事件的接收、\n * 合并、分发和执行流程化，从根本上解决了并发和状态竞争问题。\n *\n * **工作原理**:\n * 1. **事件入队**: 所有事件（来自酒馆或 API）都被封装成 `EventJob` 对象，推入 `eventQueue`。\n * 2. **单线程处理**: `processQueue` 函数使用 `isProcessing` 锁确保同一时间只有一个处理循环在运行。\n * 3. **防抖与批处理**: 在处理前会进行短暂防抖，以收集短时间内连续触发的多个事件，形成一个“批次”。\n * 4. **委托合并**: 将整个批次交由 `event_merger.ts` 模块进行智能合并（对冲、覆盖）。\n * 5. **委托执行**: 循环遍历合并后的任务，将每个任务委托给 `task_dispatcher.ts` 模块进行独立、原子的执行。\n * 6. **状态传递**: 在不同任务的执行之间，传递和更新必要的上下文状态（如 `mkToIgnore` 和 `consecutiveMkState`）。\n */\n\n\n\n\nconst logger = new _utils_log__WEBPACK_IMPORTED_MODULE_0__.Logger('events-queue');\n/**\n * @const {EventJob[]} eventQueue\n * @description 事件队列，存储所有待处理的事件任务。\n */\nconst eventQueue = [];\n/**\n * @let {boolean} isProcessing\n * @description 处理器锁。为 true 时表示 `processQueue` 正在运行，防止重入。\n */\nlet isProcessing = false;\nlet isWaiting = false;\nlet unlockSignal = null;\n/**\n * **【事件入口】**\n * 将一个事件推入队列，并尝试启动或排队等待处理器。\n * @param {string} type - 事件类型 (e.g., `tavern_events.MESSAGE_DELETED`)。\n * @param {any} [detail] - 事件附带的数据。\n */\nfunction pushToQueue(type, detail) {\n    logger.debug('pushToQueue', `接收到事件: ${type}，已推入队列。`, { detail });\n    eventQueue.push({ type, detail, timestamp: Date.now() });\n    processQueue();\n}\n/**\n * **【核心事件处理器】**\n * 采用“锁-等待-释放-通知”机制，确保事件处理的连续性。\n */\nasync function processQueue() {\n    // 如果已经有一个调用在“排队等待”，则本次调用直接返回，防止多个等待者。\n    if (isWaiting) {\n        logger.debug('processQueue', '已有处理函数在排队等待，本次调用忽略。');\n        return;\n    }\n    // 如果处理器正在忙碌，则进入“排队等待”状态。\n    if (isProcessing) {\n        logger.debug('processQueue', '处理器忙碌，进入排队等待状态...');\n        isWaiting = true;\n        // 等待当前处理器释放锁的信号\n        await new Promise(resolve => {\n            unlockSignal = resolve;\n        });\n        isWaiting = false;\n        logger.debug('processQueue', '等待结束，获取到处理权。');\n    }\n    // 获得处理权后，如果队列已经被前一个处理器清空，则无需做任何事。\n    if (eventQueue.length === 0) {\n        logger.debug('processQueue', '队列为空，无需处理。');\n        return;\n    }\n    // 【加锁】\n    // 正式开始处理，加锁以阻止其他调用进入。\n    isProcessing = true;\n    logger.log('processQueue', '处理器启动');\n    // 【防抖】\n    const firstJob = eventQueue[0];\n    const group = (0,_merger__WEBPACK_IMPORTED_MODULE_2__.getEventGroup)(firstJob.type);\n    if (group !== 'API') {\n        const debounceTime = _merger__WEBPACK_IMPORTED_MODULE_2__.EVENT_DEBOUNCE_MAP.get(firstJob.type) ?? 300;\n        logger.log('processQueue', `启动事件收集窗口，等待 ${debounceTime}ms...`);\n        await new Promise(resolve => setTimeout(resolve, debounceTime));\n    }\n    // 【调试日志】\n    logger.debug('processQueue', '事件收集窗口关闭，准备处理的队列内容:', JSON.stringify(eventQueue.map(e => e.type)));\n    // 【循环处理】\n    // 只要队列不为空，就持续处理。这能确保在防抖期间新到达的事件也被纳入处理范围。\n    let mkToIgnore = null;\n    while (eventQueue.length > 0) {\n        const batchToProcess = eventQueue.splice(0, eventQueue.length);\n        const finalJobs = (0,_merger__WEBPACK_IMPORTED_MODULE_2__.mergeEventBatch)(batchToProcess);\n        logger.debug('processQueue', `开始处理一个新批次，包含 ${batchToProcess.length} 个原始事件，合并后为 ${finalJobs.length} 个任务。`);\n        for (const job of finalJobs) {\n            const newIgnoreRule = await (0,_dispatcher__WEBPACK_IMPORTED_MODULE_1__.dispatchAndExecuteTask)(job, mkToIgnore);\n            mkToIgnore = newIgnoreRule;\n        }\n        logger.debug('processQueue', '本轮批次处理完毕。');\n    }\n    // 【解锁并通知】\n    isProcessing = false;\n    logger.log('processQueue', '处理器空闲，已释放锁。');\n    // 如果有等待者，则发送解锁信号，让它立即开始。\n    if (unlockSignal) {\n        logger.debug('processQueue', '通知排队的处理器开始工作。');\n        const signal = unlockSignal;\n        unlockSignal = null;\n        signal();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/events/queue.ts\n\n}");
  },
  "./src/ERA变量框架/index.ts": 
  /*!******************************!*\
  !*** ./src/ERA变量框架/index.ts ***!
  \******************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _events_merger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./events/merger */ \"./src/ERA变量框架/events/merger.ts\");\n/* harmony import */ var _events_queue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./events/queue */ \"./src/ERA变量框架/events/queue.ts\");\n/* harmony import */ var _api_macro_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./api/macro/parser */ \"./src/ERA变量框架/api/macro/parser.ts\");\n/* harmony import */ var _ui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ui */ \"./src/ERA变量框架/ui/index.ts\");\n/**\n * @file ERA 变量框架 - 主入口与事件监听模块\n * @description\n * 该文件是整个 ERA 变量框架的起点。它的职责非常清晰和专一：\n * 1. **定义监听范围**: 声明框架所关心的所有事件类型。\n * 2. **注册监听器**: 为上述所有事件注册监听器。\n * 3. **统一派发**: 当任何一个被监听的事件触发时，它不进行任何逻辑处理，\n *    而是立即将该事件（包括事件类型和附带数据）原封不动地推入到 `event_queue.ts`\n *    中的事件处理队列中。\n *\n * 这种设计体现了良好的**关注点分离**原则：`index.ts` 只负责“听”，而 `event_queue.ts`\n * 负责“思考”和“行动”。这使得事件的来源和处理逻辑完全解耦，非常清晰且易于维护。\n */\n\n\n\n// 导入查询模块, 以注册 {{ERA:...}} 宏\n\n// 导入 UI 模块\n\n// ===============================\n// 事件监听器注册\n// ===============================\n/**\n * @const {string[]} eventsToListen\n * @description 定义了所有需要被 ERA 框架监听的事件。\n */\nconst eventsToListen = [\n    ..._events_merger__WEBPACK_IMPORTED_MODULE_0__.EVENT_GROUPS.WRITE,\n    ..._events_merger__WEBPACK_IMPORTED_MODULE_0__.EVENT_GROUPS.SYNC,\n    ..._events_merger__WEBPACK_IMPORTED_MODULE_0__.EVENT_GROUPS.API,\n    ..._events_merger__WEBPACK_IMPORTED_MODULE_0__.EVENT_GROUPS.UPDATE_MK_ONLY,\n    ..._events_merger__WEBPACK_IMPORTED_MODULE_0__.EVENT_GROUPS.COLLISION_DETECTORS,\n    ..._events_merger__WEBPACK_IMPORTED_MODULE_0__.EVENT_GROUPS.COMBO_STARTERS,\n];\n// 遍历事件列表，为每个事件注册一个回调函数。\n// 这个回调函数是所有事件的统一入口。\neventsToListen.forEach(ev => {\n    // `eventOn` 是酒馆助手提供的全局函数，用于注册事件监听。\n    // 当事件 `ev` 触发时，回调函数被调用，并将事件类型 `ev` 和事件详情 `detail` 推入队列。\n    eventOn(ev, (detail) => (0,_events_queue__WEBPACK_IMPORTED_MODULE_1__.pushToQueue)(ev, detail));\n});\n// 为酒馆助手脚本界面中的手动按钮注册监听器。\n// 点击按钮时，同样是向队列中推入一个特定类型的事件。\neventOn(getButtonEvent('写入变量修改'), () => (0,_events_queue__WEBPACK_IMPORTED_MODULE_1__.pushToQueue)('manual_write'));\neventOn(getButtonEvent('手动同步状态'), () => (0,_events_queue__WEBPACK_IMPORTED_MODULE_1__.pushToQueue)('manual_sync'));\neventOn(getButtonEvent('强制完全重算'), () => (0,_events_queue__WEBPACK_IMPORTED_MODULE_1__.pushToQueue)('manual_full_sync'));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvRVJB5Y+Y6YeP5qGG5p62L2luZGV4LnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7Ozs7Ozs7OztHQVlHO0FBRVU7QUFFa0M7QUFDRjtBQUU3Qyw0QkFBNEI7QUFDQTtBQUU1QixXQUFXO0FBQ0c7QUFFZCxrQ0FBa0M7QUFDbEMsVUFBVTtBQUNWLGtDQUFrQztBQUVsQzs7O0dBR0c7QUFDSCxNQUFNLGNBQWMsR0FBRztJQUNyQixHQUFHLHdEQUFZLENBQUMsS0FBSztJQUNyQixHQUFHLHdEQUFZLENBQUMsSUFBSTtJQUNwQixHQUFHLHdEQUFZLENBQUMsR0FBRztJQUNuQixHQUFHLHdEQUFZLENBQUMsY0FBYztJQUM5QixHQUFHLHdEQUFZLENBQUMsbUJBQW1CO0lBQ25DLEdBQUcsd0RBQVksQ0FBQyxjQUFjO0NBQy9CLENBQUM7QUFFRix3QkFBd0I7QUFDeEIsb0JBQW9CO0FBQ3BCLGNBQWMsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDMUIsbUNBQW1DO0lBQ25DLHdEQUF3RDtJQUN4RCxPQUFPLENBQUMsRUFBRSxFQUFFLENBQUMsTUFBVyxFQUFFLEVBQUUsQ0FBQywwREFBVyxDQUFDLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDO0FBQ3hELENBQUMsQ0FBQyxDQUFDO0FBRUgsd0JBQXdCO0FBQ3hCLDRCQUE0QjtBQUM1QixPQUFPLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLDBEQUFXLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztBQUNyRSxPQUFPLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLDBEQUFXLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztBQUNwRSxPQUFPLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLDBEQUFXLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJzcmM6Ly90YXZlcm5faGVscGVyX3RlbXBsYXRlL3NyYy9FUkHlj5jph4/moYbmnrYvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZSBFUkEg5Y+Y6YeP5qGG5p62IC0g5Li75YWl5Y+j5LiO5LqL5Lu255uR5ZCs5qih5Z2XXG4gKiBAZGVzY3JpcHRpb25cbiAqIOivpeaWh+S7tuaYr+aVtOS4qiBFUkEg5Y+Y6YeP5qGG5p6255qE6LW354K544CC5a6D55qE6IGM6LSj6Z2e5bi45riF5pmw5ZKM5LiT5LiA77yaXG4gKiAxLiAqKuWumuS5ieebkeWQrOiMg+WbtCoqOiDlo7DmmI7moYbmnrbmiYDlhbPlv4PnmoTmiYDmnInkuovku7bnsbvlnovjgIJcbiAqIDIuICoq5rOo5YaM55uR5ZCs5ZmoKio6IOS4uuS4iui/sOaJgOacieS6i+S7tuazqOWGjOebkeWQrOWZqOOAglxuICogMy4gKirnu5/kuIDmtL7lj5EqKjog5b2T5Lu75L2V5LiA5Liq6KKr55uR5ZCs55qE5LqL5Lu26Kem5Y+R5pe277yM5a6D5LiN6L+b6KGM5Lu75L2V6YC76L6R5aSE55CG77yMXG4gKiAgICDogIzmmK/nq4vljbPlsIbor6Xkuovku7bvvIjljIXmi6zkuovku7bnsbvlnovlkozpmYTluKbmlbDmja7vvInljp/lsIHkuI3liqjlnLDmjqjlhaXliLAgYGV2ZW50X3F1ZXVlLnRzYFxuICogICAg5Lit55qE5LqL5Lu25aSE55CG6Zif5YiX5Lit44CCXG4gKlxuICog6L+Z56eN6K6+6K6h5L2T546w5LqG6Imv5aW955qEKirlhbPms6jngrnliIbnprsqKuWOn+WIme+8mmBpbmRleC50c2Ag5Y+q6LSf6LSj4oCc5ZCs4oCd77yM6ICMIGBldmVudF9xdWV1ZS50c2BcbiAqIOi0n+i0o+KAnOaAneiAg+KAneWSjOKAnOihjOWKqOKAneOAgui/meS9v+W+l+S6i+S7tueahOadpea6kOWSjOWkhOeQhumAu+i+keWujOWFqOino+iApu+8jOmdnuW4uOa4heaZsOS4lOaYk+S6jue7tOaKpOOAglxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHsgRVZFTlRfR1JPVVBTIH0gZnJvbSAnLi9ldmVudHMvbWVyZ2VyJztcbmltcG9ydCB7IHB1c2hUb1F1ZXVlIH0gZnJvbSAnLi9ldmVudHMvcXVldWUnO1xuXG4vLyDlr7zlhaXmn6Xor6LmqKHlnZcsIOS7peazqOWGjCB7e0VSQTouLi59fSDlro9cbmltcG9ydCAnLi9hcGkvbWFjcm8vcGFyc2VyJztcblxuLy8g5a+85YWlIFVJIOaooeWdl1xuaW1wb3J0ICcuL3VpJztcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8g5LqL5Lu255uR5ZCs5Zmo5rOo5YaMXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8qKlxuICogQGNvbnN0IHtzdHJpbmdbXX0gZXZlbnRzVG9MaXN0ZW5cbiAqIEBkZXNjcmlwdGlvbiDlrprkuYnkuobmiYDmnInpnIDopoHooqsgRVJBIOahhuaetuebkeWQrOeahOS6i+S7tuOAglxuICovXG5jb25zdCBldmVudHNUb0xpc3RlbiA9IFtcbiAgLi4uRVZFTlRfR1JPVVBTLldSSVRFLFxuICAuLi5FVkVOVF9HUk9VUFMuU1lOQyxcbiAgLi4uRVZFTlRfR1JPVVBTLkFQSSxcbiAgLi4uRVZFTlRfR1JPVVBTLlVQREFURV9NS19PTkxZLFxuICAuLi5FVkVOVF9HUk9VUFMuQ09MTElTSU9OX0RFVEVDVE9SUyxcbiAgLi4uRVZFTlRfR1JPVVBTLkNPTUJPX1NUQVJURVJTLFxuXTtcblxuLy8g6YGN5Y6G5LqL5Lu25YiX6KGo77yM5Li65q+P5Liq5LqL5Lu25rOo5YaM5LiA5Liq5Zue6LCD5Ye95pWw44CCXG4vLyDov5nkuKrlm57osIPlh73mlbDmmK/miYDmnInkuovku7bnmoTnu5/kuIDlhaXlj6PjgIJcbmV2ZW50c1RvTGlzdGVuLmZvckVhY2goZXYgPT4ge1xuICAvLyBgZXZlbnRPbmAg5piv6YWS6aaG5Yqp5omL5o+Q5L6b55qE5YWo5bGA5Ye95pWw77yM55So5LqO5rOo5YaM5LqL5Lu255uR5ZCs44CCXG4gIC8vIOW9k+S6i+S7tiBgZXZgIOinpuWPkeaXtu+8jOWbnuiwg+WHveaVsOiiq+iwg+eUqO+8jOW5tuWwhuS6i+S7tuexu+WeiyBgZXZgIOWSjOS6i+S7tuivpuaDhSBgZGV0YWlsYCDmjqjlhaXpmJ/liJfjgIJcbiAgZXZlbnRPbihldiwgKGRldGFpbDogYW55KSA9PiBwdXNoVG9RdWV1ZShldiwgZGV0YWlsKSk7XG59KTtcblxuLy8g5Li66YWS6aaG5Yqp5omL6ISa5pys55WM6Z2i5Lit55qE5omL5Yqo5oyJ6ZKu5rOo5YaM55uR5ZCs5Zmo44CCXG4vLyDngrnlh7vmjInpkq7ml7bvvIzlkIzmoLfmmK/lkJHpmJ/liJfkuK3mjqjlhaXkuIDkuKrnibnlrprnsbvlnovnmoTkuovku7bjgIJcbmV2ZW50T24oZ2V0QnV0dG9uRXZlbnQoJ+WGmeWFpeWPmOmHj+S/ruaUuScpLCAoKSA9PiBwdXNoVG9RdWV1ZSgnbWFudWFsX3dyaXRlJykpO1xuZXZlbnRPbihnZXRCdXR0b25FdmVudCgn5omL5Yqo5ZCM5q2l54q25oCBJyksICgpID0+IHB1c2hUb1F1ZXVlKCdtYW51YWxfc3luYycpKTtcbmV2ZW50T24oZ2V0QnV0dG9uRXZlbnQoJ+W8uuWItuWujOWFqOmHjeeulycpLCAoKSA9PiBwdXNoVG9RdWV1ZSgnbWFudWFsX2Z1bGxfc3luYycpKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/ERA变量框架/index.ts\n\n}");
  },
  "./src/ERA变量框架/ui/components/statusBar/index.ts": 
  /*!******************************************************!*\
  !*** ./src/ERA变量框架/ui/components/statusBar/index.ts ***!
  \******************************************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initStatusBar: () => (/* binding */ initStatusBar)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _statusBarContent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../statusBarContent */ \"./src/ERA变量框架/ui/components/statusBarContent/index.ts\");\n\n\nconst statusBarId = `era-status-bar-${getScriptId()}`;\nlet isExpanded = false; // 追踪展开/收缩状态\n// 定义不同状态下的样式\nconst collapsedStyle = {\n    width: '50px',\n    height: '50px',\n    'border-radius': '50%',\n    bottom: '20px',\n    left: '20px',\n    top: '',\n    right: '',\n    cursor: 'pointer',\n    'justify-content': 'center',\n    'align-items': 'center',\n    display: 'flex',\n    overflow: 'hidden',\n};\nconst expandedStyle = {\n    width: '300px',\n    height: '200px',\n    'border-radius': '10px',\n    cursor: 'default',\n    padding: '12px',\n    display: 'block',\n};\nfunction toggleExpand($statusBar, $content) {\n    isExpanded = !isExpanded;\n    if (isExpanded) {\n        // 展开\n        $statusBar.css(expandedStyle);\n        $statusBar.find('span').hide();\n        $content.show();\n        // 调用渲染函数，以确保显示的是最新的数据。\n        // 这是延迟渲染机制的一部分，用于解决在隐藏元素上更新 HTML 可能导致内容不全的问题。\n        (0,_statusBarContent__WEBPACK_IMPORTED_MODULE_1__.renderStatusBarContent)($content);\n    }\n    else {\n        // 收缩\n        $statusBar.css(collapsedStyle);\n        $statusBar.find('span').show();\n        $content.hide();\n    }\n}\nfunction createStatusBar() {\n    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${statusBarId}`).length > 0) {\n        return;\n    }\n    const $statusBar = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div>')\n        .attr('id', statusBarId)\n        .css({\n        position: 'fixed',\n        'background-color': 'rgba(0, 0, 0, 0.7)',\n        color: 'white',\n        'font-size': '14px',\n        'z-index': '10000',\n        'border-top': '1px solid #444',\n        transition: 'all 0.3s ease-in-out',\n        ...collapsedStyle,\n    })\n        .html('<span>ERA</span>');\n    const $content = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div>').css({\n        display: 'none',\n        'overflow-y': 'auto',\n        height: '100%',\n    });\n    $statusBar.append($content);\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').append($statusBar);\n    $statusBar.draggable({\n        handle: `#${statusBarId}`,\n        containment: 'window',\n    });\n    $statusBar.on('click', () => {\n        setTimeout(() => {\n            if ($statusBar.hasClass('ui-draggable-dragging')) {\n                return;\n            }\n            toggleExpand($statusBar, $content);\n        }, 50);\n    });\n    return $statusBar;\n}\nfunction removeStatusBar() {\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${statusBarId}`).remove();\n}\n// 导出初始化函数，由 ui/index.ts 调用\nfunction initStatusBar() {\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(() => {\n        const $statusBar = createStatusBar();\n        if (!$statusBar)\n            return;\n        const $content = $statusBar.find('div');\n        (0,_statusBarContent__WEBPACK_IMPORTED_MODULE_1__.initStatusBarContent)($content);\n    });\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).on('pagehide', () => {\n        removeStatusBar();\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvRVJB5Y+Y6YeP5qGG5p62L3VpL2NvbXBvbmVudHMvc3RhdHVzQmFyL2luZGV4LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBdUI7QUFDNEQ7QUFTbkYsTUFBTSxXQUFXLEdBQUcsa0JBQWtCLFdBQVcsRUFBRSxFQUFFLENBQUM7QUFDdEQsSUFBSSxVQUFVLEdBQUcsS0FBSyxDQUFDLENBQUMsWUFBWTtBQUVwQyxhQUFhO0FBQ2IsTUFBTSxjQUFjLEdBQUc7SUFDckIsS0FBSyxFQUFFLE1BQU07SUFDYixNQUFNLEVBQUUsTUFBTTtJQUNkLGVBQWUsRUFBRSxLQUFLO0lBQ3RCLE1BQU0sRUFBRSxNQUFNO0lBQ2QsSUFBSSxFQUFFLE1BQU07SUFDWixHQUFHLEVBQUUsRUFBRTtJQUNQLEtBQUssRUFBRSxFQUFFO0lBQ1QsTUFBTSxFQUFFLFNBQVM7SUFDakIsaUJBQWlCLEVBQUUsUUFBUTtJQUMzQixhQUFhLEVBQUUsUUFBUTtJQUN2QixPQUFPLEVBQUUsTUFBTTtJQUNmLFFBQVEsRUFBRSxRQUFRO0NBQ25CLENBQUM7QUFFRixNQUFNLGFBQWEsR0FBRztJQUNwQixLQUFLLEVBQUUsT0FBTztJQUNkLE1BQU0sRUFBRSxPQUFPO0lBQ2YsZUFBZSxFQUFFLE1BQU07SUFDdkIsTUFBTSxFQUFFLFNBQVM7SUFDakIsT0FBTyxFQUFFLE1BQU07SUFDZixPQUFPLEVBQUUsT0FBTztDQUNqQixDQUFDO0FBRUYsU0FBUyxZQUFZLENBQUMsVUFBa0IsRUFBRSxRQUFnQjtJQUN4RCxVQUFVLEdBQUcsQ0FBQyxVQUFVLENBQUM7SUFDekIsSUFBSSxVQUFVLEVBQUUsQ0FBQztRQUNmLEtBQUs7UUFDTCxVQUFVLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQzlCLFVBQVUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDL0IsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2hCLHVCQUF1QjtRQUN2Qiw4Q0FBOEM7UUFDOUMseUVBQXNCLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbkMsQ0FBQztTQUFNLENBQUM7UUFDTixLQUFLO1FBQ0wsVUFBVSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUMvQixVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQy9CLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNsQixDQUFDO0FBQ0gsQ0FBQztBQUVELFNBQVMsZUFBZTtJQUN0QixJQUFJLDZDQUFDLENBQUMsSUFBSSxXQUFXLEVBQUUsQ0FBQyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUUsQ0FBQztRQUNwQyxPQUFPO0lBQ1QsQ0FBQztJQUVELE1BQU0sVUFBVSxHQUFHLDZDQUFDLENBQUMsT0FBTyxDQUFDO1NBQzFCLElBQUksQ0FBQyxJQUFJLEVBQUUsV0FBVyxDQUFDO1NBQ3ZCLEdBQUcsQ0FBQztRQUNILFFBQVEsRUFBRSxPQUFPO1FBQ2pCLGtCQUFrQixFQUFFLG9CQUFvQjtRQUN4QyxLQUFLLEVBQUUsT0FBTztRQUNkLFdBQVcsRUFBRSxNQUFNO1FBQ25CLFNBQVMsRUFBRSxPQUFPO1FBQ2xCLFlBQVksRUFBRSxnQkFBZ0I7UUFDOUIsVUFBVSxFQUFFLHNCQUFzQjtRQUNsQyxHQUFHLGNBQWM7S0FDbEIsQ0FBQztTQUNELElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBRTVCLE1BQU0sUUFBUSxHQUFHLDZDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDO1FBQzlCLE9BQU8sRUFBRSxNQUFNO1FBQ2YsWUFBWSxFQUFFLE1BQU07UUFDcEIsTUFBTSxFQUFFLE1BQU07S0FDZixDQUFDLENBQUM7SUFFSCxVQUFVLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzVCLDZDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBRTdCLFVBQVUsQ0FBQyxTQUFTLENBQUM7UUFDbkIsTUFBTSxFQUFFLElBQUksV0FBVyxFQUFFO1FBQ3pCLFdBQVcsRUFBRSxRQUFRO0tBQ3RCLENBQUMsQ0FBQztJQUVILFVBQVUsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRTtRQUMxQixVQUFVLENBQUMsR0FBRyxFQUFFO1lBQ2QsSUFBSSxVQUFVLENBQUMsUUFBUSxDQUFDLHVCQUF1QixDQUFDLEVBQUUsQ0FBQztnQkFDakQsT0FBTztZQUNULENBQUM7WUFDRCxZQUFZLENBQUMsVUFBVSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQ3JDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNULENBQUMsQ0FBQyxDQUFDO0lBRUgsT0FBTyxVQUFVLENBQUM7QUFDcEIsQ0FBQztBQUVELFNBQVMsZUFBZTtJQUN0Qiw2Q0FBQyxDQUFDLElBQUksV0FBVyxFQUFFLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUNoQyxDQUFDO0FBRUQsMkJBQTJCO0FBQ3BCLFNBQVMsYUFBYTtJQUMzQiw2Q0FBQyxDQUFDLEdBQUcsRUFBRTtRQUNMLE1BQU0sVUFBVSxHQUFHLGVBQWUsRUFBRSxDQUFDO1FBQ3JDLElBQUksQ0FBQyxVQUFVO1lBQUUsT0FBTztRQUV4QixNQUFNLFFBQVEsR0FBRyxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3hDLHVFQUFvQixDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2pDLENBQUMsQ0FBQyxDQUFDO0lBRUgsNkNBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsVUFBVSxFQUFFLEdBQUcsRUFBRTtRQUM1QixlQUFlLEVBQUUsQ0FBQztJQUNwQixDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMiLCJzb3VyY2VzIjpbInNyYzovL3RhdmVybl9oZWxwZXJfdGVtcGxhdGUvc3JjL0VSQeWPmOmHj+ahhuaeti91aS9jb21wb25lbnRzL3N0YXR1c0Jhci9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xyXG5pbXBvcnQgeyBpbml0U3RhdHVzQmFyQ29udGVudCwgcmVuZGVyU3RhdHVzQmFyQ29udGVudCB9IGZyb20gJy4uL3N0YXR1c0JhckNvbnRlbnQnO1xyXG5cclxuLy8g55Sx5LqOIGpxdWVyeS11aS1kaXN0IOS4jeWQqyB0eXBlcywg5oiR5Lus6ZyA6KaB5omL5Yqo5aOw5piOIGRyYWdnYWJsZVxyXG5kZWNsYXJlIGdsb2JhbCB7XHJcbiAgaW50ZXJmYWNlIEpRdWVyeSB7XHJcbiAgICBkcmFnZ2FibGUob3B0aW9ucz86IGFueSk6IEpRdWVyeTtcclxuICB9XHJcbn1cclxuXHJcbmNvbnN0IHN0YXR1c0JhcklkID0gYGVyYS1zdGF0dXMtYmFyLSR7Z2V0U2NyaXB0SWQoKX1gO1xyXG5sZXQgaXNFeHBhbmRlZCA9IGZhbHNlOyAvLyDov73ouKrlsZXlvIAv5pS257yp54q25oCBXHJcblxyXG4vLyDlrprkuYnkuI3lkIznirbmgIHkuIvnmoTmoLflvI9cclxuY29uc3QgY29sbGFwc2VkU3R5bGUgPSB7XHJcbiAgd2lkdGg6ICc1MHB4JyxcclxuICBoZWlnaHQ6ICc1MHB4JyxcclxuICAnYm9yZGVyLXJhZGl1cyc6ICc1MCUnLFxyXG4gIGJvdHRvbTogJzIwcHgnLFxyXG4gIGxlZnQ6ICcyMHB4JyxcclxuICB0b3A6ICcnLFxyXG4gIHJpZ2h0OiAnJyxcclxuICBjdXJzb3I6ICdwb2ludGVyJyxcclxuICAnanVzdGlmeS1jb250ZW50JzogJ2NlbnRlcicsXHJcbiAgJ2FsaWduLWl0ZW1zJzogJ2NlbnRlcicsXHJcbiAgZGlzcGxheTogJ2ZsZXgnLFxyXG4gIG92ZXJmbG93OiAnaGlkZGVuJyxcclxufTtcclxuXHJcbmNvbnN0IGV4cGFuZGVkU3R5bGUgPSB7XHJcbiAgd2lkdGg6ICczMDBweCcsXHJcbiAgaGVpZ2h0OiAnMjAwcHgnLFxyXG4gICdib3JkZXItcmFkaXVzJzogJzEwcHgnLFxyXG4gIGN1cnNvcjogJ2RlZmF1bHQnLFxyXG4gIHBhZGRpbmc6ICcxMnB4JyxcclxuICBkaXNwbGF5OiAnYmxvY2snLFxyXG59O1xyXG5cclxuZnVuY3Rpb24gdG9nZ2xlRXhwYW5kKCRzdGF0dXNCYXI6IEpRdWVyeSwgJGNvbnRlbnQ6IEpRdWVyeSkge1xyXG4gIGlzRXhwYW5kZWQgPSAhaXNFeHBhbmRlZDtcclxuICBpZiAoaXNFeHBhbmRlZCkge1xyXG4gICAgLy8g5bGV5byAXHJcbiAgICAkc3RhdHVzQmFyLmNzcyhleHBhbmRlZFN0eWxlKTtcclxuICAgICRzdGF0dXNCYXIuZmluZCgnc3BhbicpLmhpZGUoKTtcclxuICAgICRjb250ZW50LnNob3coKTtcclxuICAgIC8vIOiwg+eUqOa4suafk+WHveaVsO+8jOS7peehruS/neaYvuekuueahOaYr+acgOaWsOeahOaVsOaNruOAglxyXG4gICAgLy8g6L+Z5piv5bu26L+f5riy5p+T5py65Yi255qE5LiA6YOo5YiG77yM55So5LqO6Kej5Yaz5Zyo6ZqQ6JeP5YWD57Sg5LiK5pu05pawIEhUTUwg5Y+v6IO95a+86Ie05YaF5a655LiN5YWo55qE6Zeu6aKY44CCXHJcbiAgICByZW5kZXJTdGF0dXNCYXJDb250ZW50KCRjb250ZW50KTtcclxuICB9IGVsc2Uge1xyXG4gICAgLy8g5pS257ypXHJcbiAgICAkc3RhdHVzQmFyLmNzcyhjb2xsYXBzZWRTdHlsZSk7XHJcbiAgICAkc3RhdHVzQmFyLmZpbmQoJ3NwYW4nKS5zaG93KCk7XHJcbiAgICAkY29udGVudC5oaWRlKCk7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVTdGF0dXNCYXIoKSB7XHJcbiAgaWYgKCQoYCMke3N0YXR1c0JhcklkfWApLmxlbmd0aCA+IDApIHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIGNvbnN0ICRzdGF0dXNCYXIgPSAkKCc8ZGl2PicpXHJcbiAgICAuYXR0cignaWQnLCBzdGF0dXNCYXJJZClcclxuICAgIC5jc3Moe1xyXG4gICAgICBwb3NpdGlvbjogJ2ZpeGVkJyxcclxuICAgICAgJ2JhY2tncm91bmQtY29sb3InOiAncmdiYSgwLCAwLCAwLCAwLjcpJyxcclxuICAgICAgY29sb3I6ICd3aGl0ZScsXHJcbiAgICAgICdmb250LXNpemUnOiAnMTRweCcsXHJcbiAgICAgICd6LWluZGV4JzogJzEwMDAwJyxcclxuICAgICAgJ2JvcmRlci10b3AnOiAnMXB4IHNvbGlkICM0NDQnLFxyXG4gICAgICB0cmFuc2l0aW9uOiAnYWxsIDAuM3MgZWFzZS1pbi1vdXQnLFxyXG4gICAgICAuLi5jb2xsYXBzZWRTdHlsZSxcclxuICAgIH0pXHJcbiAgICAuaHRtbCgnPHNwYW4+RVJBPC9zcGFuPicpO1xyXG5cclxuICBjb25zdCAkY29udGVudCA9ICQoJzxkaXY+JykuY3NzKHtcclxuICAgIGRpc3BsYXk6ICdub25lJyxcclxuICAgICdvdmVyZmxvdy15JzogJ2F1dG8nLFxyXG4gICAgaGVpZ2h0OiAnMTAwJScsXHJcbiAgfSk7XHJcblxyXG4gICRzdGF0dXNCYXIuYXBwZW5kKCRjb250ZW50KTtcclxuICAkKCdib2R5JykuYXBwZW5kKCRzdGF0dXNCYXIpO1xyXG5cclxuICAkc3RhdHVzQmFyLmRyYWdnYWJsZSh7XHJcbiAgICBoYW5kbGU6IGAjJHtzdGF0dXNCYXJJZH1gLFxyXG4gICAgY29udGFpbm1lbnQ6ICd3aW5kb3cnLFxyXG4gIH0pO1xyXG5cclxuICAkc3RhdHVzQmFyLm9uKCdjbGljaycsICgpID0+IHtcclxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICBpZiAoJHN0YXR1c0Jhci5oYXNDbGFzcygndWktZHJhZ2dhYmxlLWRyYWdnaW5nJykpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgdG9nZ2xlRXhwYW5kKCRzdGF0dXNCYXIsICRjb250ZW50KTtcclxuICAgIH0sIDUwKTtcclxuICB9KTtcclxuXHJcbiAgcmV0dXJuICRzdGF0dXNCYXI7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJlbW92ZVN0YXR1c0JhcigpIHtcclxuICAkKGAjJHtzdGF0dXNCYXJJZH1gKS5yZW1vdmUoKTtcclxufVxyXG5cclxuLy8g5a+85Ye65Yid5aeL5YyW5Ye95pWw77yM55SxIHVpL2luZGV4LnRzIOiwg+eUqFxyXG5leHBvcnQgZnVuY3Rpb24gaW5pdFN0YXR1c0JhcigpIHtcclxuICAkKCgpID0+IHtcclxuICAgIGNvbnN0ICRzdGF0dXNCYXIgPSBjcmVhdGVTdGF0dXNCYXIoKTtcclxuICAgIGlmICghJHN0YXR1c0JhcikgcmV0dXJuO1xyXG5cclxuICAgIGNvbnN0ICRjb250ZW50ID0gJHN0YXR1c0Jhci5maW5kKCdkaXYnKTtcclxuICAgIGluaXRTdGF0dXNCYXJDb250ZW50KCRjb250ZW50KTtcclxuICB9KTtcclxuXHJcbiAgJCh3aW5kb3cpLm9uKCdwYWdlaGlkZScsICgpID0+IHtcclxuICAgIHJlbW92ZVN0YXR1c0JhcigpO1xyXG4gIH0pO1xyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/ERA变量框架/ui/components/statusBar/index.ts\n\n}");
  },
  "./src/ERA变量框架/ui/components/statusBarContent/index.ts": 
  /*!*************************************************************!*\
  !*** ./src/ERA变量框架/ui/components/statusBarContent/index.ts ***!
  \*************************************************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initStatusBarContent: () => (/* binding */ initStatusBarContent),\n/* harmony export */   renderStatusBarContent: () => (/* binding */ renderStatusBarContent)\n/* harmony export */ });\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/log */ \"./src/ERA变量框架/utils/log.ts\");\n\nconst logger = new _utils_log__WEBPACK_IMPORTED_MODULE_0__.Logger('ui-components-statusBarContent');\nlet latestStatData = null; // 用于缓存最新的数据\nfunction jsonToHtml(data) {\n    // 如果数据不是对象（是字符串、数字、布尔值等），直接返回值\n    if (typeof data !== 'object' || data === null) {\n        return `<span style=\"color: #98fb98;\">${String(data)}</span>`;\n    }\n    // 如果是对象，则创建一个列表来展示其键值对\n    let listHtml = '<ul style=\"list-style-type: none; padding-left: 20px; margin: 0;\">';\n    for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n            const value = data[key];\n            listHtml += '<li>';\n            // 显示键\n            listHtml += `<strong style=\"color: #87ceeb;\">${key}:</strong> `;\n            // 递归调用以处理值\n            listHtml += jsonToHtml(value);\n            listHtml += '</li>';\n        }\n    }\n    listHtml += '</ul>';\n    return listHtml;\n}\n/**\n * 使用缓存的最新数据渲染状态栏内容。\n * @param $contentContainer - 内容区的 JQuery 对象。\n */\nfunction renderStatusBarContent($contentContainer) {\n    if (latestStatData) {\n        const html = jsonToHtml(latestStatData);\n        $contentContainer.html(html);\n    }\n    else {\n        $contentContainer.html('数据加载中...');\n    }\n}\nfunction initStatusBarContent($contentContainer) {\n    renderStatusBarContent($contentContainer); // 初始渲染\n    // 监听事件，更新缓存，并仅在状态栏展开时渲染\n    eventOn('era:writeDone', detail => {\n        // 核心问题：直接在隐藏的 DOM 元素（display: none）上执行复杂的 .html() 更新，\n        // 可能会因浏览器的渲染优化或怪癖导致内容显示不全。\n        //\n        // 解决方案：采用延迟渲染机制。\n        // 1. 数据到达时，不直接渲染 DOM，而是先存入 `latestStatData` 缓存。\n        // 2. 仅当内容容器可见时（即状态栏是展开的），才立即从缓存渲染。\n        // 3. 当状态栏从折叠态展开时，由 statusBar 组件负责调用 renderStatusBarContent 来确保渲染。\n        logger.debug('initStatusBarContent', '接收到 era:writeDone 事件，缓存数据。', detail);\n        if (detail && detail.statWithoutMeta) {\n            latestStatData = detail.statWithoutMeta;\n            // 如果状态栏当前是展开的，则立即更新\n            if ($contentContainer.is(':visible')) {\n                renderStatusBarContent($contentContainer);\n            }\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvRVJB5Y+Y6YeP5qGG5p62L3VpL2NvbXBvbmVudHMvc3RhdHVzQmFyQ29udGVudC9pbmRleC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEM7QUFFNUMsTUFBTSxNQUFNLEdBQUcsSUFBSSw4Q0FBTSxDQUFDLGdDQUFnQyxDQUFDLENBQUM7QUFDNUQsSUFBSSxjQUFjLEdBQVEsSUFBSSxDQUFDLENBQUMsWUFBWTtBQUU1QyxTQUFTLFVBQVUsQ0FBQyxJQUFTO0lBQzNCLCtCQUErQjtJQUMvQixJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsSUFBSSxJQUFJLEtBQUssSUFBSSxFQUFFLENBQUM7UUFDOUMsT0FBTyxpQ0FBaUMsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDaEUsQ0FBQztJQUVELHVCQUF1QjtJQUN2QixJQUFJLFFBQVEsR0FBRyxvRUFBb0UsQ0FBQztJQUNwRixLQUFLLE1BQU0sR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDO1FBQ3ZCLElBQUksTUFBTSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDO1lBQ3BELE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUN4QixRQUFRLElBQUksTUFBTSxDQUFDO1lBQ25CLE1BQU07WUFDTixRQUFRLElBQUksbUNBQW1DLEdBQUcsYUFBYSxDQUFDO1lBQ2hFLFdBQVc7WUFDWCxRQUFRLElBQUksVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQzlCLFFBQVEsSUFBSSxPQUFPLENBQUM7UUFDdEIsQ0FBQztJQUNILENBQUM7SUFDRCxRQUFRLElBQUksT0FBTyxDQUFDO0lBQ3BCLE9BQU8sUUFBUSxDQUFDO0FBQ2xCLENBQUM7QUFFRDs7O0dBR0c7QUFDSSxTQUFTLHNCQUFzQixDQUFDLGlCQUF5QjtJQUM5RCxJQUFJLGNBQWMsRUFBRSxDQUFDO1FBQ25CLE1BQU0sSUFBSSxHQUFHLFVBQVUsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUN4QyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDL0IsQ0FBQztTQUFNLENBQUM7UUFDTixpQkFBaUIsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDckMsQ0FBQztBQUNILENBQUM7QUFFTSxTQUFTLG9CQUFvQixDQUFDLGlCQUF5QjtJQUM1RCxzQkFBc0IsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUMsT0FBTztJQUVsRCx3QkFBd0I7SUFDeEIsT0FBTyxDQUFDLGVBQWUsRUFBRSxNQUFNLENBQUMsRUFBRTtRQUNoQyxzREFBc0Q7UUFDdEQsMkJBQTJCO1FBQzNCLEVBQUU7UUFDRixpQkFBaUI7UUFDakIsZ0RBQWdEO1FBQ2hELG1DQUFtQztRQUNuQyxrRUFBa0U7UUFDbEUsTUFBTSxDQUFDLEtBQUssQ0FBQyxzQkFBc0IsRUFBRSw0QkFBNEIsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUMzRSxJQUFJLE1BQU0sSUFBSSxNQUFNLENBQUMsZUFBZSxFQUFFLENBQUM7WUFDckMsY0FBYyxHQUFHLE1BQU0sQ0FBQyxlQUFlLENBQUM7WUFDeEMsb0JBQW9CO1lBQ3BCLElBQUksaUJBQWlCLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUM7Z0JBQ3JDLHNCQUFzQixDQUFDLGlCQUFpQixDQUFDLENBQUM7WUFDNUMsQ0FBQztRQUNILENBQUM7SUFDSCxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMiLCJzb3VyY2VzIjpbInNyYzovL3RhdmVybl9oZWxwZXJfdGVtcGxhdGUvc3JjL0VSQeWPmOmHj+ahhuaeti91aS9jb21wb25lbnRzL3N0YXR1c0JhckNvbnRlbnQvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTG9nZ2VyIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvbG9nJztcclxuXHJcbmNvbnN0IGxvZ2dlciA9IG5ldyBMb2dnZXIoJ3VpLWNvbXBvbmVudHMtc3RhdHVzQmFyQ29udGVudCcpO1xyXG5sZXQgbGF0ZXN0U3RhdERhdGE6IGFueSA9IG51bGw7IC8vIOeUqOS6jue8k+WtmOacgOaWsOeahOaVsOaNrlxyXG5cclxuZnVuY3Rpb24ganNvblRvSHRtbChkYXRhOiBhbnkpOiBzdHJpbmcge1xyXG4gIC8vIOWmguaenOaVsOaNruS4jeaYr+Wvueixoe+8iOaYr+Wtl+espuS4suOAgeaVsOWtl+OAgeW4g+WwlOWAvOetie+8ie+8jOebtOaOpei/lOWbnuWAvFxyXG4gIGlmICh0eXBlb2YgZGF0YSAhPT0gJ29iamVjdCcgfHwgZGF0YSA9PT0gbnVsbCkge1xyXG4gICAgcmV0dXJuIGA8c3BhbiBzdHlsZT1cImNvbG9yOiAjOThmYjk4O1wiPiR7U3RyaW5nKGRhdGEpfTwvc3Bhbj5gO1xyXG4gIH1cclxuXHJcbiAgLy8g5aaC5p6c5piv5a+56LGh77yM5YiZ5Yib5bu65LiA5Liq5YiX6KGo5p2l5bGV56S65YW26ZSu5YC85a+5XHJcbiAgbGV0IGxpc3RIdG1sID0gJzx1bCBzdHlsZT1cImxpc3Qtc3R5bGUtdHlwZTogbm9uZTsgcGFkZGluZy1sZWZ0OiAyMHB4OyBtYXJnaW46IDA7XCI+JztcclxuICBmb3IgKGNvbnN0IGtleSBpbiBkYXRhKSB7XHJcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGRhdGEsIGtleSkpIHtcclxuICAgICAgY29uc3QgdmFsdWUgPSBkYXRhW2tleV07XHJcbiAgICAgIGxpc3RIdG1sICs9ICc8bGk+JztcclxuICAgICAgLy8g5pi+56S66ZSuXHJcbiAgICAgIGxpc3RIdG1sICs9IGA8c3Ryb25nIHN0eWxlPVwiY29sb3I6ICM4N2NlZWI7XCI+JHtrZXl9Ojwvc3Ryb25nPiBgO1xyXG4gICAgICAvLyDpgJLlvZLosIPnlKjku6XlpITnkIblgLxcclxuICAgICAgbGlzdEh0bWwgKz0ganNvblRvSHRtbCh2YWx1ZSk7XHJcbiAgICAgIGxpc3RIdG1sICs9ICc8L2xpPic7XHJcbiAgICB9XHJcbiAgfVxyXG4gIGxpc3RIdG1sICs9ICc8L3VsPic7XHJcbiAgcmV0dXJuIGxpc3RIdG1sO1xyXG59XHJcblxyXG4vKipcclxuICog5L2/55So57yT5a2Y55qE5pyA5paw5pWw5o2u5riy5p+T54q25oCB5qCP5YaF5a6544CCXHJcbiAqIEBwYXJhbSAkY29udGVudENvbnRhaW5lciAtIOWGheWuueWMuueahCBKUXVlcnkg5a+56LGh44CCXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gcmVuZGVyU3RhdHVzQmFyQ29udGVudCgkY29udGVudENvbnRhaW5lcjogSlF1ZXJ5KSB7XHJcbiAgaWYgKGxhdGVzdFN0YXREYXRhKSB7XHJcbiAgICBjb25zdCBodG1sID0ganNvblRvSHRtbChsYXRlc3RTdGF0RGF0YSk7XHJcbiAgICAkY29udGVudENvbnRhaW5lci5odG1sKGh0bWwpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICAkY29udGVudENvbnRhaW5lci5odG1sKCfmlbDmja7liqDovb3kuK0uLi4nKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpbml0U3RhdHVzQmFyQ29udGVudCgkY29udGVudENvbnRhaW5lcjogSlF1ZXJ5KSB7XHJcbiAgcmVuZGVyU3RhdHVzQmFyQ29udGVudCgkY29udGVudENvbnRhaW5lcik7IC8vIOWIneWni+a4suafk1xyXG5cclxuICAvLyDnm5HlkKzkuovku7bvvIzmm7TmlrDnvJPlrZjvvIzlubbku4XlnKjnirbmgIHmoI/lsZXlvIDml7bmuLLmn5NcclxuICBldmVudE9uKCdlcmE6d3JpdGVEb25lJywgZGV0YWlsID0+IHtcclxuICAgIC8vIOaguOW/g+mXrumimO+8muebtOaOpeWcqOmakOiXj+eahCBET00g5YWD57Sg77yIZGlzcGxheTogbm9uZe+8ieS4iuaJp+ihjOWkjeadgueahCAuaHRtbCgpIOabtOaWsO+8jFxyXG4gICAgLy8g5Y+v6IO95Lya5Zug5rWP6KeI5Zmo55qE5riy5p+T5LyY5YyW5oiW5oCq55mW5a+86Ie05YaF5a655pi+56S65LiN5YWo44CCXHJcbiAgICAvL1xyXG4gICAgLy8g6Kej5Yaz5pa55qGI77ya6YeH55So5bu26L+f5riy5p+T5py65Yi244CCXHJcbiAgICAvLyAxLiDmlbDmja7liLDovr7ml7bvvIzkuI3nm7TmjqXmuLLmn5MgRE9N77yM6ICM5piv5YWI5a2Y5YWlIGBsYXRlc3RTdGF0RGF0YWAg57yT5a2Y44CCXHJcbiAgICAvLyAyLiDku4XlvZPlhoXlrrnlrrnlmajlj6/op4Hml7bvvIjljbPnirbmgIHmoI/mmK/lsZXlvIDnmoTvvInvvIzmiY3nq4vljbPku47nvJPlrZjmuLLmn5PjgIJcclxuICAgIC8vIDMuIOW9k+eKtuaAgeagj+S7juaKmOWPoOaAgeWxleW8gOaXtu+8jOeUsSBzdGF0dXNCYXIg57uE5Lu26LSf6LSj6LCD55SoIHJlbmRlclN0YXR1c0JhckNvbnRlbnQg5p2l56Gu5L+d5riy5p+T44CCXHJcbiAgICBsb2dnZXIuZGVidWcoJ2luaXRTdGF0dXNCYXJDb250ZW50JywgJ+aOpeaUtuWIsCBlcmE6d3JpdGVEb25lIOS6i+S7tu+8jOe8k+WtmOaVsOaNruOAgicsIGRldGFpbCk7XHJcbiAgICBpZiAoZGV0YWlsICYmIGRldGFpbC5zdGF0V2l0aG91dE1ldGEpIHtcclxuICAgICAgbGF0ZXN0U3RhdERhdGEgPSBkZXRhaWwuc3RhdFdpdGhvdXRNZXRhO1xyXG4gICAgICAvLyDlpoLmnpznirbmgIHmoI/lvZPliY3mmK/lsZXlvIDnmoTvvIzliJnnq4vljbPmm7TmlrBcclxuICAgICAgaWYgKCRjb250ZW50Q29udGFpbmVyLmlzKCc6dmlzaWJsZScpKSB7XHJcbiAgICAgICAgcmVuZGVyU3RhdHVzQmFyQ29udGVudCgkY29udGVudENvbnRhaW5lcik7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9KTtcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/ERA变量框架/ui/components/statusBarContent/index.ts\n\n}");
  },
  "./src/ERA变量框架/ui/index.ts": 
  /*!*********************************!*\
  !*** ./src/ERA变量框架/ui/index.ts ***!
  \*********************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval('{__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _components_statusBar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/statusBar */ "./src/ERA变量框架/ui/components/statusBar/index.ts");\n/**\n * @file UI 主入口\n * @description\n * 该文件负责统一加载和初始化所有 UI 组件。\n * 它导入各个组件的初始化函数，并依次执行。\n */\n\n// 在这里可以继续添加其他 UI 组件的初始化函数\nfunction initUI() {\n    (0,_components_statusBar__WEBPACK_IMPORTED_MODULE_0__.initStatusBar)();\n    // 以后可以添加例如 initControlPanel(), initCharacterSheet() 等\n}\n// 执行所有 UI 初始化\ninitUI();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvRVJB5Y+Y6YeP5qGG5p62L3VpL2luZGV4LnRzIiwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7O0dBS0c7QUFFb0Q7QUFFdkQsMEJBQTBCO0FBQzFCLFNBQVMsTUFBTTtJQUNiLG9FQUFhLEVBQUUsQ0FBQztJQUNoQixzREFBc0Q7QUFDeEQsQ0FBQztBQUVELGNBQWM7QUFDZCxNQUFNLEVBQUUsQ0FBQyIsInNvdXJjZXMiOlsic3JjOi8vdGF2ZXJuX2hlbHBlcl90ZW1wbGF0ZS9zcmMvRVJB5Y+Y6YeP5qGG5p62L3VpL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAZmlsZSBVSSDkuLvlhaXlj6NcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqIOivpeaWh+S7tui0n+i0o+e7n+S4gOWKoOi9veWSjOWIneWni+WMluaJgOaciSBVSSDnu4Tku7bjgIJcclxuICog5a6D5a+85YWl5ZCE5Liq57uE5Lu255qE5Yid5aeL5YyW5Ye95pWw77yM5bm25L6d5qyh5omn6KGM44CCXHJcbiAqL1xyXG5cclxuaW1wb3J0IHsgaW5pdFN0YXR1c0JhciB9IGZyb20gJy4vY29tcG9uZW50cy9zdGF0dXNCYXInO1xyXG5cclxuLy8g5Zyo6L+Z6YeM5Y+v5Lul57un57ut5re75Yqg5YW25LuWIFVJIOe7hOS7tueahOWIneWni+WMluWHveaVsFxyXG5mdW5jdGlvbiBpbml0VUkoKSB7XHJcbiAgaW5pdFN0YXR1c0JhcigpO1xyXG4gIC8vIOS7peWQjuWPr+S7pea3u+WKoOS+i+WmgiBpbml0Q29udHJvbFBhbmVsKCksIGluaXRDaGFyYWN0ZXJTaGVldCgpIOetiVxyXG59XHJcblxyXG4vLyDmiafooYzmiYDmnIkgVUkg5Yid5aeL5YyWXHJcbmluaXRVSSgpO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/ERA变量框架/ui/index.ts\n\n}');
  },
  "./src/ERA变量框架/ui/parser/analyzer.ts": 
  /*!*******************************************!*\
  !*** ./src/ERA变量框架/ui/parser/analyzer.ts ***!
  \*******************************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyzeMessageUI: () => (/* binding */ analyzeMessageUI)\n/* harmony export */ });\n/**\n * 分析指定消息div的UI状态，并返回其状态和所有功能按钮。\n * @param messageDiv 消息的jQuery对象，例如 $(`div.mes[mesid=\"...\"]`)。\n * @returns 一个包含当前状态和按钮集合的对象。\n */\nfunction analyzeMessageUI(messageDiv) {\n    if (!messageDiv || messageDiv.length === 0) {\n        throw new Error('传入的消息div无效。');\n    }\n    const isEditing = messageDiv.find('.mes_edit_buttons').is(':visible');\n    const state = isEditing ? 'editing' : 'display';\n    const buttons = {\n        // 常规按钮\n        translate: messageDiv.find('.mes_button.mes_translate'),\n        generateImage: messageDiv.find('.mes_button.sd_message_gen'),\n        narrate: messageDiv.find('.mes_button.mes_narrate'),\n        prompt: messageDiv.find('.mes_button.mes_prompt'),\n        exclude: messageDiv.find('.mes_button.mes_hide'),\n        include: messageDiv.find('.mes_button.mes_unhide'),\n        embed: messageDiv.find('.mes_button.mes_embed'),\n        createCheckpoint: messageDiv.find('.mes_button.mes_create_bookmark'),\n        createBranch: messageDiv.find('.mes_button.mes_create_branch'),\n        copy: messageDiv.find('.mes_button.mes_copy'),\n        edit: messageDiv.find('.mes_button.mes_edit'),\n        // 编辑模式下的按钮\n        confirmEdit: messageDiv.find('.mes_edit_done'),\n        copyInEdit: messageDiv.find('.mes_edit_copy'),\n        delete: messageDiv.find('.mes_edit_delete'),\n        moveUp: messageDiv.find('.mes_edit_up'),\n        moveDown: messageDiv.find('.mes_edit_down'),\n        cancelEdit: messageDiv.find('.mes_edit_cancel'),\n    };\n    return {\n        state,\n        buttons,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvRVJB5Y+Y6YeP5qGG5p62L3VpL3BhcnNlci9hbmFseXplci50cyIsIm1hcHBpbmdzIjoiOzs7O0FBaURBOzs7O0dBSUc7QUFDSSxTQUFTLGdCQUFnQixDQUFDLFVBQStCO0lBQzlELElBQUksQ0FBQyxVQUFVLElBQUksVUFBVSxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUUsQ0FBQztRQUMzQyxNQUFNLElBQUksS0FBSyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFFRCxNQUFNLFNBQVMsR0FBRyxVQUFVLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3RFLE1BQU0sS0FBSyxHQUFtQixTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO0lBRWhFLE1BQU0sT0FBTyxHQUFtQjtRQUM5QixPQUFPO1FBQ1AsU0FBUyxFQUFFLFVBQVUsQ0FBQyxJQUFJLENBQUMsMkJBQTJCLENBQUM7UUFDdkQsYUFBYSxFQUFFLFVBQVUsQ0FBQyxJQUFJLENBQUMsNEJBQTRCLENBQUM7UUFDNUQsT0FBTyxFQUFFLFVBQVUsQ0FBQyxJQUFJLENBQUMseUJBQXlCLENBQUM7UUFDbkQsTUFBTSxFQUFFLFVBQVUsQ0FBQyxJQUFJLENBQUMsd0JBQXdCLENBQUM7UUFDakQsT0FBTyxFQUFFLFVBQVUsQ0FBQyxJQUFJLENBQUMsc0JBQXNCLENBQUM7UUFDaEQsT0FBTyxFQUFFLFVBQVUsQ0FBQyxJQUFJLENBQUMsd0JBQXdCLENBQUM7UUFDbEQsS0FBSyxFQUFFLFVBQVUsQ0FBQyxJQUFJLENBQUMsdUJBQXVCLENBQUM7UUFDL0MsZ0JBQWdCLEVBQUUsVUFBVSxDQUFDLElBQUksQ0FBQyxpQ0FBaUMsQ0FBQztRQUNwRSxZQUFZLEVBQUUsVUFBVSxDQUFDLElBQUksQ0FBQywrQkFBK0IsQ0FBQztRQUM5RCxJQUFJLEVBQUUsVUFBVSxDQUFDLElBQUksQ0FBQyxzQkFBc0IsQ0FBQztRQUM3QyxJQUFJLEVBQUUsVUFBVSxDQUFDLElBQUksQ0FBQyxzQkFBc0IsQ0FBQztRQUU3QyxXQUFXO1FBQ1gsV0FBVyxFQUFFLFVBQVUsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUM7UUFDOUMsVUFBVSxFQUFFLFVBQVUsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUM7UUFDN0MsTUFBTSxFQUFFLFVBQVUsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUM7UUFDM0MsTUFBTSxFQUFFLFVBQVUsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDO1FBQ3ZDLFFBQVEsRUFBRSxVQUFVLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDO1FBQzNDLFVBQVUsRUFBRSxVQUFVLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDO0tBQ2hELENBQUM7SUFFRixPQUFPO1FBQ0wsS0FBSztRQUNMLE9BQU87S0FDUixDQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXMiOlsic3JjOi8vdGF2ZXJuX2hlbHBlcl90ZW1wbGF0ZS9zcmMvRVJB5Y+Y6YeP5qGG5p62L3VpL3BhcnNlci9hbmFseXplci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGZpbGUgVUnop6PmnpDlmajvvIznlKjkuo7liIbmnpDlkozmk43kvZzphZLppoZVSeWFg+e0oOOAglxyXG4gKi9cclxuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcclxuXHJcbi8qKlxyXG4gKiDooajnpLrmtojmga9VSeeahOW9k+WJjeeKtuaAgeOAglxyXG4gKiAtICdkaXNwbGF5Jzog5bi46KeE5pi+56S65qih5byPXHJcbiAqIC0gJ2VkaXRpbmcnOiDnvJbovpHmqKHlvI9cclxuICovXHJcbmV4cG9ydCB0eXBlIE1lc3NhZ2VVSVN0YXRlID0gJ2Rpc3BsYXknIHwgJ2VkaXRpbmcnO1xyXG5cclxuLyoqXHJcbiAqIOWMheWQq+S7jua2iOaBr1VJ5Lit5o+Q5Y+W55qE5ZCE56eN5Yqf6IO95oyJ6ZKu55qEalF1ZXJ55a+56LGh44CCXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIE1lc3NhZ2VCdXR0b25zIHtcclxuICAvLyDluLjop4TmjInpkq5cclxuICB0cmFuc2xhdGU/OiBKUXVlcnk8SFRNTEVsZW1lbnQ+O1xyXG4gIGdlbmVyYXRlSW1hZ2U/OiBKUXVlcnk8SFRNTEVsZW1lbnQ+O1xyXG4gIG5hcnJhdGU/OiBKUXVlcnk8SFRNTEVsZW1lbnQ+O1xyXG4gIHByb21wdD86IEpRdWVyeTxIVE1MRWxlbWVudD47XHJcbiAgZXhjbHVkZT86IEpRdWVyeTxIVE1MRWxlbWVudD47XHJcbiAgaW5jbHVkZT86IEpRdWVyeTxIVE1MRWxlbWVudD47XHJcbiAgZW1iZWQ/OiBKUXVlcnk8SFRNTEVsZW1lbnQ+O1xyXG4gIGNyZWF0ZUNoZWNrcG9pbnQ/OiBKUXVlcnk8SFRNTEVsZW1lbnQ+O1xyXG4gIGNyZWF0ZUJyYW5jaD86IEpRdWVyeTxIVE1MRWxlbWVudD47XHJcbiAgY29weT86IEpRdWVyeTxIVE1MRWxlbWVudD47XHJcbiAgZWRpdD86IEpRdWVyeTxIVE1MRWxlbWVudD47XHJcblxyXG4gIC8vIOe8lui+keaooeW8j+S4i+eahOaMiemSrlxyXG4gIGNvbmZpcm1FZGl0PzogSlF1ZXJ5PEhUTUxFbGVtZW50PjtcclxuICBjb3B5SW5FZGl0PzogSlF1ZXJ5PEhUTUxFbGVtZW50PjtcclxuICBkZWxldGU/OiBKUXVlcnk8SFRNTEVsZW1lbnQ+O1xyXG4gIG1vdmVVcD86IEpRdWVyeTxIVE1MRWxlbWVudD47XHJcbiAgbW92ZURvd24/OiBKUXVlcnk8SFRNTEVsZW1lbnQ+O1xyXG4gIGNhbmNlbEVkaXQ/OiBKUXVlcnk8SFRNTEVsZW1lbnQ+O1xyXG5cclxuICAvLyDlhbbku5ZcclxuICBba2V5OiBzdHJpbmddOiBKUXVlcnk8SFRNTEVsZW1lbnQ+IHwgdW5kZWZpbmVkO1xyXG59XHJcblxyXG4vKipcclxuICog5YyF5ZCr5raI5oGvVUnnirbmgIHlkozmiYDmnInlj6/nlKjmjInpkq7nmoTlr7nosaHjgIJcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgTWVzc2FnZVVJQW5hbHlzaXMge1xyXG4gIHN0YXRlOiBNZXNzYWdlVUlTdGF0ZTtcclxuICBidXR0b25zOiBNZXNzYWdlQnV0dG9ucztcclxufVxyXG5cclxuLyoqXHJcbiAqIOWIhuaekOaMh+Wumua2iOaBr2RpdueahFVJ54q25oCB77yM5bm26L+U5Zue5YW254q25oCB5ZKM5omA5pyJ5Yqf6IO95oyJ6ZKu44CCXHJcbiAqIEBwYXJhbSBtZXNzYWdlRGl2IOa2iOaBr+eahGpRdWVyeeWvueixoe+8jOS+i+WmgiAkKGBkaXYubWVzW21lc2lkPVwiLi4uXCJdYCnjgIJcclxuICogQHJldHVybnMg5LiA5Liq5YyF5ZCr5b2T5YmN54q25oCB5ZKM5oyJ6ZKu6ZuG5ZCI55qE5a+56LGh44CCXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gYW5hbHl6ZU1lc3NhZ2VVSShtZXNzYWdlRGl2OiBKUXVlcnk8SFRNTEVsZW1lbnQ+KTogTWVzc2FnZVVJQW5hbHlzaXMge1xyXG4gIGlmICghbWVzc2FnZURpdiB8fCBtZXNzYWdlRGl2Lmxlbmd0aCA9PT0gMCkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKCfkvKDlhaXnmoTmtojmga9kaXbml6DmlYjjgIInKTtcclxuICB9XHJcblxyXG4gIGNvbnN0IGlzRWRpdGluZyA9IG1lc3NhZ2VEaXYuZmluZCgnLm1lc19lZGl0X2J1dHRvbnMnKS5pcygnOnZpc2libGUnKTtcclxuICBjb25zdCBzdGF0ZTogTWVzc2FnZVVJU3RhdGUgPSBpc0VkaXRpbmcgPyAnZWRpdGluZycgOiAnZGlzcGxheSc7XHJcblxyXG4gIGNvbnN0IGJ1dHRvbnM6IE1lc3NhZ2VCdXR0b25zID0ge1xyXG4gICAgLy8g5bi46KeE5oyJ6ZKuXHJcbiAgICB0cmFuc2xhdGU6IG1lc3NhZ2VEaXYuZmluZCgnLm1lc19idXR0b24ubWVzX3RyYW5zbGF0ZScpLFxyXG4gICAgZ2VuZXJhdGVJbWFnZTogbWVzc2FnZURpdi5maW5kKCcubWVzX2J1dHRvbi5zZF9tZXNzYWdlX2dlbicpLFxyXG4gICAgbmFycmF0ZTogbWVzc2FnZURpdi5maW5kKCcubWVzX2J1dHRvbi5tZXNfbmFycmF0ZScpLFxyXG4gICAgcHJvbXB0OiBtZXNzYWdlRGl2LmZpbmQoJy5tZXNfYnV0dG9uLm1lc19wcm9tcHQnKSxcclxuICAgIGV4Y2x1ZGU6IG1lc3NhZ2VEaXYuZmluZCgnLm1lc19idXR0b24ubWVzX2hpZGUnKSxcclxuICAgIGluY2x1ZGU6IG1lc3NhZ2VEaXYuZmluZCgnLm1lc19idXR0b24ubWVzX3VuaGlkZScpLFxyXG4gICAgZW1iZWQ6IG1lc3NhZ2VEaXYuZmluZCgnLm1lc19idXR0b24ubWVzX2VtYmVkJyksXHJcbiAgICBjcmVhdGVDaGVja3BvaW50OiBtZXNzYWdlRGl2LmZpbmQoJy5tZXNfYnV0dG9uLm1lc19jcmVhdGVfYm9va21hcmsnKSxcclxuICAgIGNyZWF0ZUJyYW5jaDogbWVzc2FnZURpdi5maW5kKCcubWVzX2J1dHRvbi5tZXNfY3JlYXRlX2JyYW5jaCcpLFxyXG4gICAgY29weTogbWVzc2FnZURpdi5maW5kKCcubWVzX2J1dHRvbi5tZXNfY29weScpLFxyXG4gICAgZWRpdDogbWVzc2FnZURpdi5maW5kKCcubWVzX2J1dHRvbi5tZXNfZWRpdCcpLFxyXG5cclxuICAgIC8vIOe8lui+keaooeW8j+S4i+eahOaMiemSrlxyXG4gICAgY29uZmlybUVkaXQ6IG1lc3NhZ2VEaXYuZmluZCgnLm1lc19lZGl0X2RvbmUnKSxcclxuICAgIGNvcHlJbkVkaXQ6IG1lc3NhZ2VEaXYuZmluZCgnLm1lc19lZGl0X2NvcHknKSxcclxuICAgIGRlbGV0ZTogbWVzc2FnZURpdi5maW5kKCcubWVzX2VkaXRfZGVsZXRlJyksXHJcbiAgICBtb3ZlVXA6IG1lc3NhZ2VEaXYuZmluZCgnLm1lc19lZGl0X3VwJyksXHJcbiAgICBtb3ZlRG93bjogbWVzc2FnZURpdi5maW5kKCcubWVzX2VkaXRfZG93bicpLFxyXG4gICAgY2FuY2VsRWRpdDogbWVzc2FnZURpdi5maW5kKCcubWVzX2VkaXRfY2FuY2VsJyksXHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIHN0YXRlLFxyXG4gICAgYnV0dG9ucyxcclxuICB9O1xyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/ERA变量框架/ui/parser/analyzer.ts\n\n}");
  },
  "./src/ERA变量框架/ui/patch.ts": 
  /*!*********************************!*\
  !*** ./src/ERA变量框架/ui/patch.ts ***!
  \*********************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   forceRenderRecentMessages: () => (/* binding */ forceRenderRecentMessages)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ \"lodash\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/log */ \"./src/ERA变量框架/utils/log.ts\");\n/* harmony import */ var _parser_analyzer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./parser/analyzer */ \"./src/ERA变量框架/ui/parser/analyzer.ts\");\n/**\n * @file 强制宏渲染模块\n * @description 通过模拟用户UI操作, 强制酒馆重新渲染消息, 以触发完整的宏替换。\n */\n\n\n\nconst log = new _utils_log__WEBPACK_IMPORTED_MODULE_1__.Logger('ui-patch');\n/**\n * 强制重新渲染单条消息。\n * @param messageId 要强制渲染的消息ID。\n * @returns 一个 Promise, 在模拟点击完成后 resolve。\n */\nfunction forceRenderMessage(messageId) {\n    return new Promise(resolve => {\n        const messageSelector = `div.mes[mesid=\"${messageId}\"]`;\n        const $message = $(messageSelector);\n        if ($message.length === 0) {\n            log.warn('forceRenderMessage', `找不到消息ID为 ${messageId} 的div。`);\n            return resolve();\n        }\n        const { state, buttons } = (0,_parser_analyzer__WEBPACK_IMPORTED_MODULE_2__.analyzeMessageUI)($message);\n        if (state === 'editing') {\n            // 如果已经是编辑状态，直接点击取消\n            buttons.cancelEdit?.trigger('click');\n            log.debug('forceRenderMessage', `消息 ${messageId} 处于编辑状态，已点击取消。`);\n            setTimeout(resolve, 50);\n        }\n        else {\n            // 如果是常规状态，先点击编辑，再点击取消\n            buttons.edit?.trigger('click');\n            log.debug('forceRenderMessage', `消息 ${messageId} 处于常规状态，已点击编辑。`);\n            setTimeout(() => {\n                // 重新分析以获取新状态下的按钮\n                const { buttons: updatedButtons } = (0,_parser_analyzer__WEBPACK_IMPORTED_MODULE_2__.analyzeMessageUI)($message);\n                updatedButtons.cancelEdit?.trigger('click');\n                log.debug('forceRenderMessage', `消息 ${messageId} 已点击取消。`);\n                resolve();\n            }, 50);\n        }\n    });\n}\n/**\n * 强制重新渲染最近的N条消息, 以确保宏被正确替换。\n * 是否执行以及渲染的数量由脚本变量控制。\n */\nasync function forceRenderRecentMessages() {\n    const scriptVars = getVariables({ type: 'script', script_id: getScriptId() });\n    // 检查是否启用了强制重载功能\n    const forceReload = lodash__WEBPACK_IMPORTED_MODULE_0___default().get(scriptVars, '强制重载功能', false);\n    if (!forceReload) {\n        log.debug('forceRenderRecentMessages', '强制重载功能未启用, 跳过。');\n        return; // 如果未启用，则不执行任何操作\n    }\n    // 获取要重载的消息数量，默认为1\n    const messageCount = lodash__WEBPACK_IMPORTED_MODULE_0___default().get(scriptVars, '强制重载消息数', 1);\n    log.log('forceRenderRecentMessages', `开始强制重载, 数量: ${messageCount}`);\n    // 等待一小段时间, 确保变量更新已经完成\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    const allMessages = getChatMessages('0-{{lastMessageId}}');\n    if (!allMessages || allMessages.length === 0) {\n        log.warn('forceRenderRecentMessages', '无法获取到任何消息, 终止重载。');\n        return;\n    }\n    // 根据脚本变量设置的数量来截取最近的消息\n    const recentMessages = allMessages.slice(-messageCount);\n    for (const message of recentMessages) {\n        log.debug('forceRenderRecentMessages', `正在强制渲染消息: ${message.message_id}`);\n        await forceRenderMessage(message.message_id);\n        // 在每次操作之间短暂暂停, 避免操作过快导致UI问题。\n        await new Promise(resolve => setTimeout(resolve, 100));\n    }\n    log.log('forceRenderRecentMessages', '强制重载完成。');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/ui/patch.ts\n\n}");
  },
  "./src/ERA变量框架/utils/constants.ts": 
  /*!****************************************!*\
  !*** ./src/ERA变量框架/utils/constants.ts ***!
  \****************************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval('{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CHAT_SCOPE: () => (/* binding */ CHAT_SCOPE),\n/* harmony export */   ERA_API_EVENTS: () => (/* binding */ ERA_API_EVENTS),\n/* harmony export */   ERA_DATA_REGEX: () => (/* binding */ ERA_DATA_REGEX),\n/* harmony export */   ERA_DATA_TAG: () => (/* binding */ ERA_DATA_TAG),\n/* harmony export */   ERA_EVENT_EMITTER: () => (/* binding */ ERA_EVENT_EMITTER),\n/* harmony export */   LOGS_PATH: () => (/* binding */ LOGS_PATH),\n/* harmony export */   META_DATA_PATH: () => (/* binding */ META_DATA_PATH),\n/* harmony export */   SEL_PATH: () => (/* binding */ SEL_PATH),\n/* harmony export */   STAT_DATA_PATH: () => (/* binding */ STAT_DATA_PATH)\n/* harmony export */ });\n/**\n * @file ERA 变量框架 - 核心常量模块\n * @description\n * 该文件集中定义了整个 ERA 框架所使用的关键常量。\n * 这些常量主要用作在酒馆 `chat` 变量中存储和检索 ERA 核心数据的路径（键名）。\n *\n * **核心数据结构**:\n * ERA 的数据被分为两部分，存储在 `chat` 变量下：\n * 1. **元数据 (ERAMetaData)**: 包含框架自身运行所需的核心数据，如 `EditLogs` 和 `SelectedMks`。\n * 2. **状态数据 (stat_data)**: 包含所有由用户和 AI 管理的游戏/故事变量，如 `player`、`world_state` 等。\n *\n * 其结构大致如下：\n * ```json\n * {\n *   "ERAMetaData": {\n *     "EditLogs": { ... },\n *     "SelectedMks": [ ... ]\n *   },\n *   "stat_data": {\n *     "player": { "hp": 100, "gold": 50 },\n *     "world_state": { ... }\n *   }\n * }\n * ```\n * 将这些路径定义为常量，有助于：\n * 1. **避免硬编码**：减少因拼写错误导致的 bug。\n * 2. **提高可维护性**：如果未来需要调整数据结构，只需修改此文件即可。\n * 3. **增强代码可读性**：常量的名称清晰地表达了其所指向的数据的含义。\n */\n\n/**\n * @constant {object} CHAT_SCOPE\n * @description\n * 用于酒馆助手 `getVariables` 和 `replaceVariables` 系列函数的 `scope` 参数。\n * 它指定了操作的目标是当前**聊天（Chat）**级别的变量。\n * ERA 框架的所有核心数据和用户变量都存储在此作用域下。\n */\nconst CHAT_SCOPE = { type: \'chat\' };\n/**\n * @constant {string} META_DATA_PATH\n * @description 在 `chat` 变量中，存储 ERA 框架**元数据**的根对象的键名。\n */\nconst META_DATA_PATH = \'ERAMetaData\';\n/**\n * @constant {string} STAT_DATA_PATH\n * @description 在 `chat` 变量中，存储用户**状态数据**的根对象的键名。\n */\nconst STAT_DATA_PATH = \'stat_data\';\n/**\n * @constant {string} LOGS_PATH\n * @description\n * 在 `ERAMetaData` 对象中，存储**编辑日志（Edit Logs）**的对象的键名，即 `"EditLogs"`。\n * `EditLogs` 是一个以**消息密钥（MK）**为键，以该消息引发的变量变更记录数组为值的对象。\n * 这是实现“逆序回滚”功能的基础数据。\n *\n * @example\n * // chat.ERAMetaData.EditLogs 的一个条目\n * "era_mk_1759246942209_jipmrj": [\n *   { "op": "insert", "path": "testData.inventory", "value_new": { "gold": 100, "slots": ["sword", "shield"] } },\n *   { "op": "update", "path": "player.hp", "value_old": 90, "value_new": 100 }\n * ]\n */\nconst LOGS_PATH = \'EditLogs\';\n/**\n * @constant {string} SEL_PATH\n * @description\n * 在 `ERAMetaData` 对象中，存储**已选择消息密钥链（Selected Message Keys）**的数组的键名，即 `"SelectedMks"`。\n * `SelectedMks` 是一个稀疏数组，其**索引约等于消息 ID**，值是该楼层消息的 MK。\n * 这个数组是 ERA 框架的“脊梁”，是连接抽象变量状态与具体聊天历史的桥梁。\n * 框架通过比对 `SelectedMks` 与实际消息流中的 MK，来判断数据是否需要同步。\n *\n * @example\n * // chat.ERAMetaData.SelectedMks\n * [ , "era_mk_greeting", "era_mk_abc123", , "era_mk_xyz789"]\n */\nconst SEL_PATH = \'SelectedMks\';\n/**\n * @constant {string} ERA_DATA_TAG\n * @description\n * 用于在消息内容中包裹 ERA 元数据（如消息密钥 MK）的 XML 风格标签名。\n * e.g., `<era_data>{...}</era_data>`\n */\nconst ERA_DATA_TAG = \'era_data\';\n/**\n * @constant {RegExp} ERA_DATA_REGEX\n * @description\n * 用于从消息内容字符串中匹配和提取 `<era_data>` 块的正则表达式。\n * 这个常量被定义在这里，以避免 `message_key.ts` 和 `message_utils.ts` 之间的循环依赖。\n */\nconst ERA_DATA_REGEX = new RegExp(`<${ERA_DATA_TAG}>({.*?})<\\\\/${ERA_DATA_TAG}>`);\n/**\n * @constant {object} ERA_API_EVENTS\n * @description\n * 定义了所有供外部脚本通过 `eventEmit` 调用的自定义 API 事件名称。\n * 使用这些常量可以避免在代码中使用硬编码的字符串。\n */\nconst ERA_API_EVENTS = {\n    INSERT_BY_OBJECT: \'era:insertByObject\',\n    UPDATE_BY_OBJECT: \'era:updateByObject\',\n    INSERT_BY_PATH: \'era:insertByPath\',\n    UPDATE_BY_PATH: \'era:updateByPath\',\n    DELETE_BY_OBJECT: \'era:deleteByObject\',\n    DELETE_BY_PATH: \'era:deleteByPath\',\n};\n/**\n * @constant {object} ERA_EVENT_EMITTER\n * @description 定义了所有由 ERA 框架**向外发出**的事件。\n */\nconst ERA_EVENT_EMITTER = {\n    /** 当变量写入完成时触发 */\n    WRITE_DONE: \'era:writeDone\',\n    /** 当API执行写入时触发 */\n    API_WRITE: \'era:apiWrite\',\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/utils/constants.ts\n\n}');
  },
  "./src/ERA变量框架/utils/data.ts": 
  /*!***********************************!*\
  !*** ./src/ERA变量框架/utils/data.ts ***!
  \***********************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   J: () => (/* binding */ J),\n/* harmony export */   escapeEraData: () => (/* binding */ escapeEraData),\n/* harmony export */   isPO: () => (/* binding */ isPO),\n/* harmony export */   mergeReplaceArray: () => (/* binding */ mergeReplaceArray),\n/* harmony export */   parseEditLog: () => (/* binding */ parseEditLog),\n/* harmony export */   parseJsonl: () => (/* binding */ parseJsonl),\n/* harmony export */   sanitizeArrays: () => (/* binding */ sanitizeArrays),\n/* harmony export */   unescapeEraData: () => (/* binding */ unescapeEraData)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ \"lodash\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./log */ \"./src/ERA变量框架/utils/log.ts\");\n/**\n * @file ERA 变量框架 - 通用数据处理模块\n */\n\n\n\nconst logger = new _log__WEBPACK_IMPORTED_MODULE_1__.Logger('utils-data');\nconst ESCAPE_MAP = {\n    '.': '__DOT__',\n    '\"': '__DQUOTE__',\n    \"'\": '__SQUOTE__',\n};\nconst UNESCAPE_MAP = lodash__WEBPACK_IMPORTED_MODULE_0___default().invert(ESCAPE_MAP);\nconst escapeRegex = new RegExp(Object.keys(ESCAPE_MAP).map((lodash__WEBPACK_IMPORTED_MODULE_0___default().escapeRegExp)).join('|'), 'g');\nconst unescapeRegex = new RegExp(Object.values(ESCAPE_MAP).map((lodash__WEBPACK_IMPORTED_MODULE_0___default().escapeRegExp)).join('|'), 'g');\n/**\n * 递归地转义对象或数组中所有字符串值和键的特殊字符。\n * @param data - 要处理的数据。\n * @returns - 转义后的数据。\n */\nfunction escapeEraData(data) {\n    if (Array.isArray(data)) {\n        return data.map(item => escapeEraData(item));\n    }\n    if (lodash__WEBPACK_IMPORTED_MODULE_0___default().isPlainObject(data)) {\n        const newObj = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                const escapedKey = key.replace(escapeRegex, match => ESCAPE_MAP[match]);\n                newObj[escapedKey] = escapeEraData(data[key]);\n            }\n        }\n        return newObj;\n    }\n    if (typeof data === 'string') {\n        return data.replace(escapeRegex, match => ESCAPE_MAP[match]);\n    }\n    return data;\n}\n/**\n * 递归地反转义对象或数组中所有字符串值和键的特殊字符。\n * @param data - 要处理的数据。\n * @returns - 反转义后的数据。\n */\nfunction unescapeEraData(data) {\n    if (Array.isArray(data)) {\n        return data.map(item => unescapeEraData(item));\n    }\n    if (lodash__WEBPACK_IMPORTED_MODULE_0___default().isPlainObject(data)) {\n        const newObj = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                const unescapedKey = key.replace(unescapeRegex, match => UNESCAPE_MAP[match]);\n                newObj[unescapedKey] = unescapeEraData(data[key]);\n            }\n        }\n        return newObj;\n    }\n    if (typeof data === 'string') {\n        return data.replace(unescapeRegex, match => UNESCAPE_MAP[match]);\n    }\n    return data;\n}\n/**\n * 判断一个值是否为“纯粹的对象”（Plain Object）。\n * 数组、null、函数、Date 对象等都会返回 false。\n * @param {*} v - 待检查的值。\n * @returns {boolean} 如果是纯粹的对象则返回 true，否则返回 false。\n */\nconst isPO = (v) => lodash__WEBPACK_IMPORTED_MODULE_0___default().isPlainObject(v);\n/**\n * 递归地“净化”一个对象，将其中的数组或对象值转换为字符串。\n * 主要用于准备数据以便在某些特定场景下展示或存储。\n * @param {*} v - 待净化的值。\n * @returns {*} 净化后的值。\n */\nfunction sanitizeArrays(v) {\n    if (Array.isArray(v)) {\n        // 如果是数组，则遍历其元素。如果元素是数组或对象，则字符串化它。\n        return v.map(e => (Array.isArray(e) || lodash__WEBPACK_IMPORTED_MODULE_0___default().isPlainObject(e) ? JSON.stringify(e) : e));\n    }\n    else if (lodash__WEBPACK_IMPORTED_MODULE_0___default().isPlainObject(v)) {\n        // 如果是对象，则递归地对其每个属性值进行净化。\n        const o = {};\n        for (const k in v)\n            o[k] = sanitizeArrays(v[k]);\n        return o;\n    }\n    else {\n        // 其他类型的值直接返回。\n        return v;\n    }\n}\n/**\n * 安全地将一个对象序列化为格式化的 JSON 字符串。\n * 如果序列化失败，不会抛出异常，而是返回一个包含错误信息的字符串。\n * @param {*} o - 待序列化的对象。\n * @returns {string} 成功则返回 JSON 字符串，失败则返回错误提示。\n */\nconst J = (o) => {\n    try {\n        return JSON.stringify(o, null, 2); // 使用 2 个空格进行缩进，提高可读性。\n    }\n    catch (e) {\n        return `<<stringify失败: ${e?.message || e}>>`;\n    }\n};\n/**\n * 使用“新数组覆盖旧数组”的策略来深度合并两个对象。\n * 这是 `_.merge` 的一个变体，专门用于处理模板合并等场景，\n * 在这些场景中，我们希望补丁对象中的数组能够完全替换基础对象中的数组，而不是合并它们。\n * @param {*} base - 基础对象。\n * @param {*} patch - 补丁对象。\n * @returns {*} 合并后的新对象。\n */\nfunction mergeReplaceArray(base, patch) {\n    // 使用 _.cloneDeep 确保不修改原始对象。\n    return lodash__WEBPACK_IMPORTED_MODULE_0___default().mergeWith(lodash__WEBPACK_IMPORTED_MODULE_0___default().cloneDeep(base), lodash__WEBPACK_IMPORTED_MODULE_0___default().cloneDeep(patch), (a, b) => {\n        // 自定义合并逻辑：如果任一值为数组，则直接返回补丁值（b），从而实现覆盖。\n        if (Array.isArray(a) || Array.isArray(b))\n            return b;\n        // 对于非数组类型，返回 undefined 以使用 _.merge 的默认合并行为。\n        return undefined;\n    });\n}\n/**\n * 健壮地解析 `EditLog` 的原始数据。\n * `EditLog` 可能以多种格式存在（对象、数组、JSON字符串），此函数旨在统一处理它们。\n * @param {*} raw - 从变量中读取的原始 `EditLog` 数据。\n * @returns {any[]} 解析后的 `EditLog` 数组。如果解析失败或输入无效，则返回一个空数组。\n */\nfunction parseEditLog(raw) {\n    if (Array.isArray(raw))\n        return raw;\n    if (raw && typeof raw === 'object')\n        return [raw]; // 单个对象也视为有效日志\n    if (typeof raw === 'string') {\n        const s = raw.replace(/^\\s*```(?:json)?\\s*|\\s*```\\s*$/g, ''); // 移除代码围栏\n        try {\n            const arr = JSON.parse(s);\n            return Array.isArray(arr) ? arr : [];\n        }\n        catch {\n            return [];\n        }\n    }\n    return [];\n}\n/**\n * 智能地从字符串中移除各种风格的注释，同时保留字符串字面量中的内容。\n *\n * **工作原理**:\n * 该函数通过一个小型状态机来逐字解析输入字符串。它维护一个 `inString` 状态，\n * 用于判断当前字符是否位于一个双引号包裹的字符串内部。\n *\n * 1. 当检测到进入或退出一个字符串时（通过非转义的双引号 `\"`），`inString` 状态会翻转。\n * 2. 如果 `inString` 为 `true`，则所有字符都会被无条件地保留。这确保了字符串值（如 URL）中的 `//` 或 `/*` 不会被当作注释处理。\n * 3. 如果 `inString` 为 `false`，函数会检查是否存在注释标记（`//`, `/*`, `\x3c!--`）。\n * 4. 如果找到注释标记，函数会向前扫描直到注释结束，并跳过这部分内容。\n * 5. 如果没有找到注释，则将当前字符追加到结果中。\n *\n * @param str - 待处理的字符串。\n * @returns 移除了注释的字符串。\n */\nfunction stripComments(str) {\n    if (!str)\n        return '';\n    let result = '';\n    let inString = false; // 状态：是否在字符串内部\n    for (let i = 0; i < str.length; i++) {\n        const char = str[i];\n        // 检查是否进入或退出字符串。忽略转义的双引号 `\\\"`。\n        if (char === '\"' && (i === 0 || str[i - 1] !== '\\\\')) {\n            inString = !inString;\n        }\n        // 如果在字符串内部，直接追加字符，不进行任何注释检查。\n        if (inString) {\n            result += char;\n            continue;\n        }\n        // --- 只有在字符串外部时，才进行注释检查 ---\n        const nextChar = str[i + 1];\n        // 检查行注释 `//`\n        if (char === '/' && nextChar === '/') {\n            const endOfLine = str.indexOf('\\n', i + 2);\n            if (endOfLine === -1) {\n                // 如果没有换行符，说明注释直到字符串末尾，直接结束循环。\n                break;\n            }\n            // 保留换行符，并将索引 `i` 快进到行尾。\n            result += '\\n';\n            i = endOfLine;\n            continue;\n        }\n        // 检查块注释 `/* ... */`\n        if (char === '/' && nextChar === '*') {\n            const endOfComment = str.indexOf('*/', i + 2);\n            if (endOfComment === -1) {\n                // 未闭合的注释，忽略剩余所有内容。\n                break;\n            }\n            // 将索引 `i` 快进到注释结尾。\n            i = endOfComment + 1;\n            continue;\n        }\n        // 检查 HTML 注释 `\x3c!-- ... --\x3e`\n        if (char === '<' && str.substring(i, i + 4) === '\x3c!--') {\n            const endOfComment = str.indexOf('--\x3e', i + 4);\n            if (endOfComment === -1) {\n                // 未闭合的注释。\n                break;\n            }\n            i = endOfComment + 2;\n            continue;\n        }\n        // 如果不是注释，则保留该字符。\n        result += char;\n    }\n    return result;\n}\n/**\n * 解析一个包含多个串联 JSON 对象的字符串（类似于 JSONL 格式）。\n * 这种格式有时会由 AI 生成。此函数能够逐个提取并解析它们。\n *\n * @param {string} str - 待解析的字符串。\n * @returns {any[]} 解析出的对象数组。\n */\nfunction parseJsonl(str) {\n    const objects = [];\n    if (!str || typeof str !== 'string') {\n        return objects;\n    }\n    // 在解析 JSON 之前，必须先安全地移除所有注释。\n    // 不能使用简单的正则表达式（如 `/\\/\\/.*/g`），因为它无法区分代码中的注释和字符串值（如 URL \"https://...\"）中的 `//`，\n    // 会错误地破坏 JSON 字符串的结构。`stripComments` 函数通过状态管理解决了这个问题。\n    const strWithoutComments = stripComments(str);\n    const trimmedStr = strWithoutComments.trim();\n    let braceCount = 0; // 花括号平衡计数器\n    let startIndex = -1; // 当前 JSON 对象的起始索引\n    let inString = false; // 标记是否处于双引号字符串内部\n    for (let i = 0; i < trimmedStr.length; i++) {\n        const char = trimmedStr[i];\n        // 切换 inString 状态，忽略转义的双引号\n        if (char === '\"' && (i === 0 || trimmedStr[i - 1] !== '\\\\')) {\n            inString = !inString;\n        }\n        // 如果在字符串内部，则跳过所有花括号的逻辑判断\n        if (inString)\n            continue;\n        if (char === '{') {\n            if (braceCount === 0) {\n                // 发现一个新 JSON 对象的开始\n                startIndex = i;\n            }\n            braceCount++;\n        }\n        else if (char === '}') {\n            if (braceCount > 0) {\n                braceCount--;\n                if (braceCount === 0 && startIndex !== -1) {\n                    // 花括号平衡，一个完整的 JSON 对象被找到\n                    const jsonString = trimmedStr.substring(startIndex, i + 1);\n                    try {\n                        const obj = JSON.parse(jsonString);\n                        objects.push(obj);\n                    }\n                    catch (e) {\n                        // 如果解析失败，记录错误并继续，不中断整个过程\n                        logger.error(`JSONL 解析失败: ${e?.message || e}. 失败的片段: ${jsonString}`, e);\n                    }\n                    // 重置状态，准备寻找下一个对象\n                    startIndex = -1;\n                }\n            }\n        }\n    }\n    return objects;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/utils/data.ts\n\n}");
  },
  "./src/ERA变量框架/utils/era_data.ts": 
  /*!***************************************!*\
  !*** ./src/ERA变量框架/utils/era_data.ts ***!
  \***************************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEraData: () => (/* binding */ getEraData),\n/* harmony export */   removeMetaFields: () => (/* binding */ removeMetaFields),\n/* harmony export */   updateEraMetaData: () => (/* binding */ updateEraMetaData),\n/* harmony export */   updateEraStatData: () => (/* binding */ updateEraStatData)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ \"lodash\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"./src/ERA变量框架/utils/constants.ts\");\n/**\n * @file ERA 变量框架 - ERA 核心变量读写模块\n */\n\n\n\n/**\n * 递归地从对象中移除所有以 `$` 开头的字段（如 `$meta`, `$template`）。\n * 此函数会创建一个对象的深拷贝，因此不会修改原始对象。\n * @param {any} obj - 待处理的对象或值。\n * @returns {any} 一个不包含 `$` 前缀字段的新对象或原始值。\n */\nfunction removeMetaFields(obj) {\n    // 对于非对象类型，直接返回原始值\n    if (!lodash__WEBPACK_IMPORTED_MODULE_0___default().isObject(obj)) {\n        return obj;\n    }\n    // 创建深拷贝以避免修改原始对象\n    const newObj = lodash__WEBPACK_IMPORTED_MODULE_0___default().cloneDeep(obj);\n    function recurse(current) {\n        if (Array.isArray(current)) {\n            // 如果是数组，则递归处理数组中的每个元素\n            current.forEach(item => recurse(item));\n        }\n        else if (lodash__WEBPACK_IMPORTED_MODULE_0___default().isPlainObject(current)) {\n            // 如果是纯粹的对象，遍历其所有键\n            for (const key in current) {\n                // 如果键以 '$' 开头，则删除该属性\n                if (key.startsWith('$')) {\n                    delete current[key];\n                }\n                else {\n                    // 否则，递归处理该属性的值\n                    recurse(current[key]);\n                }\n            }\n        }\n    }\n    recurse(newObj);\n    return newObj;\n}\n/**\n * 获取并确保 ERA 的元数据和状态数据对象的存在。\n * @returns {{meta: object, stat: object}} 包含元数据和状态数据的对象。\n */\nfunction getEraData() {\n    const chatVars = getVariables(_constants__WEBPACK_IMPORTED_MODULE_1__.CHAT_SCOPE) || {};\n    const meta = lodash__WEBPACK_IMPORTED_MODULE_0___default().get(chatVars, _constants__WEBPACK_IMPORTED_MODULE_1__.META_DATA_PATH, {});\n    const stat = lodash__WEBPACK_IMPORTED_MODULE_0___default().get(chatVars, _constants__WEBPACK_IMPORTED_MODULE_1__.STAT_DATA_PATH, {});\n    return { meta, stat };\n}\n/**\n * 原子性地更新 ERA 的状态数据 (stat_data)。\n * @param {(currentStatData: any) => (any | Promise<any>)} updater - 一个接收当前 stat_data 并返回修改后 stat_data 的函数 (可以是 async)。\n */\nasync function updateEraStatData(updater) {\n    await updateVariablesWith(async (v) => {\n        const currentStat = lodash__WEBPACK_IMPORTED_MODULE_0___default().get(v, _constants__WEBPACK_IMPORTED_MODULE_1__.STAT_DATA_PATH, {});\n        const newStat = await updater(currentStat);\n        lodash__WEBPACK_IMPORTED_MODULE_0___default().set(v, _constants__WEBPACK_IMPORTED_MODULE_1__.STAT_DATA_PATH, newStat);\n        return v;\n    }, _constants__WEBPACK_IMPORTED_MODULE_1__.CHAT_SCOPE);\n}\n/**\n * 原子性地更新 ERA 的元数据 (ERAMetaData)。\n * @param {(currentMetaData: any) => (any | Promise<any>)} updater - 一个接收当前 ERAMetaData 并返回修改后 ERAMetaData 的函数 (可以是 async)。\n */\nasync function updateEraMetaData(updater) {\n    await updateVariablesWith(async (v) => {\n        const currentMeta = lodash__WEBPACK_IMPORTED_MODULE_0___default().get(v, _constants__WEBPACK_IMPORTED_MODULE_1__.META_DATA_PATH, {});\n        const newMeta = await updater(currentMeta);\n        lodash__WEBPACK_IMPORTED_MODULE_0___default().set(v, _constants__WEBPACK_IMPORTED_MODULE_1__.META_DATA_PATH, newMeta);\n        return v;\n    }, _constants__WEBPACK_IMPORTED_MODULE_1__.CHAT_SCOPE);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvRVJB5Y+Y6YeP5qGG5p62L3V0aWxzL2VyYV9kYXRhLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7R0FFRztBQUVVO0FBRVU7QUFDa0Q7QUFFekU7Ozs7O0dBS0c7QUFDSSxTQUFTLGdCQUFnQixDQUFDLEdBQVE7SUFDdkMsa0JBQWtCO0lBQ2xCLElBQUksQ0FBQyxzREFBVSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUM7UUFDckIsT0FBTyxHQUFHLENBQUM7SUFDYixDQUFDO0lBRUQsaUJBQWlCO0lBQ2pCLE1BQU0sTUFBTSxHQUFHLHVEQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7SUFFaEMsU0FBUyxPQUFPLENBQUMsT0FBWTtRQUMzQixJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztZQUMzQixzQkFBc0I7WUFDdEIsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3pDLENBQUM7YUFBTSxJQUFJLDJEQUFlLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztZQUNwQyxrQkFBa0I7WUFDbEIsS0FBSyxNQUFNLEdBQUcsSUFBSSxPQUFPLEVBQUUsQ0FBQztnQkFDMUIscUJBQXFCO2dCQUNyQixJQUFJLEdBQUcsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQztvQkFDeEIsT0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQ3RCLENBQUM7cUJBQU0sQ0FBQztvQkFDTixlQUFlO29CQUNmLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztnQkFDeEIsQ0FBQztZQUNILENBQUM7UUFDSCxDQUFDO0lBQ0gsQ0FBQztJQUVELE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNoQixPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDO0FBRUQ7OztHQUdHO0FBQ0ksU0FBUyxVQUFVO0lBQ3hCLE1BQU0sUUFBUSxHQUFHLFlBQVksQ0FBQyxrREFBVSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2hELE1BQU0sSUFBSSxHQUFHLGlEQUFLLENBQUMsUUFBUSxFQUFFLHNEQUFjLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDakQsTUFBTSxJQUFJLEdBQUcsaURBQUssQ0FBQyxRQUFRLEVBQUUsc0RBQWMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNqRCxPQUFPLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDO0FBQ3hCLENBQUM7QUFFRDs7O0dBR0c7QUFDSSxLQUFLLFVBQVUsaUJBQWlCLENBQUMsT0FBcUQ7SUFDM0YsTUFBTSxtQkFBbUIsQ0FBQyxLQUFLLEVBQUMsQ0FBQyxFQUFDLEVBQUU7UUFDbEMsTUFBTSxXQUFXLEdBQUcsaURBQUssQ0FBQyxDQUFDLEVBQUUsc0RBQWMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNqRCxNQUFNLE9BQU8sR0FBRyxNQUFNLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUMzQyxpREFBSyxDQUFDLENBQUMsRUFBRSxzREFBYyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ2xDLE9BQU8sQ0FBQyxDQUFDO0lBQ1gsQ0FBQyxFQUFFLGtEQUFVLENBQUMsQ0FBQztBQUNqQixDQUFDO0FBRUQ7OztHQUdHO0FBQ0ksS0FBSyxVQUFVLGlCQUFpQixDQUFDLE9BQXFEO0lBQzNGLE1BQU0sbUJBQW1CLENBQUMsS0FBSyxFQUFDLENBQUMsRUFBQyxFQUFFO1FBQ2xDLE1BQU0sV0FBVyxHQUFHLGlEQUFLLENBQUMsQ0FBQyxFQUFFLHNEQUFjLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDakQsTUFBTSxPQUFPLEdBQUcsTUFBTSxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDM0MsaURBQUssQ0FBQyxDQUFDLEVBQUUsc0RBQWMsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUNsQyxPQUFPLENBQUMsQ0FBQztJQUNYLENBQUMsRUFBRSxrREFBVSxDQUFDLENBQUM7QUFDakIsQ0FBQyIsInNvdXJjZXMiOlsic3JjOi8vdGF2ZXJuX2hlbHBlcl90ZW1wbGF0ZS9zcmMvRVJB5Y+Y6YeP5qGG5p62L3V0aWxzL2VyYV9kYXRhLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGUgRVJBIOWPmOmHj+ahhuaetiAtIEVSQSDmoLjlv4Plj5jph4/or7vlhpnmqKHlnZdcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgeyBDSEFUX1NDT1BFLCBNRVRBX0RBVEFfUEFUSCwgU1RBVF9EQVRBX1BBVEggfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbi8qKlxuICog6YCS5b2S5Zyw5LuO5a+56LGh5Lit56e76Zmk5omA5pyJ5LulIGAkYCDlvIDlpLTnmoTlrZfmrrXvvIjlpoIgYCRtZXRhYCwgYCR0ZW1wbGF0ZWDvvInjgIJcbiAqIOatpOWHveaVsOS8muWIm+W7uuS4gOS4quWvueixoeeahOa3seaLt+i0ne+8jOWboOatpOS4jeS8muS/ruaUueWOn+Wni+WvueixoeOAglxuICogQHBhcmFtIHthbnl9IG9iaiAtIOW+heWkhOeQhueahOWvueixoeaIluWAvOOAglxuICogQHJldHVybnMge2FueX0g5LiA5Liq5LiN5YyF5ZCrIGAkYCDliY3nvIDlrZfmrrXnmoTmlrDlr7nosaHmiJbljp/lp4vlgLzjgIJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZU1ldGFGaWVsZHMob2JqOiBhbnkpOiBhbnkge1xuICAvLyDlr7nkuo7pnZ7lr7nosaHnsbvlnovvvIznm7TmjqXov5Tlm57ljp/lp4vlgLxcbiAgaWYgKCFfLmlzT2JqZWN0KG9iaikpIHtcbiAgICByZXR1cm4gb2JqO1xuICB9XG5cbiAgLy8g5Yib5bu65rex5ou36LSd5Lul6YG/5YWN5L+u5pS55Y6f5aeL5a+56LGhXG4gIGNvbnN0IG5ld09iaiA9IF8uY2xvbmVEZWVwKG9iaik7XG5cbiAgZnVuY3Rpb24gcmVjdXJzZShjdXJyZW50OiBhbnkpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShjdXJyZW50KSkge1xuICAgICAgLy8g5aaC5p6c5piv5pWw57uE77yM5YiZ6YCS5b2S5aSE55CG5pWw57uE5Lit55qE5q+P5Liq5YWD57SgXG4gICAgICBjdXJyZW50LmZvckVhY2goaXRlbSA9PiByZWN1cnNlKGl0ZW0pKTtcbiAgICB9IGVsc2UgaWYgKF8uaXNQbGFpbk9iamVjdChjdXJyZW50KSkge1xuICAgICAgLy8g5aaC5p6c5piv57qv57K555qE5a+56LGh77yM6YGN5Y6G5YW25omA5pyJ6ZSuXG4gICAgICBmb3IgKGNvbnN0IGtleSBpbiBjdXJyZW50KSB7XG4gICAgICAgIC8vIOWmguaenOmUruS7pSAnJCcg5byA5aS077yM5YiZ5Yig6Zmk6K+l5bGe5oCnXG4gICAgICAgIGlmIChrZXkuc3RhcnRzV2l0aCgnJCcpKSB7XG4gICAgICAgICAgZGVsZXRlIGN1cnJlbnRba2V5XTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyDlkKbliJnvvIzpgJLlvZLlpITnkIbor6XlsZ7mgKfnmoTlgLxcbiAgICAgICAgICByZWN1cnNlKGN1cnJlbnRba2V5XSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZWN1cnNlKG5ld09iaik7XG4gIHJldHVybiBuZXdPYmo7XG59XG5cbi8qKlxuICog6I635Y+W5bm256Gu5L+dIEVSQSDnmoTlhYPmlbDmja7lkoznirbmgIHmlbDmja7lr7nosaHnmoTlrZjlnKjjgIJcbiAqIEByZXR1cm5zIHt7bWV0YTogb2JqZWN0LCBzdGF0OiBvYmplY3R9fSDljIXlkKvlhYPmlbDmja7lkoznirbmgIHmlbDmja7nmoTlr7nosaHjgIJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEVyYURhdGEoKTogeyBtZXRhOiBhbnk7IHN0YXQ6IGFueSB9IHtcbiAgY29uc3QgY2hhdFZhcnMgPSBnZXRWYXJpYWJsZXMoQ0hBVF9TQ09QRSkgfHwge307XG4gIGNvbnN0IG1ldGEgPSBfLmdldChjaGF0VmFycywgTUVUQV9EQVRBX1BBVEgsIHt9KTtcbiAgY29uc3Qgc3RhdCA9IF8uZ2V0KGNoYXRWYXJzLCBTVEFUX0RBVEFfUEFUSCwge30pO1xuICByZXR1cm4geyBtZXRhLCBzdGF0IH07XG59XG5cbi8qKlxuICog5Y6f5a2Q5oCn5Zyw5pu05pawIEVSQSDnmoTnirbmgIHmlbDmja4gKHN0YXRfZGF0YSnjgIJcbiAqIEBwYXJhbSB7KGN1cnJlbnRTdGF0RGF0YTogYW55KSA9PiAoYW55IHwgUHJvbWlzZTxhbnk+KX0gdXBkYXRlciAtIOS4gOS4quaOpeaUtuW9k+WJjSBzdGF0X2RhdGEg5bm26L+U5Zue5L+u5pS55ZCOIHN0YXRfZGF0YSDnmoTlh73mlbAgKOWPr+S7peaYryBhc3luYynjgIJcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZUVyYVN0YXREYXRhKHVwZGF0ZXI6IChjdXJyZW50U3RhdERhdGE6IGFueSkgPT4gYW55IHwgUHJvbWlzZTxhbnk+KSB7XG4gIGF3YWl0IHVwZGF0ZVZhcmlhYmxlc1dpdGgoYXN5bmMgdiA9PiB7XG4gICAgY29uc3QgY3VycmVudFN0YXQgPSBfLmdldCh2LCBTVEFUX0RBVEFfUEFUSCwge30pO1xuICAgIGNvbnN0IG5ld1N0YXQgPSBhd2FpdCB1cGRhdGVyKGN1cnJlbnRTdGF0KTtcbiAgICBfLnNldCh2LCBTVEFUX0RBVEFfUEFUSCwgbmV3U3RhdCk7XG4gICAgcmV0dXJuIHY7XG4gIH0sIENIQVRfU0NPUEUpO1xufVxuXG4vKipcbiAqIOWOn+WtkOaAp+WcsOabtOaWsCBFUkEg55qE5YWD5pWw5o2uIChFUkFNZXRhRGF0YSnjgIJcbiAqIEBwYXJhbSB7KGN1cnJlbnRNZXRhRGF0YTogYW55KSA9PiAoYW55IHwgUHJvbWlzZTxhbnk+KX0gdXBkYXRlciAtIOS4gOS4quaOpeaUtuW9k+WJjSBFUkFNZXRhRGF0YSDlubbov5Tlm57kv67mlLnlkI4gRVJBTWV0YURhdGEg55qE5Ye95pWwICjlj6/ku6XmmK8gYXN5bmMp44CCXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cGRhdGVFcmFNZXRhRGF0YSh1cGRhdGVyOiAoY3VycmVudE1ldGFEYXRhOiBhbnkpID0+IGFueSB8IFByb21pc2U8YW55Pikge1xuICBhd2FpdCB1cGRhdGVWYXJpYWJsZXNXaXRoKGFzeW5jIHYgPT4ge1xuICAgIGNvbnN0IGN1cnJlbnRNZXRhID0gXy5nZXQodiwgTUVUQV9EQVRBX1BBVEgsIHt9KTtcbiAgICBjb25zdCBuZXdNZXRhID0gYXdhaXQgdXBkYXRlcihjdXJyZW50TWV0YSk7XG4gICAgXy5zZXQodiwgTUVUQV9EQVRBX1BBVEgsIG5ld01ldGEpO1xuICAgIHJldHVybiB2O1xuICB9LCBDSEFUX1NDT1BFKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/ERA变量框架/utils/era_data.ts\n\n}");
  },
  "./src/ERA变量框架/utils/log.ts": 
  /*!**********************************!*\
  !*** ./src/ERA变量框架/utils/log.ts ***!
  \**********************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LOG_CONFIG: () => (/* binding */ LOG_CONFIG),\n/* harmony export */   Logger: () => (/* binding */ Logger),\n/* harmony export */   logContext: () => (/* binding */ logContext)\n/* harmony export */ });\n/**\n * @file ERA 变量框架 - 日志记录模块\n */\n\n/**\n * @constant {object} LOG_CONFIG\n * @description\n * 用于控制日志输出的配置对象。\n */\nconst LOG_CONFIG = {\n    // 定义所有可用的日志级别及其权重。数字越小，级别越低。\n    levels: {\n        debug: 0,\n        log: 1,\n        warn: 2,\n        error: 3,\n    },\n    // 设置当前全局日志级别。只有权重等于或高于此级别的日志才会被输出。\n    currentLevel: 0, // 默认为 'debug'\n    // 'debug' 级别的白名单。只有当 currentLevel 为 debug 时，此列表才生效。\n    // 只有在此列表中的模块才会输出 debug 日志。\n    debugWhitelist: [\n        'api-command',\n        'api-macro-parser',\n        'api-macro-patch',\n        'core-rollback',\n        'core-sync',\n        //'core-crud-delete',\n        //'core-crud-update',\n        'core-crud-patcher',\n        'core-crud-insert-insert',\n        //'core-crud-insert-template',\n        //'core-key-mk',\n        'events-dispatcher',\n        'events-queue',\n        'events-merger',\n        'utils-message',\n        'ui-components-statusBarContent',\n    ],\n};\n// 初始化时将 currentLevel 设置为 debug 级别\nLOG_CONFIG.currentLevel = LOG_CONFIG.levels.debug;\n/**\n * @class Logger\n * @description 一个为 ERA 框架设计的、支持日志分级的记录器。\n *\n * **核心功能**:\n * 1. **日志分级**: 提供 `debug`, `log`, `warn`, `error` 四个级别，方便过滤和定位问题。\n * 2. **统一格式**: 所有日志都遵循 `《ERA》「模块名」【函数名】日志内容` 的格式，清晰明了。\n * 3. **控制台输出**: 日志会根据级别使用不同颜色和样式的 `console` 方法输出，便于在浏览器中实时调试。\n * 4. **纯粹的控制台日志**: 日志系统不再向酒馆聊天变量中写入任何数据，避免了性能问题和数据污染。\n */\n/**\n * @type {{mk: string}}\n * @description 一个用于在事件处理期间临时存储日志上下文（如 Message Key）的对象。\n */\nconst logContext = {\n    mk: '',\n};\nclass Logger {\n    /**\n     * @private\n     * @property {string} moduleName - 该 Logger 实例绑定的模块名称。\n     * @description\n     * 命名规则:\n     * 为了方便在日志中快速定位来源，模块名应遵循 `目录-子目录-...-文件名` 的格式。\n     * 例如，位于 `src/ERA变量框架/core/crud/insert/insert.ts` 的文件，\n     * 其模块名应为 `core-crud-insert-insert`。\n     */\n    moduleName;\n    /**\n     * 创建一个新的 Logger 实例。\n     * @param {string} moduleName - 该 Logger 实例绑定的模块名称。\n     */\n    constructor(moduleName) {\n        this.moduleName = moduleName;\n    }\n    /**\n     * 格式化日志消息。\n     * @param {string} funcName - 调用日志的函数名。\n     * @param {any} message - 日志内容。\n     * @returns {string} 格式化后的日志字符串。\n     */\n    formatMessage(funcName, message) {\n        const mkString = logContext.mk ? `（${logContext.mk}）` : '';\n        return `《ERA》${mkString}「${this.moduleName}」【${funcName}】${String(message)}`;\n    }\n    /**\n     * 记录一条 debug 级别的日志。\n     * @param {string} funcName - 函数名。\n     * @param {any} message - 日志内容。\n     * @param {any} [obj] - 可选的、附加到日志中的对象。\n     */\n    debug(funcName, message, obj) {\n        // 1. 全局级别检查\n        if (LOG_CONFIG.currentLevel > LOG_CONFIG.levels.debug)\n            return;\n        // 2. 白名单检查 (仅对 debug 生效)\n        if (LOG_CONFIG.currentLevel === LOG_CONFIG.levels.debug && !LOG_CONFIG.debugWhitelist.includes(this.moduleName)) {\n            return;\n        }\n        const formattedMessage = this.formatMessage(funcName, message);\n        if (obj) {\n            console.debug(formattedMessage, obj);\n        }\n        else {\n            console.debug(formattedMessage);\n        }\n    }\n    /**\n     * 记录一条 log 级别的日志。\n     * @param {string} funcName - 函数名。\n     * @param {any} message - 日志内容。\n     * @param {any} [obj] - 可选的、附加到日志中的对象。\n     */\n    log(funcName, message, obj) {\n        if (LOG_CONFIG.currentLevel > LOG_CONFIG.levels.log)\n            return;\n        const formattedMessage = this.formatMessage(funcName, message);\n        if (obj) {\n            console.log(`%c${formattedMessage}`, 'color: #3498db;', obj);\n        }\n        else {\n            console.log(`%c${formattedMessage}`, 'color: #3498db;');\n        }\n    }\n    /**\n     * 记录一条 warn 级别的日志。\n     * @param {string} funcName - 函数名。\n     * @param {any} message - 日志内容。\n     * @param {any} [obj] - 可选的、附加到日志中的对象。\n     */\n    warn(funcName, message, obj) {\n        if (LOG_CONFIG.currentLevel > LOG_CONFIG.levels.warn)\n            return;\n        const formattedMessage = this.formatMessage(funcName, message);\n        if (obj) {\n            console.warn(`%c${formattedMessage}`, 'color: #f39c12;', obj);\n        }\n        else {\n            console.warn(`%c${formattedMessage}`, 'color: #f39c12;');\n        }\n    }\n    /**\n     * 记录一条 error 级别的日志。\n     * @param {string} funcName - 函数名。\n     * @param {any} message - 日志内容。\n     * @param {any} [errorObj] - 可选的、附加到日志中的错误对象。\n     */\n    error(funcName, message, errorObj) {\n        if (LOG_CONFIG.currentLevel > LOG_CONFIG.levels.error)\n            return;\n        const formattedMessage = this.formatMessage(funcName, message);\n        if (errorObj) {\n            console.error(`%c${formattedMessage}`, 'color: #e74c3c; font-weight: bold;', errorObj);\n        }\n        else {\n            console.error(`%c${formattedMessage}`, 'color: #e74c3c; font-weight: bold;');\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/utils/log.ts\n\n}");
  },
  "./src/ERA变量框架/utils/message.ts": 
  /*!**************************************!*\
  !*** ./src/ERA变量框架/utils/message.ts ***!
  \**************************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   findLastAiMessage: () => (/* binding */ findLastAiMessage),\n/* harmony export */   getMessageContent: () => (/* binding */ getMessageContent),\n/* harmony export */   isUserMessage: () => (/* binding */ isUserMessage),\n/* harmony export */   updateMessageContent: () => (/* binding */ updateMessageContent)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/ERA变量框架/utils/constants.ts\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./log */ \"./src/ERA变量框架/utils/log.ts\");\n/* harmony import */ var _text__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./text */ \"./src/ERA变量框架/utils/text.ts\");\n/**\n * @file ERA 变量框架 - 消息处理模块\n * @description\n * 该文件提供了一系列用于处理、查询和更新酒馆消息对象的通用辅助函数。\n */\n\n\n\n\nconst log = new _log__WEBPACK_IMPORTED_MODULE_1__.Logger('utils-message');\n// ==================================================================\n// 消息读取与解析\n// ==================================================================\n/**\n * **【获取消息内容】** 从酒馆的消息对象中安全地提取当前激活（被选中）的消息内容字符串。\n * 这个函数是 ERA 中所有消息内容读取的唯一入口，以确保逻辑统一和健壮性。\n * @param {TavernMessage} msg - 酒馆消息对象。\n * @returns {string | null} 当前激活的消息内容；如果无法获取，则返回 null。\n */\nfunction getMessageContent(msg) {\n    if (!msg)\n        return null;\n    let content = null;\n    // 优先检查 .mes 属性，这是新版酒馆的规范\n    if (typeof msg.mes === 'string') {\n        content = msg.mes;\n    }\n    // 如果没有 .mes，则处理 swipes\n    else if (Array.isArray(msg.swipes)) {\n        const sid = Number(msg.swipe_id ?? 0);\n        content = msg.swipes[sid] || null;\n    }\n    // 最后，作为兼容，检查旧版的 .message 属性\n    else if (typeof msg.message === 'string') {\n        content = msg.message;\n    }\n    if (content === null) {\n        return null;\n    }\n    // 在返回内容前进行宏替换。\n    // 这样做是因为酒馆自身的宏替换行为不一致：有时（如消息流式生成后）会替换，\n    // 但有时（如聊天记录刚加载时）则不会，这会导致读取到的内容状态混乱。\n    // 因此，我们统一在获取消息时手动执行一次宏替换，以确保数据的一致性。\n    return (0,_text__WEBPACK_IMPORTED_MODULE_2__.parseCharacterMacros)(content);\n}\n/**\n * 从消息内容字符串中解析出 `EraData` 对象。这是一个只读操作。\n * @param {string | null | undefined} messageContent - 消息的内容字符串。\n * @returns {EraData | null} 解析成功则返回 `EraData` 对象，否则返回 null。\n */\nfunction parseEraData(messageContent) {\n    if (typeof messageContent !== 'string') {\n        return null;\n    }\n    const match = messageContent.match(_constants__WEBPACK_IMPORTED_MODULE_0__.ERA_DATA_REGEX);\n    if (!match || !match[1]) {\n        return null;\n    }\n    try {\n        // 由于 MK 块内部是自定义的 `{\"key\"=\"value\"}` 格式，不能使用 JSON.parse。\n        // 必须使用正则表达式进行宽松匹配来提取键值。\n        const customFormatBlock = match[1];\n        const keyMatch = customFormatBlock.match(/\"era-message-key\"\\s*=\\s*\"(.*?)\"/);\n        const typeMatch = customFormatBlock.match(/\"era-message-type\"\\s*=\\s*\"(.*?)\"/);\n        if (keyMatch?.[1] && typeMatch?.[1]) {\n            const eraData = {\n                'era-message-key': keyMatch[1],\n                'era-message-type': typeMatch[1],\n            };\n            log.debug('parseEraData', '成功解析 EraData', eraData);\n            return eraData;\n        }\n        log.debug('parseEraData', '未能在 EraData 块中找到完整的键值对', { customFormatBlock });\n        return null;\n    }\n    catch (e) {\n        log.warn('parseEraData', '解析 EraData 块时发生异常', e);\n        return null;\n    }\n}\n/**\n * **【判断消息类型】** 根据消息内容中的 `era-message-type` 元数据或 `role` 属性判断是否为用户消息。\n * 优先信任注入的元数据。\n * @param {TavernMessage} msg - 酒馆消息对象。\n * @returns {boolean} 如果是用户消息，则返回 true。\n */\nfunction isUserMessage(msg) {\n    const content = getMessageContent(msg);\n    const data = parseEraData(content);\n    if (data) {\n        return data['era-message-type'] === 'user';\n    }\n    // 回退到检查 role 属性\n    return msg?.role === 'user';\n}\n/**\n * 从后向前查找并返回最后一条 AI 消息。\n * @returns {TavernMessage | null} 找到的 AI 消息对象，如果找不到则返回 null。\n */\nfunction findLastAiMessage() {\n    const messages = getChatMessages('0-{{lastMessageId}}', { include_swipes: true });\n    if (!messages || messages.length === 0) {\n        log.debug('findLastAiMessage', '聊天记录为空, 未找到任何消息。');\n        return null;\n    }\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const msg = messages[i];\n        if (!isUserMessage(msg)) {\n            log.debug('findLastAiMessage', `找到最后一条 AI 消息, ID: ${msg.message_id}`);\n            return msg;\n        }\n    }\n    log.debug('findLastAiMessage', '未在聊天记录中找到任何 AI 消息。');\n    return null;\n}\n// ==================================================================\n// 消息写入\n// ==================================================================\n/**\n * **【通用】** 更新指定消息的内容。\n * 这个辅助函数封装了处理 `swipes` 和普通 `message` 的逻辑，提供一个统一的写入接口。\n * @param {any} message - 要更新的消息对象。\n * @param {string} newContent - 全新的消息内容。\n */\nasync function updateMessageContent(message, newContent) {\n    const oldContent = getMessageContent(message);\n    log.debug('updateMessageContent', '更新前的消息内容:', oldContent);\n    log.debug('updateMessageContent', '更新后的消息内容:', newContent);\n    const updatePayload = {\n        message_id: message.message_id,\n    };\n    if (Array.isArray(message.swipes)) {\n        const sid = Number(message.swipe_id ?? 0);\n        const newSwipes = [...message.swipes];\n        newSwipes[sid] = newContent;\n        updatePayload.swipes = newSwipes;\n    }\n    else {\n        updatePayload.message = newContent;\n    }\n    await setChatMessages([updatePayload], { refresh: 'none' });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ERA变量框架/utils/message.ts\n\n}");
  },
  "./src/ERA变量框架/utils/string.ts": 
  /*!*************************************!*\
  !*** ./src/ERA变量框架/utils/string.ts ***!
  \*************************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractBlocks: () => (/* binding */ extractBlocks),\n/* harmony export */   rnd: () => (/* binding */ rnd),\n/* harmony export */   stripCodeFence: () => (/* binding */ stripCodeFence)\n/* harmony export */ });\n/**\n * @file ERA 变量框架 - 字符串处理模块\n */\n\n/**\n * 生成一个指定长度的随机字符串，用作唯一标识符。\n * 基于 `Math.random()`，在同一毫秒内也能保证极高的唯一性。\n * @returns {string} 一个随机的、由数字和小写字母组成的字符串。\n */\nfunction rnd() {\n    return Math.random().toString(36).slice(2, 8);\n}\n/**\n * 从文本中提取所有被特定 XML 风格标签包裹的内容块。\n * 使用非贪婪模式的正则表达式，但不处理嵌套标签。\n * @param {string} text - 包含标签的原始文本。\n * @param {string} tag - 要提取的标签名称（例如 'VariableEdit'）。\n * @returns {string[]} 包含所有提取并清理后（去除代码围栏和首尾空格）的内容块的数组。\n */\nfunction extractBlocks(text, tag) {\n    const blocks = [];\n    // 正则表达式: /<tag>([\\s\\S]*?)<\\/tag>/g\n    // - <${tag}>: 匹配开标签。\n    // - ([\\s\\S]*?): 非贪婪地捕获开闭标签之间的所有字符（包括换行符）。\n    // - <\\/${tag}>: 匹配闭标签。\n    // - g: 全局匹配，以找到所有匹配项。\n    const re = new RegExp(`<${tag}>([\\\\s\\\\S]*?)<\\\\/${tag}>`, 'g');\n    let m;\n    while ((m = re.exec(text))) {\n        const rawBody = (m[1] || '').trim();\n        // 在存入前，先剥离AI可能生成的多余代码围栏。\n        const body = stripCodeFence(rawBody);\n        if (body)\n            blocks.push(body);\n    }\n    return blocks;\n}\n/**\n * 从字符串中移除 AI 生成的 Markdown 代码块围栏（如 ```json ... ```）。\n * @param {string} s - 待处理的字符串。\n * @returns {string} 移除围栏并修剪首尾空格后的字符串。\n */\nfunction stripCodeFence(s) {\n    if (!s)\n        return s;\n    let t = String(s).trim();\n    // 移除起始围栏，例如 ```json, ```, ~~~\n    t = t.replace(/^\\s*(?:```|~~~)\\[a-zA-Z0-9_-\\]*\\s*\\r?\\n/, '');\n    // 移除结束围栏\n    t = t.replace(/\\r?\\n(?:```|~~~)\\s*$/, '');\n    return t.trim();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvRVJB5Y+Y6YeP5qGG5p62L3V0aWxzL3N0cmluZy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7R0FFRztBQUVVO0FBRWI7Ozs7R0FJRztBQUNJLFNBQVMsR0FBRztJQUNqQixPQUFPLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUNoRCxDQUFDO0FBRUQ7Ozs7OztHQU1HO0FBQ0ksU0FBUyxhQUFhLENBQUMsSUFBWSxFQUFFLEdBQVc7SUFDckQsTUFBTSxNQUFNLEdBQWEsRUFBRSxDQUFDO0lBQzVCLG1DQUFtQztJQUNuQyxxQkFBcUI7SUFDckIsMENBQTBDO0lBQzFDLHVCQUF1QjtJQUN2QixzQkFBc0I7SUFDdEIsTUFBTSxFQUFFLEdBQUcsSUFBSSxNQUFNLENBQUMsSUFBSSxHQUFHLG9CQUFvQixHQUFHLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUM5RCxJQUFJLENBQUMsQ0FBQztJQUNOLE9BQU8sQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDM0IsTUFBTSxPQUFPLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDcEMseUJBQXlCO1FBQ3pCLE1BQU0sSUFBSSxHQUFHLGNBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNyQyxJQUFJLElBQUk7WUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFDRCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDO0FBRUQ7Ozs7R0FJRztBQUNJLFNBQVMsY0FBYyxDQUFDLENBQVM7SUFDdEMsSUFBSSxDQUFDLENBQUM7UUFBRSxPQUFPLENBQUMsQ0FBQztJQUNqQixJQUFJLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDekIsOEJBQThCO0lBQzlCLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLHlDQUF5QyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQzdELFNBQVM7SUFDVCxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxzQkFBc0IsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUMxQyxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUNsQixDQUFDIiwic291cmNlcyI6WyJzcmM6Ly90YXZlcm5faGVscGVyX3RlbXBsYXRlL3NyYy9FUkHlj5jph4/moYbmnrYvdXRpbHMvc3RyaW5nLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGUgRVJBIOWPmOmHj+ahhuaetiAtIOWtl+espuS4suWkhOeQhuaooeWdl1xuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiDnlJ/miJDkuIDkuKrmjIflrprplb/luqbnmoTpmo/mnLrlrZfnrKbkuLLvvIznlKjkvZzllK/kuIDmoIfor4bnrKbjgIJcbiAqIOWfuuS6jiBgTWF0aC5yYW5kb20oKWDvvIzlnKjlkIzkuIDmr6vnp5LlhoXkuZ/og73kv53or4HmnoHpq5jnmoTllK/kuIDmgKfjgIJcbiAqIEByZXR1cm5zIHtzdHJpbmd9IOS4gOS4qumaj+acuueahOOAgeeUseaVsOWtl+WSjOWwj+WGmeWtl+avjee7hOaIkOeahOWtl+espuS4suOAglxuICovXG5leHBvcnQgZnVuY3Rpb24gcm5kKCk6IHN0cmluZyB7XG4gIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyLCA4KTtcbn1cblxuLyoqXG4gKiDku47mlofmnKzkuK3mj5Dlj5bmiYDmnInooqvnibnlrpogWE1MIOmjjuagvOagh+etvuWMheijueeahOWGheWuueWdl+OAglxuICog5L2/55So6Z2e6LSq5amq5qih5byP55qE5q2j5YiZ6KGo6L6+5byP77yM5L2G5LiN5aSE55CG5bWM5aWX5qCH562+44CCXG4gKiBAcGFyYW0ge3N0cmluZ30gdGV4dCAtIOWMheWQq+agh+etvueahOWOn+Wni+aWh+acrOOAglxuICogQHBhcmFtIHtzdHJpbmd9IHRhZyAtIOimgeaPkOWPlueahOagh+etvuWQjeensO+8iOS+i+WmgiAnVmFyaWFibGVFZGl0J++8ieOAglxuICogQHJldHVybnMge3N0cmluZ1tdfSDljIXlkKvmiYDmnInmj5Dlj5blubbmuIXnkIblkI7vvIjljrvpmaTku6PnoIHlm7TmoI/lkozpppblsL7nqbrmoLzvvInnmoTlhoXlrrnlnZfnmoTmlbDnu4TjgIJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGV4dHJhY3RCbG9ja3ModGV4dDogc3RyaW5nLCB0YWc6IHN0cmluZyk6IHN0cmluZ1tdIHtcbiAgY29uc3QgYmxvY2tzOiBzdHJpbmdbXSA9IFtdO1xuICAvLyDmraPliJnooajovr7lvI86IC88dGFnPihbXFxzXFxTXSo/KTxcXC90YWc+L2dcbiAgLy8gLSA8JHt0YWd9Pjog5Yy56YWN5byA5qCH562+44CCXG4gIC8vIC0gKFtcXHNcXFNdKj8pOiDpnZ7otKrlqarlnLDmjZXojrflvIDpl63moIfnrb7kuYvpl7TnmoTmiYDmnInlrZfnrKbvvIjljIXmi6zmjaLooYznrKbvvInjgIJcbiAgLy8gLSA8XFwvJHt0YWd9Pjog5Yy56YWN6Zet5qCH562+44CCXG4gIC8vIC0gZzog5YWo5bGA5Yy56YWN77yM5Lul5om+5Yiw5omA5pyJ5Yy56YWN6aG544CCXG4gIGNvbnN0IHJlID0gbmV3IFJlZ0V4cChgPCR7dGFnfT4oW1xcXFxzXFxcXFNdKj8pPFxcXFwvJHt0YWd9PmAsICdnJyk7XG4gIGxldCBtO1xuICB3aGlsZSAoKG0gPSByZS5leGVjKHRleHQpKSkge1xuICAgIGNvbnN0IHJhd0JvZHkgPSAobVsxXSB8fCAnJykudHJpbSgpO1xuICAgIC8vIOWcqOWtmOWFpeWJje+8jOWFiOWJpeemu0FJ5Y+v6IO955Sf5oiQ55qE5aSa5L2Z5Luj56CB5Zu05qCP44CCXG4gICAgY29uc3QgYm9keSA9IHN0cmlwQ29kZUZlbmNlKHJhd0JvZHkpO1xuICAgIGlmIChib2R5KSBibG9ja3MucHVzaChib2R5KTtcbiAgfVxuICByZXR1cm4gYmxvY2tzO1xufVxuXG4vKipcbiAqIOS7juWtl+espuS4suS4reenu+mZpCBBSSDnlJ/miJDnmoQgTWFya2Rvd24g5Luj56CB5Z2X5Zu05qCP77yI5aaCIGBgYGpzb24gLi4uIGBgYO+8ieOAglxuICogQHBhcmFtIHtzdHJpbmd9IHMgLSDlvoXlpITnkIbnmoTlrZfnrKbkuLLjgIJcbiAqIEByZXR1cm5zIHtzdHJpbmd9IOenu+mZpOWbtOagj+W5tuS/ruWJqummluWwvuepuuagvOWQjueahOWtl+espuS4suOAglxuICovXG5leHBvcnQgZnVuY3Rpb24gc3RyaXBDb2RlRmVuY2Uoczogc3RyaW5nKTogc3RyaW5nIHtcbiAgaWYgKCFzKSByZXR1cm4gcztcbiAgbGV0IHQgPSBTdHJpbmcocykudHJpbSgpO1xuICAvLyDnp7vpmaTotbflp4vlm7TmoI/vvIzkvovlpoIgYGBganNvbiwgYGBgLCB+fn5cbiAgdCA9IHQucmVwbGFjZSgvXlxccyooPzpgYGB8fn5+KVxcW2EtekEtWjAtOV8tXFxdKlxccypcXHI/XFxuLywgJycpO1xuICAvLyDnp7vpmaTnu5PmnZ/lm7TmoI9cbiAgdCA9IHQucmVwbGFjZSgvXFxyP1xcbig/OmBgYHx+fn4pXFxzKiQvLCAnJyk7XG4gIHJldHVybiB0LnRyaW0oKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/ERA变量框架/utils/string.ts\n\n}");
  },
  "./src/ERA变量框架/utils/text.ts": 
  /*!***********************************!*\
  !*** ./src/ERA变量框架/utils/text.ts ***!
  \***********************************/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deepParseCharacterMacros: () => (/* binding */ deepParseCharacterMacros),\n/* harmony export */   parseCharacterMacros: () => (/* binding */ parseCharacterMacros)\n/* harmony export */ });\n/**\n * 解析字符串中的角色和用户宏, 并将其替换为对应的名称。\n * 这是提供给其他模块调用的公共接口。\n * @param text - 包含宏的输入字符串。\n * @returns - 替换宏后的字符串。\n */\nfunction parseCharacterMacros(text) {\n    // 如果文本中不包含宏特征字符串, 直接返回以优化性能\n    if (!text.includes('{{')) {\n        return text;\n    }\n    let result = text;\n    // 使用全局不区分大小写的替换\n    if (result.includes('{{user}}')) {\n        result = result.replace(/{{user}}/gi, SillyTavern.name1);\n    }\n    if (result.includes('{{char}}')) {\n        result = result.replace(/{{char}}/gi, SillyTavern.name2);\n    }\n    return result;\n}\n/**\n * 深度遍历数据, 对所有字符串类型的值应用 parseCharacterMacros 宏替换。\n * @param data - 任何类型的数据。\n * @returns - 经过宏替换后的数据。\n */\nconst deepParseCharacterMacros = (data) => {\n    if (typeof data === 'string') {\n        return parseCharacterMacros(data);\n    }\n    if (Array.isArray(data)) {\n        return data.map(item => deepParseCharacterMacros(item));\n    }\n    if (typeof data === 'object' && data !== null) {\n        return Object.entries(data).reduce((acc, [key, value]) => {\n            acc[key] = deepParseCharacterMacros(value);\n            return acc;\n        }, {});\n    }\n    return data;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvRVJB5Y+Y6YeP5qGG5p62L3V0aWxzL3RleHQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7R0FLRztBQUNJLFNBQVMsb0JBQW9CLENBQUMsSUFBWTtJQUMvQyw0QkFBNEI7SUFDNUIsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQztRQUN6QixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCxJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUM7SUFDbEIsZ0JBQWdCO0lBQ2hCLElBQUksTUFBTSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDO1FBQ2hDLE1BQU0sR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLFlBQVksRUFBRSxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0QsQ0FBQztJQUNELElBQUksTUFBTSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDO1FBQ2hDLE1BQU0sR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLFlBQVksRUFBRSxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0QsQ0FBQztJQUNELE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUM7QUFFRDs7OztHQUlHO0FBQ0ksTUFBTSx3QkFBd0IsR0FBRyxDQUFDLElBQVMsRUFBTyxFQUFFO0lBQ3pELElBQUksT0FBTyxJQUFJLEtBQUssUUFBUSxFQUFFLENBQUM7UUFDN0IsT0FBTyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBQ0QsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUM7UUFDeEIsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsd0JBQXdCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUMxRCxDQUFDO0lBQ0QsSUFBSSxPQUFPLElBQUksS0FBSyxRQUFRLElBQUksSUFBSSxLQUFLLElBQUksRUFBRSxDQUFDO1FBQzlDLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQ2hDLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxFQUFFLEVBQUU7WUFDcEIsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLHdCQUF3QixDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQzNDLE9BQU8sR0FBRyxDQUFDO1FBQ2IsQ0FBQyxFQUNELEVBQXlCLENBQzFCLENBQUM7SUFDSixDQUFDO0lBQ0QsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDLENBQUMiLCJzb3VyY2VzIjpbInNyYzovL3RhdmVybl9oZWxwZXJfdGVtcGxhdGUvc3JjL0VSQeWPmOmHj+ahhuaeti91dGlscy90ZXh0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICog6Kej5p6Q5a2X56ym5Liy5Lit55qE6KeS6Imy5ZKM55So5oi35a6PLCDlubblsIblhbbmm7/mjaLkuLrlr7nlupTnmoTlkI3np7DjgIJcbiAqIOi/meaYr+aPkOS+m+e7meWFtuS7luaooeWdl+iwg+eUqOeahOWFrOWFseaOpeWPo+OAglxuICogQHBhcmFtIHRleHQgLSDljIXlkKvlro/nmoTovpPlhaXlrZfnrKbkuLLjgIJcbiAqIEByZXR1cm5zIC0g5pu/5o2i5a6P5ZCO55qE5a2X56ym5Liy44CCXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUNoYXJhY3Rlck1hY3Jvcyh0ZXh0OiBzdHJpbmcpOiBzdHJpbmcge1xuICAvLyDlpoLmnpzmlofmnKzkuK3kuI3ljIXlkKvlro/nibnlvoHlrZfnrKbkuLIsIOebtOaOpei/lOWbnuS7peS8mOWMluaAp+iDvVxuICBpZiAoIXRleHQuaW5jbHVkZXMoJ3t7JykpIHtcbiAgICByZXR1cm4gdGV4dDtcbiAgfVxuXG4gIGxldCByZXN1bHQgPSB0ZXh0O1xuICAvLyDkvb/nlKjlhajlsYDkuI3ljLrliIblpKflsI/lhpnnmoTmm7/mjaJcbiAgaWYgKHJlc3VsdC5pbmNsdWRlcygne3t1c2VyfX0nKSkge1xuICAgIHJlc3VsdCA9IHJlc3VsdC5yZXBsYWNlKC97e3VzZXJ9fS9naSwgU2lsbHlUYXZlcm4ubmFtZTEpO1xuICB9XG4gIGlmIChyZXN1bHQuaW5jbHVkZXMoJ3t7Y2hhcn19JykpIHtcbiAgICByZXN1bHQgPSByZXN1bHQucmVwbGFjZSgve3tjaGFyfX0vZ2ksIFNpbGx5VGF2ZXJuLm5hbWUyKTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIOa3seW6pumBjeWOhuaVsOaNriwg5a+55omA5pyJ5a2X56ym5Liy57G75Z6L55qE5YC85bqU55SoIHBhcnNlQ2hhcmFjdGVyTWFjcm9zIOWuj+abv+aNouOAglxuICogQHBhcmFtIGRhdGEgLSDku7vkvZXnsbvlnovnmoTmlbDmja7jgIJcbiAqIEByZXR1cm5zIC0g57uP6L+H5a6P5pu/5o2i5ZCO55qE5pWw5o2u44CCXG4gKi9cbmV4cG9ydCBjb25zdCBkZWVwUGFyc2VDaGFyYWN0ZXJNYWNyb3MgPSAoZGF0YTogYW55KTogYW55ID0+IHtcbiAgaWYgKHR5cGVvZiBkYXRhID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBwYXJzZUNoYXJhY3Rlck1hY3JvcyhkYXRhKTtcbiAgfVxuICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSkge1xuICAgIHJldHVybiBkYXRhLm1hcChpdGVtID0+IGRlZXBQYXJzZUNoYXJhY3Rlck1hY3JvcyhpdGVtKSk7XG4gIH1cbiAgaWYgKHR5cGVvZiBkYXRhID09PSAnb2JqZWN0JyAmJiBkYXRhICE9PSBudWxsKSB7XG4gICAgcmV0dXJuIE9iamVjdC5lbnRyaWVzKGRhdGEpLnJlZHVjZShcbiAgICAgIChhY2MsIFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgICBhY2Nba2V5XSA9IGRlZXBQYXJzZUNoYXJhY3Rlck1hY3Jvcyh2YWx1ZSk7XG4gICAgICAgIHJldHVybiBhY2M7XG4gICAgICB9LFxuICAgICAge30gYXMgUmVjb3JkPHN0cmluZywgYW55PixcbiAgICApO1xuICB9XG4gIHJldHVybiBkYXRhO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/ERA变量框架/utils/text.ts\n\n}");
  },
  jquery: 
  /*!********************!*\
  !*** external "$" ***!
  \********************/ module => {
    module.exports = $;
  },
  lodash: 
  /*!********************!*\
  !*** external "_" ***!
  \********************/ module => {
    module.exports = _;
  }
};

var __webpack_module_cache__ = {};

function __webpack_require__(moduleId) {
  var cachedModule = __webpack_module_cache__[moduleId];
  if (cachedModule !== undefined) {
    return cachedModule.exports;
  }
  var module = __webpack_module_cache__[moduleId] = {
    exports: {}
  };
  __webpack_modules__[moduleId](module, module.exports, __webpack_require__);
  return module.exports;
}

(() => {
  __webpack_require__.n = module => {
    var getter = module && module.__esModule ? () => module["default"] : () => module;
    __webpack_require__.d(getter, {
      a: getter
    });
    return getter;
  };
})();

(() => {
  __webpack_require__.d = (exports, definition) => {
    for (var key in definition) {
      if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: definition[key]
        });
      }
    }
  };
})();

(() => {
  __webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);
})();

(() => {
  __webpack_require__.r = exports => {
    if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
      Object.defineProperty(exports, Symbol.toStringTag, {
        value: "Module"
      });
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
  };
})();

var __webpack_exports__ = __webpack_require__("./src/ERA变量框架/index.ts");