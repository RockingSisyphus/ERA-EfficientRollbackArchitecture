import{createPinia as e}from'https://testingcf.jsdelivr.net/npm/pinia/+esm';var n={4:(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});var a=t(790),r=t.n(a),o=t(54),s=t.n(o)()(r());s.push([e.id,'.about-era-card[data-v-9b1026a6]{width:100%;padding:12px;background:var(--actions-bg-glass);border:1px solid var(--border-strong);border-radius:16px;backdrop-filter:blur(10px);box-shadow:var(--actions-shadow-card),var(--shadow-inset);display:flex;flex-direction:column;gap:10px;transition:background 0.3s ease,border-color 0.3s ease}.card-title[data-v-9b1026a6]{margin:0 0 4px;font-size:14px;font-weight:800;letter-spacing:0.3px;color:var(--text-title);transition:color 0.3s ease}.info-list[data-v-9b1026a6]{font-size:13px;color:var(--text-normal)}.info-list ul[data-v-9b1026a6]{list-style:none;padding:0;margin:0;display:flex;flex-direction:column;gap:8px}.info-list li[data-v-9b1026a6]{display:flex;justify-content:space-between}.info-list a[data-v-9b1026a6]{color:var(--text-subtitle);text-decoration:none;font-weight:600;transition:color 0.3s ease}.info-list a[data-v-9b1026a6]:hover{color:var(--text-title);text-decoration:underline}\n','',{version:3,sources:['webpack://./src/ERA变量框架/ui/components/RightRailContent/AboutEra.vue'],names:[],mappings:'AAqCA,iCACE,UAAW,CACX,YAAa,CACb,kCAAmC,CACnC,qCAAsC,CACtC,kBAAmB,CACnB,0BAA2B,CAC3B,yDAA2D,CAC3D,YAAa,CACb,qBAAsB,CACtB,QAAS,CACT,sDAGF,CAEA,6BACE,cAAe,CACf,cAAe,CACf,eAAgB,CAChB,oBAAqB,CACrB,uBAAwB,CACxB,0BACF,CAEA,4BACE,cAAe,CACf,wBACF,CAEA,+BACE,eAAgB,CAChB,SAAU,CACV,QAAS,CACT,YAAa,CACb,qBAAsB,CACtB,OACF,CAEA,+BACE,YAAa,CACb,6BACF,CAEA,8BACE,0BAA2B,CAC3B,oBAAqB,CACrB,eAAgB,CAChB,0BACF,CAEA,oCACE,uBAAwB,CACxB,yBACF',sourcesContent:['<template>\n  <section class="about-era-card" role="complementary" aria-label="关于 ERA">\n    <h4 class="card-title">关于 ERA</h4>\n    <div class="info-list">\n      <ul>\n        <li>\n          <strong>ERA 项目地址:</strong>\n          <a\n            href="https://github.com/RockingSisyphus/ERA-EfficientRollbackArchitecture/tree/master"\n            target="_blank"\n            rel="noopener noreferrer"\n          >\n            GitHub\n          </a>\n        </li>\n        <li>\n          <strong>ERA 介绍帖:</strong>\n          <a\n            href="https://discord.com/channels/1134557553011998840/1423319849400270928"\n            target="_blank"\n            rel="noopener noreferrer"\n          >\n            Discord\n          </a>\n        </li>\n        <li><strong>作者:</strong> 世界的山田</li>\n        <li><strong>ERA 框架交流群:</strong> 1006127516</li>\n      </ul>\n    </div>\n  </section>\n</template>\n\n<script setup lang="ts">\n// This component is purely informational.\n<\/script>\n\n<style scoped>\n.about-era-card {\n  width: 100%;\n  padding: 12px;\n  background: var(--actions-bg-glass);\n  border: 1px solid var(--border-strong);\n  border-radius: 16px;\n  backdrop-filter: blur(10px);\n  box-shadow: var(--actions-shadow-card), var(--shadow-inset);\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  transition:\n    background 0.3s ease,\n    border-color 0.3s ease;\n}\n\n.card-title {\n  margin: 0 0 4px;\n  font-size: 14px;\n  font-weight: 800;\n  letter-spacing: 0.3px;\n  color: var(--text-title);\n  transition: color 0.3s ease;\n}\n\n.info-list {\n  font-size: 13px;\n  color: var(--text-normal);\n}\n\n.info-list ul {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.info-list li {\n  display: flex;\n  justify-content: space-between;\n}\n\n.info-list a {\n  color: var(--text-subtitle);\n  text-decoration: none;\n  font-weight: 600;\n  transition: color 0.3s ease;\n}\n\n.info-list a:hover {\n  color: var(--text-title);\n  text-decoration: underline;\n}\n</style>\n'],sourceRoot:''}]);const i=s},6:(e,n,t)=>{var a=t(432);a.__esModule&&(a=a.default),'string'==typeof a&&(a=[[e.id,a,'']]),a.locals&&(e.exports=a.locals);(0,t(424).A)('a834f100',a,!1,{ssrId:!0})},13:(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});var a=t(790),r=t.n(a),o=t(54),s=t.n(o)()(r());s.push([e.id,'.floating-ball[data-v-39e74a4e]{--size:50px;--hue:var(--ball-hue,212);--sat:var(--ball-sat,100%);--lum:var(--ball-lum,52%);--surface:hsl(var(--hue) var(--sat) var(--lum));--surface-2:hsl(var(--hue) 95% 64%);--ring:hsl(calc(var(--hue) + 20) 95% 65%);--shadow:var(--ball-shadow-color,rgba(0,123,255,0.36));--glow:var(--ball-glow-color,rgba(102,200,255,0.55));--inner-shadow:var(--ball-inner-shadow-color,rgba(0,0,0,0.22));--specular:var(--ball-specular-color,rgba(255,255,255,0.75));--glass:var(--ball-glass-color,rgba(255,255,255,0.18));width:var(--size);height:var(--size);border-radius:50%;position:relative;display:grid;place-items:center;cursor:pointer;-webkit-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;background:radial-gradient(120% 120% at 30% 28%,rgba(255,255,255,0.85) 0%,rgba(255,255,255,0.22) 18%,rgba(255,255,255,0) 36%),radial-gradient(120% 120% at 70% 72%,rgba(0,0,0,0.18) 0%,rgba(0,0,0,0) 38%),conic-gradient(from 210deg at 50% 50%,var(--surface),var(--surface-2),var(--surface));box-shadow:inset 0 2px 6px var(--inner-shadow),0 2px 4px rgba(0,0,0,0.08),0 10px 22px var(--shadow);transition:transform 0.28s ease,box-shadow 0.28s ease,filter 0.28s ease;will-change:transform,box-shadow,filter;animation:ball-bob-39e74a4e 3.2s ease-in-out infinite}.floating-ball[data-v-39e74a4e]::after{content:\'\';position:absolute;inset:-8px;border-radius:50%;background:conic-gradient(from 0deg,var(--ring),transparent 30%,transparent 70%,var(--ring));filter:blur(6px);opacity:0.55;pointer-events:none;-webkit-mask:radial-gradient(farthest-side,transparent calc(100% - 12px),#000 0);mask:radial-gradient(farthest-side,transparent calc(100% - 12px),#000 0);animation:ring-spin-39e74a4e 12s linear infinite}.floating-ball[data-v-39e74a4e]::before{content:\'\';position:absolute;inset:2px;border-radius:50%;background:radial-gradient(120% 80% at 26% 24%,var(--specular) 0%,rgba(255,255,255,0.2) 26%,rgba(255,255,255,0) 46%),linear-gradient(160deg,var(--glass) 0%,rgba(255,255,255,0) 50%);mix-blend-mode:screen;pointer-events:none;transition:opacity 0.28s ease,transform 0.28s ease}.floating-ball[data-v-39e74a4e]:hover{transform:translateY(-2px) scale(1.04);box-shadow:inset 0 2px 8px rgba(0,0,0,0.22),0 4px 10px rgba(0,0,0,0.12),0 16px 36px rgba(0,123,255,0.45);filter:saturate(1.08)}.floating-ball[data-v-39e74a4e]:hover::before{opacity:0.95;animation:shimmer-39e74a4e 1.2s ease-out}.floating-ball[data-v-39e74a4e]:active{transform:translateY(0) scale(0.98);box-shadow:inset 0 2px 10px rgba(0,0,0,0.28),0 2px 6px rgba(0,0,0,0.12),0 10px 22px rgba(0,123,255,0.35)}.floating-ball[data-v-39e74a4e]:focus-visible{outline:2px solid var(--ball-focus-outline,rgba(102,200,255,0.85));outline-offset:2px}@media (prefers-reduced-motion:reduce){.floating-ball[data-v-39e74a4e]{animation:none}.floating-ball[data-v-39e74a4e]::after{animation:none}}@keyframes ball-bob-39e74a4e{0%,100%{transform:translateY(0)}50%{transform:translateY(-2px)}}@keyframes ring-spin-39e74a4e{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes shimmer-39e74a4e{0%{transform:translateY(-1px) scale(0.98);opacity:0.6}50%{transform:translateY(-2px) scale(1.02);opacity:1}100%{transform:translateY(-1px) scale(0.99);opacity:0.85}}.floating-ball[data-v-39e74a4e]{--logo-scale:0.38}.era-logo[data-v-39e74a4e]{font-weight:800;font-size:calc(var(--size) * var(--logo-scale));letter-spacing:0.02em;line-height:1;transform:translateY(-1px);white-space:nowrap;-webkit-user-select:none;user-select:none;pointer-events:none;z-index:1;background:var(--ball-logo-bg,linear-gradient(180deg,rgba(255,255,255,0.96) 0%,rgba(255,255,255,0.55) 45%,rgba(220,240,255,0.4) 65%,rgba(120,195,255,0.55) 100%),linear-gradient(180deg,rgba(0,0,0,0.38),rgba(0,0,0,0) 60%));-webkit-background-clip:text;background-clip:text;color:transparent;text-shadow:0 1px 0 var(--ball-logo-shadow-top,rgba(255,255,255,0.75)),0 2px 4px var(--ball-logo-shadow-near,rgba(0,0,0,0.25)),0 8px 18px var(--ball-logo-shadow-far,rgba(0,123,255,0.35));filter:var(--ball-logo-filter-glow,drop-shadow(0 0 2px rgba(102,200,255,0.25)));animation:era-sheen-39e74a4e 4s ease-in-out infinite;transition:text-shadow 0.3s ease,filter 0.3s ease}.floating-ball:hover .era-logo[data-v-39e74a4e]{text-shadow:0 1px 0 var(--ball-logo-shadow-top,rgba(255,255,255,0.85)),0 3px 8px var(--ball-logo-shadow-near,rgba(0,0,0,0.28)),0 10px 26px var(--ball-logo-shadow-far,rgba(0,123,255,0.55));filter:var(--ball-logo-filter-glow,drop-shadow(0 0 3px rgba(102,200,255,0.38)))}@keyframes era-sheen-39e74a4e{0%,100%{background-position:0% 0%,0% 0%}50%{background-position:0% 40%,0% 0%}}\n','',{version:3,sources:['webpack://./src/ERA变量框架/ui/components/FloatingBall.vue'],names:[],mappings:'AAuBA,gCACE,WAAY,CACZ,yBAA2B,CAC3B,0BAA4B,CAC5B,yBAA2B,CAC3B,+CAAgD,CAChD,mCAAoC,CACpC,yCAA0C,CAC1C,sDAA2D,CAC3D,oDAAyD,CACzD,8DAAmE,CACnE,4DAAiE,CACjE,sDAA2D,CAC3D,iBAAkB,CAClB,kBAAmB,CACnB,iBAAkB,CAClB,iBAAkB,CAClB,YAAa,CACb,kBAAmB,CACnB,cAAe,CACf,wBAAiB,CAAjB,gBAAiB,CACjB,uCAAwC,CACxC,+RAQ0G,CAC1G,mGAG0C,CAC1C,uEAGmB,CACnB,uCAA0C,CAC1C,qDACF,CAGA,uCACE,UAAW,CACX,iBAAkB,CAClB,UAAW,CACX,iBAAkB,CAClB,4FAMC,CACD,gBAAiB,CACjB,YAAa,CACb,mBAAoB,CACpB,gFAA2E,CAA3E,wEAA2E,CAC3E,gDACF,CAGA,wCACE,UAAW,CACX,iBAAkB,CAClB,SAAU,CACV,iBAAkB,CAClB,oLAE+E,CAC/E,qBAAsB,CACtB,mBAAoB,CACpB,kDAGF,CAGA,sCACE,sCAAuC,CACvC,wGAGgD,CAChD,qBACF,CAGA,8CACE,YAAa,CACb,wCACF,CAGA,uCACE,mCAAoC,CACpC,wGAIF,CAGA,8CACE,kEAAuE,CACvE,kBACF,CAGA,uCACE,gCACE,cACF,CACA,uCACE,cACF,CACF,CAGA,6BACE,QAEE,uBACF,CACA,IACE,0BACF,CACF,CAGA,8BACE,GACE,sBACF,CACA,KACE,wBACF,CACF,CAGA,4BACE,GACE,sCAAuC,CACvC,WACF,CACA,IACE,sCAAuC,CACvC,SACF,CACA,KACE,sCAAuC,CACvC,YACF,CACF,CAGA,gCACE,iBACF,CAEA,2BACE,eAAgB,CAChB,+CAAgD,CAChD,qBAAsB,CACtB,aAAc,CACd,0BAA2B,CAC3B,kBAAmB,CACnB,wBAAiB,CAAjB,gBAAiB,CACjB,mBAAoB,CACpB,SAAU,CAGV,4NAUC,CACD,4BAA6B,CAC7B,oBAAqB,CACrB,iBAAkB,CAClB,0LAG2E,CAC3E,+EAAoF,CACpF,oDAA4C,CAC5C,iDAGF,CAEA,gDACE,2LAGkE,CAClE,+EACF,CAGA,8BACE,QAEE,+BAGF,CACA,IACE,gCAGF,CACF',sourcesContent:['<template>\n  <div class="floating-ball" @click="$emit(\'click\')">\n    <span class="era-logo" aria-hidden="true">ERA</span>\n    \x3c!-- 仅显示用；不拦截事件 --\x3e\n  </div>\n</template>\n\n<script setup lang="ts">\nimport { onMounted } from \'vue\';\nimport { Logger } from \'../../utils/log\';\n\nconst logger = new Logger();\ndefineEmits([\'click\']);\n\nonMounted(() => {\n  logger.log(\'onMounted\', \'FloatingBall.vue 组件已挂载\');\n});\n<\/script>\n\n<style scoped>\n/* =========================\n   可调外观变量（局部作用域）\n   ========================= */\n.floating-ball {\n  --size: 50px; /* 直径：保持默认 50px，与原始一致 */\n  --hue: var(--ball-hue, 212); /* 主色相：212≈#007bff，方便全局协调色相 */\n  --sat: var(--ball-sat, 100%); /* 饱和度：更鲜亮 */\n  --lum: var(--ball-lum, 52%); /* 明度：主色的明度 */\n  --surface: hsl(var(--hue) var(--sat) var(--lum)); /* 主表面色 */\n  --surface-2: hsl(var(--hue) 95% 64%); /* 渐变第二色，略亮 */\n  --ring: hsl(calc(var(--hue) + 20) 95% 65%); /* 外环的点缀色，偏青一点 */\n  --shadow: var(--ball-shadow-color, rgba(0, 123, 255, 0.36)); /* 阴影颜色（与主色相近） */\n  --glow: var(--ball-glow-color, rgba(102, 200, 255, 0.55)); /* 外发光颜色 */\n  --inner-shadow: var(--ball-inner-shadow-color, rgba(0, 0, 0, 0.22)); /* 内阴影增强体积感 */\n  --specular: var(--ball-specular-color, rgba(255, 255, 255, 0.75)); /* 高光 */\n  --glass: var(--ball-glass-color, rgba(255, 255, 255, 0.18)); /* 玻璃质感覆盖层 */\n  width: var(--size); /* 宽度设为可变量 */\n  height: var(--size); /* 高度设为可变量 */\n  border-radius: 50%; /* 圆形 */\n  position: relative; /* 作为伪元素定位参照 */\n  display: grid; /* 用 grid 实现精确居中 */\n  place-items: center; /* 居中对齐 */\n  cursor: pointer; /* 手型光标（仅视觉，不改逻辑） */\n  user-select: none; /* 防止误选中文本 */\n  -webkit-tap-highlight-color: transparent; /* 移动端点击高亮去除 */\n  background:\n    radial-gradient(\n      120% 120% at 30% 28%,\n      rgba(255, 255, 255, 0.85) 0%,\n      rgba(255, 255, 255, 0.22) 18%,\n      rgba(255, 255, 255, 0) 36%\n    ),\n    /* 玻璃高光 */ radial-gradient(120% 120% at 70% 72%, rgba(0, 0, 0, 0.18) 0%, rgba(0, 0, 0, 0) 38%),\n    /* 微内阴影，增加体积 */ conic-gradient(from 210deg at 50% 50%, var(--surface), var(--surface-2), var(--surface)); /* 主表面渐变：柔和流动感 */\n  box-shadow:\n    inset 0 2px 6px var(--inner-shadow),\n    /* 内阴影：球体边缘收束 */ 0 2px 4px rgba(0, 0, 0, 0.08),\n    /* 基础投影：贴地感 */ 0 10px 22px var(--shadow); /* 远投影：悬浮感 */\n  transition:\n    transform 0.28s ease,\n    box-shadow 0.28s ease,\n    filter 0.28s ease; /* 悬停时的平滑过渡 */\n  will-change: transform, box-shadow, filter; /* 提示浏览器优化 */\n  animation: ball-bob 3.2s ease-in-out infinite; /* 轻微上下浮动 */\n}\n\n/* 光晕外环（纯视觉层），不占点击区域 */\n.floating-ball::after {\n  content: \'\'; /* 生成外环层 */\n  position: absolute; /* 绝对定位贴合父元素 */\n  inset: -8px; /* 向外延展 8px，制造发光边缘 */\n  border-radius: 50%; /* 保持圆形 */\n  background: conic-gradient(\n    from 0deg,\n    var(--ring),\n    transparent 30%,\n    transparent 70%,\n    var(--ring)\n  ); /* 细腻的色环闪烁 */\n  filter: blur(6px); /* 模糊成柔和光晕 */\n  opacity: 0.55; /* 半透明，避免喧宾 */\n  pointer-events: none; /* 不拦截鼠标事件 */\n  mask: radial-gradient(farthest-side, transparent calc(100% - 12px), #000 0); /* 掏空中心形成环 */\n  animation: ring-spin 12s linear infinite; /* 慢速旋转，低侵扰 */\n}\n\n/* 玻璃高光层（更立体） */\n.floating-ball::before {\n  content: \'\'; /* 生成高光层 */\n  position: absolute; /* 绝对定位 */\n  inset: 2px; /* 缩进一点，保留边缘 */\n  border-radius: 50%; /* 圆形 */\n  background:\n    radial-gradient(120% 80% at 26% 24%, var(--specular) 0%, rgba(255, 255, 255, 0.2) 26%, rgba(255, 255, 255, 0) 46%),\n    /* 亮斑 */ linear-gradient(160deg, var(--glass) 0%, rgba(255, 255, 255, 0) 50%); /* 玻璃蒙层 */\n  mix-blend-mode: screen; /* 与底色叠加更自然 */\n  pointer-events: none; /* 不拦截事件 */\n  transition:\n    opacity 0.28s ease,\n    transform 0.28s ease; /* 悬停联动 */\n}\n\n/* 悬停态：轻微抬升+增强光影 */\n.floating-ball:hover {\n  transform: translateY(-2px) scale(1.04); /* 轻微升起并放大 */\n  box-shadow:\n    inset 0 2px 8px rgba(0, 0, 0, 0.22),\n    /* 内阴影略加强 */ 0 4px 10px rgba(0, 0, 0, 0.12),\n    /* 近影增强 */ 0 16px 36px rgba(0, 123, 255, 0.45); /* 远影更亮，呈现发光 */\n  filter: saturate(1.08); /* 提升饱和度一点点 */\n}\n\n/* 悬停时的微光扫过效果 */\n.floating-ball:hover::before {\n  opacity: 0.95; /* 高光更显著 */\n  animation: shimmer 1.2s ease-out; /* 一次性高光掠过 */\n}\n\n/* 按下态：略压低 */\n.floating-ball:active {\n  transform: translateY(0) scale(0.98); /* 回落一点并轻微压扁 */\n  box-shadow:\n    inset 0 2px 10px rgba(0, 0, 0, 0.28),\n    0 2px 6px rgba(0, 0, 0, 0.12),\n    0 10px 22px rgba(0, 123, 255, 0.35); /* 回到接近初始的阴影 */\n}\n\n/* 可达性：键盘聚焦时的可见描边（不改变布局） */\n.floating-ball:focus-visible {\n  outline: 2px solid var(--ball-focus-outline, rgba(102, 200, 255, 0.85)); /* 高亮描边 */\n  outline-offset: 2px; /* 外移 2px，避免遮挡球体 */\n}\n\n/* 减少动态偏好：关闭动画保持静态优雅 */\n@media (prefers-reduced-motion: reduce) {\n  .floating-ball {\n    animation: none;\n  } /* 去除上下浮动 */\n  .floating-ball::after {\n    animation: none;\n  } /* 停止外环旋转 */\n}\n\n/* 轻微上下浮动（循环） */\n@keyframes ball-bob {\n  0%,\n  100% {\n    transform: translateY(0);\n  } /* 起点/终点：原位 */\n  50% {\n    transform: translateY(-2px);\n  } /* 中点：上浮 2px */\n}\n\n/* 外环慢速旋转（不刺眼） */\n@keyframes ring-spin {\n  0% {\n    transform: rotate(0deg);\n  } /* 起点：0 度 */\n  100% {\n    transform: rotate(360deg);\n  } /* 终点：整周旋转 */\n}\n\n/* 悬停时的高光扫过 */\n@keyframes shimmer {\n  0% {\n    transform: translateY(-1px) scale(0.98);\n    opacity: 0.6;\n  } /* 初始：弱一点的高光 */\n  50% {\n    transform: translateY(-2px) scale(1.02);\n    opacity: 1;\n  } /* 中段：最亮最大 */\n  100% {\n    transform: translateY(-1px) scale(0.99);\n    opacity: 0.85;\n  } /* 结束：回落 */\n}\n\n/* ======= ERA 内标（仅视觉层） ======= */\n.floating-ball {\n  --logo-scale: 0.38;\n} /* 可调：字体占球直径比例 */\n\n.era-logo {\n  font-weight: 800; /* 粗体，增强刻感 */\n  font-size: calc(var(--size) * var(--logo-scale)); /* 跟随球大小缩放 */\n  letter-spacing: 0.02em; /* 轻微字距，避免糊 */\n  line-height: 1; /* 紧凑对齐 */\n  transform: translateY(-1px); /* 视觉微调居中 */\n  white-space: nowrap; /* 防止换行 */\n  user-select: none;\n  pointer-events: none; /* 不抢事件、不选中 */\n  z-index: 1; /* 位于背景之上（仍在 ::after 光环之下） */\n\n  /* 渐变镂空字 + 立体阴影 */\n  background: var(\n    --ball-logo-bg,\n    linear-gradient(\n      180deg,\n      rgba(255, 255, 255, 0.96) 0%,\n      rgba(255, 255, 255, 0.55) 45%,\n      rgba(220, 240, 255, 0.4) 65%,\n      rgba(120, 195, 255, 0.55) 100%\n    ),\n    linear-gradient(180deg, rgba(0, 0, 0, 0.38), rgba(0, 0, 0, 0) 60%)\n  );\n  -webkit-background-clip: text;\n  background-clip: text; /* 渐变裁剪到文字 */\n  color: transparent; /* 镂空填充由背景提供 */\n  text-shadow:\n    0 1px 0 var(--ball-logo-shadow-top, rgba(255, 255, 255, 0.75)),\n    /* 顶部掣光 */ 0 2px 4px var(--ball-logo-shadow-near, rgba(0, 0, 0, 0.25)),\n    /* 近阴影 */ 0 8px 18px var(--ball-logo-shadow-far, rgba(0, 123, 255, 0.35)); /* 远发光阴影 */\n  filter: var(--ball-logo-filter-glow, drop-shadow(0 0 2px rgba(102, 200, 255, 0.25))); /* 柔光晕 */\n  animation: era-sheen 4s ease-in-out infinite; /* 轻微高光流动 */\n  transition:\n    text-shadow 0.3s ease,\n    filter 0.3s ease;\n}\n\n.floating-ball:hover .era-logo {\n  text-shadow:\n    0 1px 0 var(--ball-logo-shadow-top, rgba(255, 255, 255, 0.85)),\n    0 3px 8px var(--ball-logo-shadow-near, rgba(0, 0, 0, 0.28)),\n    0 10px 26px var(--ball-logo-shadow-far, rgba(0, 123, 255, 0.55)); /* 悬停增强立体感 */\n  filter: var(--ball-logo-filter-glow, drop-shadow(0 0 3px rgba(102, 200, 255, 0.38))); /* 发光略加强 */\n}\n\n/* 高光缓慢上移，制造玻璃流光感（低侵扰） */\n@keyframes era-sheen {\n  0%,\n  100% {\n    background-position:\n      0% 0%,\n      0% 0%;\n  }\n  50% {\n    background-position:\n      0% 40%,\n      0% 0%;\n  }\n}\n</style>\n'],sourceRoot:''}]);const i=s},54:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map(function(n){var t='',a=void 0!==n[5];return n[4]&&(t+='@supports ('.concat(n[4],') {')),n[2]&&(t+='@media '.concat(n[2],' {')),a&&(t+='@layer'.concat(n[5].length>0?' '.concat(n[5]):'',' {')),t+=e(n),a&&(t+='}'),n[2]&&(t+='}'),n[4]&&(t+='}'),t}).join('')},n.i=function(e,t,a,r,o){'string'==typeof e&&(e=[[null,e,void 0]]);var s={};if(a)for(var i=0;i<this.length;i++){var l=this[i][0];null!=l&&(s[l]=!0)}for(var d=0;d<e.length;d++){var c=[].concat(e[d]);a&&s[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]='@layer'.concat(c[5].length>0?' '.concat(c[5]):'',' {').concat(c[1],'}')),c[5]=o),t&&(c[2]?(c[1]='@media '.concat(c[2],' {').concat(c[1],'}'),c[2]=t):c[2]=t),r&&(c[4]?(c[1]='@supports ('.concat(c[4],') {').concat(c[1],'}'),c[4]=r):c[4]=''.concat(r)),n.push(c))}},n}},55:(e,n,t)=>{var a=t(962);a.__esModule&&(a=a.default),'string'==typeof a&&(a=[[e.id,a,'']]),a.locals&&(e.exports=a.locals);(0,t(424).A)('add36304',a,!1,{ssrId:!0})},80:(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});var a=t(790),r=t.n(a),o=t(54),s=t.n(o)()(r());s.push([e.id,'.acc[data-v-f723f6d6]{border:1px solid var(--border-soft);border-radius:12px;background:var(--accordion-bg);overflow:hidden;transition:background 0.3s ease,border-color 0.3s ease}.acc-head[data-v-f723f6d6]{width:100%;display:flex;align-items:center;gap:10px;background:var(--mk-pill-null-bg);border-bottom:1px solid var(--border-soft);padding:10px 12px;cursor:pointer;font-weight:800;color:var(--text-subtitle);transition:background 0.3s ease,border-color 0.3s ease,color 0.3s ease}.caret[data-v-f723f6d6]{transition:transform 0.18s ease}.caret.open[data-v-f723f6d6]{transform:rotate(90deg)}.title[data-v-f723f6d6]{font-size:13px}.spacer[data-v-f723f6d6]{flex:1}.hint[data-v-f723f6d6]{font-size:12px;color:var(--text-normal);transition:color 0.3s ease}.acc-body[data-v-f723f6d6]{max-height:0;overflow:hidden;transition:max-height 0.28s ease-in-out;background:var(--accordion-body-bg)}.acc-body.open[data-v-f723f6d6]{max-height:600px;overflow-y:auto}.inner[data-v-f723f6d6]{padding:10px 12px}\n','',{version:3,sources:['webpack://./src/ERA变量框架/ui/template/EraAccordion.vue'],names:[],mappings:'AAkCA,sBACE,mCAAoC,CACpC,kBAAmB,CACnB,8BAA+B,CAC/B,eAAgB,CAChB,sDAGF,CAEA,2BACE,UAAW,CACX,YAAa,CACb,kBAAmB,CACnB,QAAS,CACT,iCAAkC,CAClC,0CAA2C,CAC3C,iBAAkB,CAClB,cAAe,CACf,eAAgB,CAChB,0BAA2B,CAC3B,sEAIF,CACA,wBACE,+BACF,CACA,6BACE,uBACF,CACA,wBACE,cACF,CACA,yBACE,MACF,CACA,uBACE,cAAe,CACf,wBAAyB,CACzB,0BACF,CAEA,2BACE,YAAa,CACb,eAAgB,CAChB,uCAAwC,CACxC,mCACF,CACA,gCACE,gBAAiB,CACjB,eACF,CAEA,wBACE,iBACF',sourcesContent:['<template>\n  <section class="acc">\n    \x3c!-- 折叠头：点击切换 --\x3e\n    <button class="acc-head" :aria-expanded="open ? \'true\' : \'false\'" @click="open = !open">\n      <span class="caret" :class="{ open }">▸</span>\n      \x3c!-- 指示箭头 --\x3e\n      <span class="title">{{ title }}</span>\n      \x3c!-- 标题文本 --\x3e\n      <span class="spacer"></span>\n      \x3c!-- 弹性空隙 --\x3e\n      <span class="hint">{{ open ? \'收起\' : \'展开\' }}</span>\n      \x3c!-- 右侧提示 --\x3e\n    </button>\n\n    \x3c!-- 内容：高度过渡（使用 CSS Grid） --\x3e\n    <div class="acc-body" :class="{ open }">\n      <div class="inner">\n        <slot />\n      </div>\n    </div>\n  </section>\n</template>\n\n<script setup lang="ts">\nimport { ref } from \'vue\';\n\nconst props = withDefaults(defineProps<{ title: string; defaultOpen?: boolean }>(), {\n  defaultOpen: false,\n});\n\nconst open = ref<boolean>(props.defaultOpen);\n<\/script>\n\n<style scoped>\n.acc {\n  border: 1px solid var(--border-soft);\n  border-radius: 12px;\n  background: var(--accordion-bg);\n  overflow: hidden;\n  transition:\n    background 0.3s ease,\n    border-color 0.3s ease;\n}\n\n.acc-head {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  background: var(--mk-pill-null-bg);\n  border-bottom: 1px solid var(--border-soft);\n  padding: 10px 12px;\n  cursor: pointer;\n  font-weight: 800;\n  color: var(--text-subtitle);\n  transition:\n    background 0.3s ease,\n    border-color 0.3s ease,\n    color 0.3s ease;\n}\n.caret {\n  transition: transform 0.18s ease;\n}\n.caret.open {\n  transform: rotate(90deg);\n}\n.title {\n  font-size: 13px;\n}\n.spacer {\n  flex: 1;\n}\n.hint {\n  font-size: 12px;\n  color: var(--text-normal);\n  transition: color 0.3s ease;\n}\n\n.acc-body {\n  max-height: 0;\n  overflow: hidden;\n  transition: max-height 0.28s ease-in-out;\n  background: var(--accordion-body-bg);\n}\n.acc-body.open {\n  max-height: 600px; /* 为展开的内容提供一个更大的最大高度 */\n  overflow-y: auto; /* 当内容超出最大高度时，显示滚动条 */\n}\n\n.inner {\n  padding: 10px 12px;\n}\n</style>\n'],sourceRoot:''}]);const i=s},81:(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});var a=t(790),r=t.n(a),o=t(54),s=t.n(o)()(r());s.push([e.id,'.json-root[data-v-6fc9ef75]{font-size:12px;color:var(--settings-text-input);transition:color 0.3s ease}.json-line[data-v-6fc9ef75]{position:relative;display:flex;align-items:center;gap:6px;padding:2px 6px;border-radius:6px;transition:background 0.2s ease}.json-line[data-v-6fc9ef75]:hover{background:var(--json-hover-bg)}.json-children[data-v-6fc9ef75]{border-left:1px dashed var(--json-tree-line);transition:border-color 0.3s ease}.key[data-v-6fc9ef75]{color:var(--json-key-color);font-weight:700;transition:color 0.3s ease}.colon[data-v-6fc9ef75]{color:var(--text-normal);transition:color 0.3s ease}.brace[data-v-6fc9ef75]{color:var(--text-normal);transition:color 0.3s ease}.val.string[data-v-6fc9ef75]{color:var(--json-val-string)}.val.number[data-v-6fc9ef75]{color:var(--json-val-number)}.val.boolean[data-v-6fc9ef75]{color:var(--json-val-boolean)}.val.null[data-v-6fc9ef75]{color:var(--json-val-null)}.val.undefined[data-v-6fc9ef75]{color:var(--json-val-null)}.json-root[data-v-6fc9ef75]{overflow:clip;contain:layout paint;min-height:0}.json-children[data-v-6fc9ef75]{overflow:clip;contain:paint}\n','',{version:3,sources:['webpack://./src/ERA变量框架/ui/template/PrettyJsonViewer.vue'],names:[],mappings:'AAkIA,4BACE,cAAe,CACf,gCAAiC,CACjC,0BACF,CACA,4BACE,iBAAkB,CAClB,YAAa,CACb,kBAAmB,CACnB,OAAQ,CACR,eAAgB,CAChB,iBAAkB,CAClB,+BACF,CACA,kCACE,+BACF,CACA,gCACE,4CAA6C,CAC7C,iCACF,CAEA,sBACE,2BAA4B,CAC5B,eAAgB,CAChB,0BACF,CACA,wBACE,wBAAyB,CACzB,0BACF,CACA,wBACE,wBAAyB,CACzB,0BACF,CAEA,6BACE,4BACF,CACA,6BACE,4BACF,CACA,8BACE,6BACF,CACA,2BACE,0BACF,CACA,gCACE,0BACF,CAGA,4BAEE,aAAc,CACd,oBAAqB,CACrB,YACF,CAEA,gCAEE,aAAc,CACd,aACF',sourcesContent:['<template>\n  <div class="json-root">\n    <div class="json-line">\n      <span class="brace">{{ rootOpen }}</span>\n      \x3c!-- 根开括号：对象{ / 数组[ --\x3e\n    </div>\n\n    <div class="json-children">\n      <template v-if="isPlainObjectOrArray">\n        <JsonNode\n          v-for="(v, k) in value"\n          :key="String(k)"\n          :k="String(k)"\n          :v="v"\n          :path="String(k)"\n          :level="1"\n          :default-collapsed="defaultCollapsed"\n          :max-depth="maxDepth"\n        />\n      </template>\n\n      <template v-else>\n        <div class="json-line" :style="{ paddingLeft: 1 * 14 + \'px\' }">\n          <span class="key">value</span><span class="colon">:</span>\n          <span class="val" :class="primitiveType">{{ primitiveText }}</span>\n        </div>\n      </template>\n    </div>\n\n    <div class="json-line">\n      <span class="brace">{{ rootClose }}</span>\n      \x3c!-- 根闭括号：对象} / 数组] --\x3e\n    </div>\n  </div>\n</template>\n\n<script setup lang="ts">\nimport { computed } from \'vue\'; // 计算属性工具\nimport { Logger } from \'../../utils/log\';\nimport JsonNode from \'./JsonNode.vue\'; // ✅ 改为导入独立 SFC 的递归节点组件\n\nconst logger = new Logger();\n\nconst props = withDefaults(\n  defineProps<{\n    value: any; // 要展示的 JSON 值\n    defaultCollapsed?: boolean; // 默认是否折叠\n    maxDepth?: number; // 初次展开最大层数\n  }>(),\n  {\n    defaultCollapsed: true, // 默认折叠\n    maxDepth: 3, // 默认展开到 3 层\n  },\n);\n\nconst isPlainObjectOrArray = computed(() => {\n  const v = props.value; // 取入参值\n  const result = v !== null && typeof v === \'object\'; // 仅对象/数组才进入逐键渲染\n  logger.debug(\'isPlainObjectOrArray\', `计算结果: ${result}。该值${result ? \'是\' : \'不是\'}普通对象或数组。`, {\n    传入值: v,\n  });\n  return result;\n}); // 是否对象/数组\n\nconst primitiveType = computed(() => {\n  const v = props.value; // 取入参值\n  let result: string;\n  if (v === null) {\n    result = \'null\';\n  } else if (Array.isArray(v)) {\n    result = \'array\'; // 数组（不会走到该分支，因为上面 isPlainObjectOrArray 判断过）\n  } else {\n    const t = typeof v; // 原始类型\n    result = t === \'undefined\' ? \'undefined\' : t;\n  }\n  logger.debug(\'primitiveType\', `计算原始值类型: ${result}`, { 传入值: v });\n  return result;\n}); // 原始值类型名（用于着色）\n\nconst primitiveText = computed(() => {\n  const v = props.value; // 取入参值\n  let result: string;\n  switch (\n    primitiveType.value // 按类型格式化文本\n  ) {\n    case \'string\':\n      result = JSON.stringify(v); // 字符串带引号\n      break;\n    case \'number\':\n      result = String(v); // 数字\n      break;\n    case \'boolean\':\n      result = v ? \'true\' : \'false\'; // 布尔\n      break;\n    case \'null\':\n      result = \'null\'; // null\n      break;\n    case \'undefined\':\n      result = \'undefined\'; // undefined\n      break;\n    case \'bigint\':\n      result = String(v) + \'n\'; // bigint\n      break;\n    case \'symbol\':\n      result = String(v); // symbol\n      break;\n    case \'function\':\n      result = \'ƒ()\'; // 函数\n      break;\n    default:\n      result = \'\'; // 兜底\n      break;\n  }\n  logger.debug(\'primitiveText\', `格式化原始值文本: "${result}"`, {\n    传入值: v,\n    类型: primitiveType.value,\n  });\n  return result;\n}); // 原始值文本\n\nconst isArrayRoot = computed(() => {\n  const result = Array.isArray(props.value);\n  logger.debug(\'isArrayRoot\', `计算根节点是否为数组: ${result}`, { 传入值: props.value });\n  return result;\n}); // 根是否数组\nconst rootOpen = computed(() => (isArrayRoot.value ? \'[\' : \'{\')); // 根开括号\nconst rootClose = computed(() => (isArrayRoot.value ? \']\' : \'}\')); // 根闭括号\n<\/script>\n\n<style scoped>\n.json-root {\n  font-size: 12px;\n  color: var(--settings-text-input);\n  transition: color 0.3s ease;\n}\n.json-line {\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  padding: 2px 6px;\n  border-radius: 6px;\n  transition: background 0.2s ease;\n}\n.json-line:hover {\n  background: var(--json-hover-bg);\n}\n.json-children {\n  border-left: 1px dashed var(--json-tree-line);\n  transition: border-color 0.3s ease;\n}\n\n.key {\n  color: var(--json-key-color);\n  font-weight: 700;\n  transition: color 0.3s ease;\n}\n.colon {\n  color: var(--text-normal);\n  transition: color 0.3s ease;\n}\n.brace {\n  color: var(--text-normal);\n  transition: color 0.3s ease;\n}\n\n.val.string {\n  color: var(--json-val-string);\n}\n.val.number {\n  color: var(--json-val-number);\n}\n.val.boolean {\n  color: var(--json-val-boolean);\n}\n.val.null {\n  color: var(--json-val-null);\n}\n.val.undefined {\n  color: var(--json-val-null);\n}\n\n/* ===[新增] 防溢出：根与子容器都裁剪绘制，避免在外部容器高度为 0 时“透出” === */\n.json-root {\n  /* JSON 根容器：自身成为一个绘制边界 */\n  overflow: clip; /* 裁剪一切溢出（比 hidden 更省性能、无滚动条） */\n  contain: layout paint; /* 隔离布局与绘制，防外部高度计算误差 */\n  min-height: 0; /* 防止 flex 场景 min-content 顶高父级 */\n}\n\n.json-children {\n  /* 子区：同样裁剪，解决左侧虚线在收起时外露 */\n  overflow: clip; /* 子级再保险裁剪 */\n  contain: paint; /* 进一步隔离绘制 */\n}\n</style>\n'],sourceRoot:''}]);const i=s},101:(e,n,t)=>{var a=t(691);a.__esModule&&(a=a.default),'string'==typeof a&&(a=[[e.id,a,'']]),a.locals&&(e.exports=a.locals);(0,t(424).A)('dc7c19ac',a,!1,{ssrId:!0})},133:(e,n,t)=>{var a=t(855);a.__esModule&&(a=a.default),'string'==typeof a&&(a=[[e.id,a,'']]),a.locals&&(e.exports=a.locals);(0,t(424).A)('765df499',a,!1,{ssrId:!0})},266:(e,n,t)=>{var a=t(292);a.__esModule&&(a=a.default),'string'==typeof a&&(a=[[e.id,a,'']]),a.locals&&(e.exports=a.locals);(0,t(424).A)('16459d0e',a,!1,{ssrId:!0})},283:(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});var a=t(790),r=t.n(a),o=t(54),s=t.n(o)()(r());s.push([e.id,'.era-shell[data-v-3a37be2a]{display:flex;align-items:flex-start;gap:12px;flex-wrap:nowrap}[data-v-3a37be2a] .era-panel{flex:0 1 auto}@media (max-width:992px){.era-shell[data-v-3a37be2a]{flex-wrap:wrap}[data-v-3a37be2a] .era-panel,[data-v-3a37be2a] .right-rail{width:100%;flex-basis:auto}[data-v-3a37be2a] .right-rail{position:static;margin-top:12px;height:auto;max-height:40vh}}[data-v-3a37be2a] .floating-ball{position:fixed;right:max(16px,env(safe-area-inset-right));bottom:max(90px,env(safe-area-inset-bottom));z-index:2147483647;pointer-events:auto;touch-action:manipulation;will-change:transform}.era-expanded-layer[data-v-3a37be2a]{position:fixed;inset:0;display:grid;place-items:center;padding:clamp(12px,2.5vw,24px);pointer-events:auto;z-index:2147483646;background:transparent;overflow:auto}@media (max-width:640px){[data-v-3a37be2a] .era-panel{width:min(92vw,560px);height:min(88vh,calc(100svh - 32px))}.panel-body[data-v-3a37be2a]{overscroll-behavior:contain}}\n','',{version:3,sources:['webpack://./src/ERA变量框架/ui/App.vue'],names:[],mappings:'AAyHA,4BAEE,YAAa,CACb,sBAAuB,CACvB,QAAS,CACT,gBACF,CAGA,6BACE,aACF,CAGA,yBAEE,4BACE,cACF,CACA,2DAEE,UAAW,CACX,eACF,CACA,8BACE,eAAgB,CAChB,eAAgB,CAChB,WAAY,CACZ,eACF,CACF,CAGA,iCAEE,cAAe,CACf,0CAA4C,CAC5C,4CAA8C,CAC9C,kBAAmB,CACnB,mBAAoB,CACpB,yBAA0B,CAC1B,qBACF,CAGA,qCAEE,cAAe,CACf,OAAQ,CACR,YAAa,CACb,kBAAmB,CACnB,8BAAiC,CACjC,mBAAoB,CACpB,kBAAmB,CACnB,sBAAuB,CACvB,aACF,CAGA,yBAEE,6BAEE,qBAAuB,CACvB,oCACF,CACA,6BAEE,2BACF,CACF',sourcesContent:['<template>\n  <div class="era-app-container" :class="{ \'dark-theme\': isDarkMode }">\n    <ThemeManager ref="themeManager" />\n    <FloatingBall v-show="currentComponent === \'FloatingBall\'" @click="requestSwitchView(\'ExpandedView\')" />\n    <div v-show="currentComponent === \'ExpandedView\'" class="era-expanded-layer">\n      \x3c!-- 视口级展开层：悬浮模态容器 --\x3e\n      <div class="era-shell">\n        \x3c!-- 新增横向壳容器：左面板 + 右侧栏 --\x3e\n        <EraPanel :data="dataRef" />\n        <RightRail />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang="ts">\nimport { computed, onBeforeUnmount, onMounted, ref, watch } from \'vue\';\nimport { getScriptSettings } from \'../utils/era_data\';\nimport { Logger } from \'../utils/log\';\nimport type { WriteDonePayload } from \'../utils/constants\';\nimport EraPanel from \'./components/EraPanel.vue\';\nimport FloatingBall from \'./components/FloatingBall.vue\';\nimport RightRail from \'./components/RightRail.vue\';\nimport ThemeManager from \'./components/ThemeManager.vue\';\n\nconst logger = new Logger();\n\n// 主题状态管理\nconst themeManager = ref<InstanceType<typeof ThemeManager> | null>(null);\nconst isDarkMode = ref(false);\n\nconst loadThemeSetting = () => {\n  try {\n    const settings = getScriptSettings();\n    const darkModeValue = settings?.[\'开启黑夜模式\'] ?? false;\n    isDarkMode.value = darkModeValue;\n    if (themeManager.value) {\n      themeManager.value.isDarkMode = darkModeValue;\n    }\n    logger.log(\'loadThemeSetting\', `主题已更新为: ${darkModeValue ? \'Dark\' : \'Light\'}`);\n  } catch (e) {\n    logger.error(\'loadThemeSetting\', \'加载主题设置失败\', e);\n    isDarkMode.value = false; // Fallback to light mode\n  }\n};\n\nonMounted(() => {\n  loadThemeSetting();\n  window.addEventListener(\'era-settings-updated\', loadThemeSetting);\n});\n\nonBeforeUnmount(() => {\n  window.removeEventListener(\'era-settings-updated\', loadThemeSetting);\n});\n\n// App.vue 原有的 props\nconst props = defineProps({\n  initialView: {\n    type: String,\n    required: true,\n    default: \'FloatingBall\',\n  },\n  eventData: {\n    type: Object as () => WriteDonePayload | null,\n    default: () => null,\n  },\n});\n\n// App.vue 原有的逻辑\nconst currentComponent = ref(props.initialView);\nconst requestSwitchView = (viewName: \'FloatingBall\' | \'ExpandedView\') => {\n  logger.debug(\'requestSwitchView\', `请求切换视图到: ${viewName}`);\n  if ((window as any).eraUiSwitchView) {\n    (window as any).eraUiSwitchView(viewName);\n  } else {\n    logger.warn(\'requestSwitchView\', \'全局切换函数 eraUiSwitchView 未找到\');\n  }\n};\n\n// 从 EraDataPanel 迁移过来的逻辑\nconst dataRef = computed(() => props.eventData || null);\n\nwatch(\n  () => props.eventData,\n  (newData, oldData) => {\n    logger.debug(\'watch:eventData\', \'eventData prop 发生变化\', {\n      newData,\n      oldData,\n    });\n  },\n  { deep: true },\n);\n\nwatch(\n  () => props.initialView,\n  newView => {\n    logger.debug(\'watch:initialView\', `initialView prop 发生变化，新视图: ${newView}`);\n    currentComponent.value = newView;\n  },\n);\n<\/script>\n\n<style>\n/* App.vue 视口级悬浮容器（替换原有 .era-app-container） */\n.era-app-container {\n  /* 作为全局悬浮层根容器 */\n  position: fixed; /* 固定在视口，不受外层布局影响 */\n  inset: 0; /* 覆盖整个视口区域（top/right/bottom/left 全 0） */\n  z-index: 2147483646; /* 超高层级，盖住站点其它层 */\n  pointer-events: none; /* 默认不截获点击，避免阻挡页面 */\n  isolation: isolate; /* 新建独立层叠上下文，防止被外层混合影响 */\n  contain: layout style paint; /* 创建渲染封装，减少外界干扰 */\n  width: 100svw; /* 适配移动端动态视口宽度 */\n  height: 100svh; /* 适配移动端动态视口高度 */\n}\n</style>\n\n<style scoped>\n/* 从 EraDataPanel.vue 迁移过来的样式 */\n\n/* ===[新增] 横向壳：左面板 + 右侧栏（按钮）=== */\n.era-shell {\n  /* 横向包裹容器 */ /* 中文注释：横向排列容器 */\n  display: flex; /* 横向布局 */ /* 中文注释：flex 横排 */\n  align-items: flex-start; /* 顶对齐 */ /* 中文注释：上缘对齐 */\n  gap: 12px; /* 左右间距 */ /* 中文注释：元素间距 */\n  flex-wrap: nowrap; /* 默认不换行 */ /* 中文注释：保持并排 */\n}\n\n/* 保持面板宽高（原样），但让它更好地在横向中自适应 */\n:deep(.era-panel) {\n  flex: 0 1 auto; /* 面板按自身宽度布局 */\n}\n\n/* 小屏回落：改为上下堆叠（按钮在下） */\n@media (max-width: 992px) {\n  /* 992px (平板) 以下回落 */\n  .era-shell {\n    flex-wrap: wrap; /* 允许换行 */\n  }\n  :deep(.era-panel),\n  :deep(.right-rail) {\n    width: 100%; /* 各占一行 */\n    flex-basis: auto; /* 重置 flex-basis */\n  }\n  :deep(.right-rail) {\n    position: static; /* 取消吸顶 */\n    margin-top: 12px; /* 与上方留白 */\n    height: auto; /* 高度自适应 */\n    max-height: 40vh; /* 限制最大高度，避免过长 */\n  }\n}\n\n/* ===[新增] 悬浮球：固定在右下角 + 开启点击 === */\n:deep(.floating-ball) {\n  /* 选中子组件根元素（scoped 下用 deep） */\n  position: fixed; /* 固定定位到视口 */\n  right: max(16px, env(safe-area-inset-right)); /* 右侧安全区 + 基础边距 */\n  bottom: max(90px, env(safe-area-inset-bottom)); /* 底部安全区 + 基础边距 */\n  z-index: 2147483647; /* 高于容器根，确保始终可点 */\n  pointer-events: auto; /* 启用点击（父容器是 none） */\n  touch-action: manipulation; /* 移动端减少点击延迟 */\n  will-change: transform; /* 提前分层，避免站点 3D/滤镜影响 */\n}\n\n/* ===[新增] 展开层：视口级模态容器（只在 ExpandedView v-show 为 true 时存在） === */\n.era-expanded-layer {\n  /* 绑定在模板新增的 class */\n  position: fixed; /* 固定在视口（不受外层布局约束） */\n  inset: 0; /* 铺满视口 */\n  display: grid; /* 用 grid 居中内容 */\n  place-items: center; /* 水平垂直置中 */\n  padding: clamp(12px, 2.5vw, 24px); /* 视口自适应内边距 */\n  pointer-events: auto; /* 启用点击（与父容器的 none 区分） */\n  z-index: 2147483646; /* 仅次于悬浮球，保证在最上层 */\n  background: transparent; /* 如需半透明遮罩可改为 rgba(0,0,0,.25) */\n  overflow: auto; /* 内容超出时，容器自身滚动，不被裁剪 */\n}\n\n/* ===[新增] 小屏适配：面板在移动端更“填充”可视区 === */\n@media (max-width: 640px) {\n  /* 针对手机宽度 */\n  :deep(.era-panel) {\n    /* 重设面板宽高更贴合手机 */\n    width: min(92vw, 560px); /* 放宽到 92vw，避免 60vw 太窄 */\n    height: min(88vh, calc(100svh - 32px)); /* 兼顾状态栏/地址栏动态高度 */\n  }\n  .panel-body {\n    /* 主要内容区滚动容器 */\n    overscroll-behavior: contain; /* 防止滚动牵动背景页面 */\n  }\n}\n</style>\n'],sourceRoot:''}]);const i=s},292:(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});var a=t(790),r=t.n(a),o=t(54),s=t.n(o)()(r());s.push([e.id,'.action-buttons-card[data-v-0e7fe28d]{width:100%;padding:12px;background:var(--actions-bg-glass);border:1px solid var(--border-strong);border-radius:16px;backdrop-filter:blur(10px);box-shadow:var(--actions-shadow-card),var(--shadow-inset);display:flex;flex-direction:column;gap:10px;transition:background 0.3s ease,border-color 0.3s ease}.card-title[data-v-0e7fe28d]{margin:0 0 4px;font-size:14px;font-weight:800;letter-spacing:0.3px;color:var(--text-title);transition:color 0.3s ease}.btns[data-v-0e7fe28d]{display:flex;flex-direction:column;gap:16px}.btn-group[data-v-0e7fe28d]{display:flex;flex-direction:column;gap:6px}.btn-desc[data-v-0e7fe28d]{font-size:11px;color:var(--text-soft);padding:0 4px;line-height:1.5;margin:0;transition:color 0.3s ease}.btn[data-v-0e7fe28d]{display:grid;grid-template-columns:22px 1fr;align-items:center;-moz-column-gap:8px;column-gap:8px;padding:10px 12px;border-radius:12px;border:1px solid var(--border-soft);background:var(--actions-btn-bg);color:var(--actions-btn-text);font-weight:700;font-size:13px;cursor:pointer;box-shadow:var(--settings-shadow-inset),var(--shadow-button);transition:transform 0.12s ease,box-shadow 0.12s ease,background 0.2s ease,color 0.3s ease,border-color 0.3s ease;text-align:left}.btn.primary[data-v-0e7fe28d]{background:var(--actions-btn-primary-bg);border-color:var(--actions-btn-primary-border);color:var(--actions-btn-primary-text)}.btn.subtle[data-v-0e7fe28d]{background:var(--actions-btn-subtle-bg);border-color:var(--actions-btn-subtle-border)}.btn.danger[data-v-0e7fe28d]{background:var(--actions-btn-danger-bg);border-color:var(--actions-btn-danger-border);color:var(--actions-btn-danger-text)}.btn[data-v-0e7fe28d]:hover{transform:translateY(-1px);box-shadow:var(--settings-shadow-inset),var(--shadow-button-hover)}.btn[data-v-0e7fe28d]:active{transform:translateY(0);box-shadow:var(--settings-shadow-inset),var(--actions-shadow-btn-active)}.btn[data-v-0e7fe28d]:focus-visible{outline:2px solid var(--actions-outline-focus);outline-offset:2px}.ico[data-v-0e7fe28d]{display:inline-grid;place-items:center;width:22px;height:22px;filter:saturate(0.95)}.label[data-v-0e7fe28d]{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}\n','',{version:3,sources:['webpack://./src/ERA变量框架/ui/components/RightRailContent/ActionButtons.vue'],names:[],mappings:'AAoFA,sCAEE,UAAW,CACX,YAAa,CACb,kCAAmC,CACnC,qCAAsC,CACtC,kBAAmB,CACnB,0BAA2B,CAC3B,yDAA2D,CAC3D,YAAa,CACb,qBAAsB,CACtB,QAAS,CACT,sDAGF,CAGA,6BAEE,cAAe,CACf,cAAe,CACf,eAAgB,CAChB,oBAAqB,CACrB,uBAAwB,CACxB,0BACF,CAGA,uBAEE,YAAa,CACb,qBAAsB,CACtB,QACF,CAEA,4BACE,YAAa,CACb,qBAAsB,CACtB,OACF,CAEA,2BACE,cAAe,CACf,sBAAuB,CACvB,aAAc,CACd,eAAgB,CAChB,QAAS,CACT,0BACF,CAGA,sBAEE,YAAa,CACb,8BAA+B,CAC/B,kBAAmB,CACnB,mBAAe,CAAf,cAAe,CACf,iBAAkB,CAClB,kBAAmB,CACnB,mCAAoC,CACpC,gCAAiC,CACjC,6BAA8B,CAC9B,eAAgB,CAChB,cAAe,CACf,cAAe,CACf,4DAA8D,CAC9D,iHAKwB,CACxB,eACF,CAGA,8BAEE,wCAAyC,CACzC,8CAA+C,CAC/C,qCACF,CAGA,6BAEE,uCAAwC,CACxC,6CACF,CAGA,6BACE,uCAAwC,CACxC,6CAA8C,CAC9C,oCACF,CAGA,4BAEE,0BAA2B,CAC3B,kEACF,CACA,6BAEE,uBAAwB,CACxB,wEACF,CAGA,oCAEE,8CAA+C,CAC/C,kBACF,CAGA,sBAEE,mBAAoB,CACpB,kBAAmB,CACnB,UAAW,CACX,WAAY,CACZ,qBACF,CACA,wBAEE,kBAAmB,CACnB,eAAgB,CAChB,sBACF',sourcesContent:['<template>\n  \x3c!-- 右侧操作卡：外层自包含，不依赖父组件样式 --\x3e\n  <section class="action-buttons-card" role="complementary" aria-label="ERA 快捷操作">\n    \x3c!-- 中文注释：操作卡容器 --\x3e\n    <h4 class="card-title">快捷操作</h4>\n    \x3c!-- 中文注释：卡片标题 --\x3e\n    <div class="btns">\n      \x3c!-- 中文注释：按钮垂直栈 --\x3e\n      <div class="btn-group">\n        <button class="btn primary" title="重新计算所有变量" @click.stop="onFullSync">\n          \x3c!-- 中文注释：主按钮 --\x3e\n          <span class="ico" aria-hidden="true">🔄</span>\n          \x3c!-- 中文注释：图标 --\x3e\n          <span class="label">完全重算变量</span>\n          \x3c!-- 中文注释：文字 --\x3e\n        </button>\n        <p class="btn-desc">\n          当变量与预期不符时，点击此按钮可从**第一条消息**开始重新计算所有消息，以确保数据完全同步。这是一个非常耗时的操作。\n        </p>\n      </div>\n\n      <div class="btn-group">\n        <button class="btn subtle" title="只重算最新一楼的变量" @click.stop="onLastSync">\n          \x3c!-- 中文注释：次按钮 --\x3e\n          <span class="ico" aria-hidden="true">♻️</span>\n          \x3c!-- 中文注释：图标 --\x3e\n          <span class="label">重算最后一楼变量</span>\n          \x3c!-- 中文注释：文字 --\x3e\n        </button>\n        <p class="btn-desc">\n          仅根据最新一条消息重新计算变量，速度较快。适用于修复最近一次操作导致的小问题或在手动编辑了最后一条消息后重新写入变量（注意，era会无视所有**用户发送的消息**中的变量更新语句）。\n        </p>\n      </div>\n\n      <div class="btn-group">\n        <button class="btn danger" title="为角色卡注入 ERA 规则" @click.stop="onInjectRegex">\n          <span class="ico" aria-hidden="true">🥽</span>\n          <span class="label">ERA 快速初始化</span>\n        </button>\n        <p class="btn-desc">\n          【角色卡作者专用】点击后，会向当前角色卡注入四条规则：<br />\n          1. 添加“ERA 数据隐藏正则”以隐藏聊天中的数据标签。<br />\n          2. 添加“ERA状态栏模板”以将模板状态栏替换至消息。<br />\n          3. 向角色主世界书中添加“ERA变量操作规则”条目以令ai明白era变量的操作规则。<br />\n          4. 向角色主世界书中添加“ERA变量意图说明”条目以存放变量意图说明。<br />\n          注意：作者可以用该功能快速注入使用era的几个基础配置。但你仍旧需要：<br />\n          1. 自己设计角色卡用到的变量结构并写入角色的开场白。<br />\n          2. 在角色主世界书中‘ERA变量意图说明’条目中添加向ai说明各个变量的意图的提示词。<br />\n          3. 修改‘ERA状态栏模板’正则中的状态栏代码，令其与**你设计的变量系统匹配**。\n        </p>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script setup lang="ts">\nimport { initEraCharacterRegexes } from \'../../../initer/manual/regex\';\nimport { initWorldbook } from \'../../../initer/manual/worldbook\';\nimport { Logger } from \'../../../utils/log\'; // 中文注释：日志工具\n\nconst logger = new Logger(); // 中文注释：实例化日志\n\nasync function onInjectRegex() {\n  logger.log(\'onInjectRegex\', \'点击“注入数据隐藏正则”，开始注入...\');\n  initEraCharacterRegexes();\n  await initWorldbook();\n  logger.log(\'onInjectRegex\', \'注入完成。\');\n}\n\nfunction onFullSync() {\n  // 中文注释：完全重算事件\n  logger.log(\'onFullSync\', \'点击“完全重算变量”，发送 manual_full_sync 事件。\'); // 中文注释：日志\n  eventEmit(\'manual_full_sync\'); // 中文注释：发送全量重算事件（保持不变）\n}\n\nfunction onLastSync() {\n  // 中文注释：局部重算事件\n  logger.log(\'onLastSync\', \'点击“重算最后一楼变量”，发送 manual_sync 事件。\'); // 中文注释：日志\n  eventEmit(\'manual_sync\'); // 中文注释：发送单楼重算事件（保持不变）\n}\n<\/script>\n\n<style scoped>\n/* === 外层卡片：与左侧 ERA 面板同风格（玻璃卡 + 轻浮雕） === */\n.action-buttons-card {\n  /* 中文注释：卡片容器 */\n  width: 100%; /* 占满侧栏 */ /* 中文注释：自适应宽度 */\n  padding: 12px; /* 内边距 */ /* 中文注释：留白 */\n  background: var(--actions-bg-glass);\n  border: 1px solid var(--border-strong);\n  border-radius: 16px; /* 中文注释：圆角 */\n  backdrop-filter: blur(10px); /* 中文注释：毛玻璃效果 */\n  box-shadow: var(--actions-shadow-card), var(--shadow-inset);\n  display: flex; /* 中文注释：纵向布局 */\n  flex-direction: column; /* 中文注释：垂直排列 */\n  gap: 10px; /* 中文注释：元素间距 */\n  transition:\n    background 0.3s ease,\n    border-color 0.3s ease;\n}\n\n/* 标题：与面板标题权重接近但略轻 */\n.card-title {\n  /* 中文注释：卡片标题 */\n  margin: 0 0 4px; /* 中文注释：底部留白 */\n  font-size: 14px; /* 中文注释：字号 */\n  font-weight: 800; /* 中文注释：加粗 */\n  letter-spacing: 0.3px; /* 中文注释：字距 */\n  color: var(--text-title);\n  transition: color 0.3s ease;\n}\n\n/* 按钮栈：竖直排列 */\n.btns {\n  /* 中文注释：按钮容器 */\n  display: flex; /* 中文注释：flex 布局 */\n  flex-direction: column; /* 中文注释：垂直排列 */\n  gap: 16px; /* 中文注释：上下间距 */\n}\n\n.btn-group {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n}\n\n.btn-desc {\n  font-size: 11px;\n  color: var(--text-soft);\n  padding: 0 4px;\n  line-height: 1.5;\n  margin: 0;\n  transition: color 0.3s ease;\n}\n\n/* 通用按钮造型：大号、易点、可聚焦 */\n.btn {\n  /* 中文注释：通用按钮 */\n  display: grid; /* 中文注释：网格方便对齐图标与文字 */\n  grid-template-columns: 22px 1fr; /* 中文注释：左 22px 图标 + 右侧文字 */\n  align-items: center; /* 中文注释：垂直居中 */\n  column-gap: 8px; /* 中文注释：图标与文字间距 */\n  padding: 10px 12px; /* 中文注释：触控友好尺寸 */\n  border-radius: 12px; /* 中文注释：圆角 */\n  border: 1px solid var(--border-soft);\n  background: var(--actions-btn-bg);\n  color: var(--actions-btn-text);\n  font-weight: 700; /* 中文注释：字重 */\n  font-size: 13px; /* 中文注释：字号 */\n  cursor: pointer; /* 中文注释：可点击 */\n  box-shadow: var(--settings-shadow-inset), var(--shadow-button);\n  transition:\n    transform 0.12s ease,\n    box-shadow 0.12s ease,\n    background 0.2s ease,\n    color 0.3s ease,\n    border-color 0.3s ease;\n  text-align: left; /* 中文注释：靠左 */\n}\n\n/* 主按钮：略带品牌色调（蓝青） */\n.btn.primary {\n  /* 中文注释：主按钮 */\n  background: var(--actions-btn-primary-bg);\n  border-color: var(--actions-btn-primary-border);\n  color: var(--actions-btn-primary-text);\n}\n\n/* 次按钮：更素雅 */\n.btn.subtle {\n  /* 中文注释：次按钮 */\n  background: var(--actions-btn-subtle-bg);\n  border-color: var(--actions-btn-subtle-border);\n}\n\n/* 危险按钮：用于特殊或破坏性操作 */\n.btn.danger {\n  background: var(--actions-btn-danger-bg);\n  border-color: var(--actions-btn-danger-border);\n  color: var(--actions-btn-danger-text);\n}\n\n/* 悬停与按压反馈 */\n.btn:hover {\n  /* 中文注释：悬停态 */\n  transform: translateY(-1px); /* 中文注释：轻浮起 */\n  box-shadow: var(--settings-shadow-inset), var(--shadow-button-hover);\n}\n.btn:active {\n  /* 中文注释：按下态 */\n  transform: translateY(0); /* 中文注释：回落 */\n  box-shadow: var(--settings-shadow-inset), var(--actions-shadow-btn-active);\n}\n\n/* 焦点可见性（无障碍） */\n.btn:focus-visible {\n  /* 中文注释：键盘聚焦态 */\n  outline: 2px solid var(--actions-outline-focus);\n  outline-offset: 2px; /* 中文注释：描边偏移 */\n}\n\n/* 图标与文字 */\n.ico {\n  /* 中文注释：图标框 */\n  display: inline-grid; /* 中文注释：网格放置 */\n  place-items: center; /* 中文注释：居中 */\n  width: 22px; /* 中文注释：宽度 */\n  height: 22px; /* 中文注释：高度 */\n  filter: saturate(0.95); /* 中文注释：轻饱和 */\n}\n.label {\n  /* 中文注释：文字 */\n  white-space: nowrap; /* 中文注释：不换行（文字短） */\n  overflow: hidden; /* 中文注释：溢出裁剪 */\n  text-overflow: ellipsis; /* 中文注释：省略号 */\n}\n</style>\n'],sourceRoot:''}]);const i=s},318:(e,n,t)=>{var a=t(80);a.__esModule&&(a=a.default),'string'==typeof a&&(a=[[e.id,a,'']]),a.locals&&(e.exports=a.locals);(0,t(424).A)('28935e6a',a,!1,{ssrId:!0})},340:(e,n,t)=>{var a=t(574);a.__esModule&&(a=a.default),'string'==typeof a&&(a=[[e.id,a,'']]),a.locals&&(e.exports=a.locals);(0,t(424).A)('2b28b6d1',a,!1,{ssrId:!0})},377:(e,n,t)=>{var a=t(283);a.__esModule&&(a=a.default),'string'==typeof a&&(a=[[e.id,a,'']]),a.locals&&(e.exports=a.locals);(0,t(424).A)('55a0b2e8',a,!1,{ssrId:!0})},424:(e,n,t)=>{function a(e,n){for(var t=[],a={},r=0;r<n.length;r++){var o=n[r],s=o[0],i={id:e+':'+r,css:o[1],media:o[2],sourceMap:o[3]};a[s]?a[s].parts.push(i):t.push(a[s]={id:s,parts:[i]})}return t}t.d(n,{A:()=>C});var r='undefined'!=typeof document;if('undefined'!=typeof DEBUG&&DEBUG&&!r)throw new Error('vue-style-loader cannot be used in a non-browser environment. Use { target: \'node\' } in your Webpack config to indicate a server-rendering environment.');var o={},s=r&&(document.head||document.getElementsByTagName('head')[0]),i=null,l=0,d=!1,c=function(){},p=null,A='data-vue-ssr-id',g='undefined'!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function C(e,n,t,r){d=t,p=r||{};var s=a(e,n);return u(s),function(n){for(var t=[],r=0;r<s.length;r++){var i=s[r];(l=o[i.id]).refs--,t.push(l)}n?u(s=a(e,n)):s=[];for(r=0;r<t.length;r++){var l;if(0===(l=t[r]).refs){for(var d=0;d<l.parts.length;d++)l.parts[d]();delete o[l.id]}}}}function u(e){for(var n=0;n<e.length;n++){var t=e[n],a=o[t.id];if(a){a.refs++;for(var r=0;r<a.parts.length;r++)a.parts[r](t.parts[r]);for(;r<t.parts.length;r++)a.parts.push(m(t.parts[r]));a.parts.length>t.parts.length&&(a.parts.length=t.parts.length)}else{var s=[];for(r=0;r<t.parts.length;r++)s.push(m(t.parts[r]));o[t.id]={id:t.id,refs:1,parts:s}}}}function b(){var e=document.createElement('style');return e.type='text/css',s.appendChild(e),e}function m(e){var n,t,a=document.querySelector('style['+A+'~="'+e.id+'"]');if(a){if(d)return c;a.parentNode.removeChild(a)}if(g){var r=l++;a=i||(i=b()),n=h.bind(null,a,r,!1),t=h.bind(null,a,r,!0)}else a=b(),n=x.bind(null,a),t=function(){a.parentNode.removeChild(a)};return n(e),function(a){if(a){if(a.css===e.css&&a.media===e.media&&a.sourceMap===e.sourceMap)return;n(e=a)}else t()}}var f,v=(f=[],function(e,n){return f[e]=n,f.filter(Boolean).join('\n')});function h(e,n,t,a){var r=t?'':a.css;if(e.styleSheet)e.styleSheet.cssText=v(n,r);else{var o=document.createTextNode(r),s=e.childNodes;s[n]&&e.removeChild(s[n]),s.length?e.insertBefore(o,s[n]):e.appendChild(o)}}function x(e,n){var t=n.css,a=n.media,r=n.sourceMap;if(a&&e.setAttribute('media',a),p.ssrId&&e.setAttribute(A,n.id),r&&(t+='\n/*# sourceURL='+r.sources[0]+' */',t+='\n/*# sourceMappingURL=data:application/json;base64,'+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+' */'),e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},432:(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});var a=t(790),r=t.n(a),o=t(54),s=t.n(o)()(r());s.push([e.id,':root{--bg-blur-heavy:linear-gradient(180deg,rgba(255,255,255,0.75),rgba(255,255,255,0.65));--bg-blur-light:linear-gradient(90deg,rgba(255,255,255,0.65),rgba(255,255,255,0.45));--bg-solid:#fff;--bg-soft:rgba(255,255,255,0.6);--bg-empty:rgba(255,255,255,0.5);--border-strong:rgba(255,255,255,0.6);--border-normal:rgba(0,0,0,0.08);--border-soft:rgba(0,0,0,0.06);--border-dashed:rgba(0,0,0,0.08);--text-title:#1f2937;--text-subtitle:#374151;--text-normal:#6b7280;--shadow-panel:0 10px 40px rgba(0,0,0,0.18);--shadow-button:0 2px 8px rgba(0,0,0,0.08);--shadow-button-hover:0 6px 16px rgba(0,0,0,0.12);--shadow-inset:inset 0 1px 0 rgba(255,255,255,0.6);--chip-bg:linear-gradient(180deg,#fafafa,#f4f4f4);--chip-text:#6b7280;--chip-border:rgba(0,0,0,0.06);--chip-ok-bg:linear-gradient(180deg,#ecfdf5,#d1fae5);--chip-ok-text:#065f46;--chip-ok-border:#a7f3d0;--mk-pill-bg:linear-gradient(180deg,#eef2ff,#e0e7ff);--mk-pill-text:#4338ca;--mk-pill-border:#c7d2fe;--mk-pill-null-bg:linear-gradient(180deg,#f9fafb,#f3f4f6);--mk-pill-null-text:#6b7280;--mk-pill-null-border:#e5e7eb;--settings-bg-glass:linear-gradient(180deg,rgba(255,255,255,0.76),rgba(255,255,255,0.62));--settings-shadow-card:0 10px 40px rgba(0,0,0,0.16);--settings-shadow-inset:inset 0 1px 0 #fff;--settings-shadow-minibtn:0 2px 6px rgba(0,0,0,0.06);--settings-shadow-minibtn-hover:0 5px 12px rgba(0,0,0,0.1);--settings-bg-var-row:linear-gradient(180deg,#ffffff,#f8fafc);--settings-text-input:#111827;--settings-text-primary-btn:#0f172a;--settings-border-input:#e5e7eb;--settings-bg-btn-primary:linear-gradient(180deg,#e0f2fe,#bfdbfe);--settings-border-btn-primary:#93c5fd;--settings-bg-btn-subtle:linear-gradient(180deg,#f9fafb,#f3f4f6);--settings-bg-type-chip:#eef2ff;--settings-border-type-chip:#c7d2fe;--settings-bg-switch-track:#e5e7eb;--settings-bg-switch-handle:#fff;--settings-shadow-switch-handle:0 1px 3px rgba(0,0,0,0.2);--settings-bg-switch-checked:#93c5fd;--settings-text-hint-ok:#065f46;--settings-text-hint-bad:#b91c1c;--actions-bg-glass:linear-gradient(180deg,rgba(255,255,255,0.76),rgba(255,255,255,0.62));--actions-shadow-card:0 10px 40px rgba(0,0,0,0.16);--actions-btn-bg:linear-gradient(180deg,#fafafa,#f3f4f6);--actions-btn-text:#374151;--actions-btn-primary-bg:linear-gradient(180deg,#e0f2fe,#bfdbfe);--actions-btn-primary-border:#93c5fd;--actions-btn-primary-text:#0f172a;--actions-btn-subtle-bg:linear-gradient(180deg,#f9fafb,#f3f4f6);--actions-btn-subtle-border:#e5e7eb;--actions-shadow-btn-active:0 2px 8px rgba(0,0,0,0.1);--actions-outline-focus:#60a5fa;--accordion-bg:linear-gradient(180deg,#fff,#fafafa);--accordion-body-bg:rgba(255,255,255,0.82);--meta-bg:linear-gradient(180deg,#ffffff,#f9fafb);--meta-shadow:0 6px 18px rgba(0,0,0,0.06);--meta-key-bg:#f3f4f6;--meta-glow-bg:linear-gradient(90deg,#60a5fa,#a78bfa,#34d399,#f472b6);--json-hover-bg:rgba(59,130,246,0.06);--json-tree-line:rgba(107,114,128,0.25);--json-key-color:#1f2937;--json-val-string:#047857;--json-val-number:#7c3aed;--json-val-boolean:#0369a1;--json-val-null:#9ca3af;--json-caret-shadow:0 1px 0 #fff,0 2px 6px rgba(0,0,0,0.06);--json-caret-open-shadow:0 3px 10px rgba(0,0,0,0.12);--tab-active-shadow:0 0 0 3px rgba(147,197,253,0.35);--tab-content-bg:rgba(255,255,255,0.86);--ball-hue:210;--ball-sat:15%;--ball-lum:95%;--ball-shadow-color:rgba(0,0,0,0.15);--ball-glow-color:rgba(180,200,220,0.55);--ball-inner-shadow-color:rgba(0,0,0,0.1);--ball-specular-color:rgba(255,255,255,0.9);--ball-glass-color:rgba(255,255,255,0.1);--ball-focus-outline:rgba(180,200,220,0.85);--ball-logo-bg:linear-gradient(180deg,#8899aa 0%,#556677 100%);--ball-logo-shadow-top:rgba(0,0,0,0.25);--ball-logo-shadow-near:rgba(255,255,255,0.6);--ball-logo-shadow-far:rgba(0,0,0,0.1);--ball-logo-filter-glow:drop-shadow(0 0 1px rgba(0,0,0,0.2))}.dark-theme{--bg-blur-heavy:linear-gradient(180deg,rgba(35,37,43,0.8),rgba(28,29,33,0.75));--bg-blur-light:linear-gradient(90deg,rgba(50,52,59,0.7),rgba(42,43,48,0.6));--bg-solid:#2d2f37;--bg-soft:rgba(60,63,73,0.5);--bg-empty:rgba(60,63,73,0.25);--border-strong:rgba(255,255,255,0.12);--border-normal:rgba(255,255,255,0.1);--border-soft:rgba(255,255,255,0.08);--border-dashed:rgba(255,255,255,0.1);--text-title:#f9fafb;--text-subtitle:#d1d5db;--text-normal:#9ca3af;--shadow-panel:0 10px 40px rgba(0,0,0,0.3);--shadow-button:0 2px 8px rgba(0,0,0,0.25);--shadow-button-hover:0 6px 16px rgba(0,0,0,0.35);--shadow-inset:inset 0 1px 0 rgba(255,255,255,0.1);--chip-bg:linear-gradient(180deg,#4b5563,#374151);--chip-text:#e5e7eb;--chip-border:rgba(255,255,255,0.1);--chip-ok-bg:linear-gradient(180deg,#064e3b,#052e22);--chip-ok-text:#a7f3d0;--chip-ok-border:#047857;--mk-pill-bg:linear-gradient(180deg,#3730a3,#312e81);--mk-pill-text:#c7d2fe;--mk-pill-border:#4f46e5;--mk-pill-null-bg:linear-gradient(180deg,#4b5563,#374151);--mk-pill-null-text:#9ca3af;--mk-pill-null-border:#6b7280;--settings-bg-glass:linear-gradient(180deg,rgba(40,42,48,0.8),rgba(33,34,38,0.75));--settings-shadow-card:0 10px 40px rgba(0,0,0,0.3);--settings-shadow-inset:inset 0 1px 0 rgba(255,255,255,0.05);--settings-shadow-minibtn:0 2px 6px rgba(0,0,0,0.2);--settings-shadow-minibtn-hover:0 5px 12px rgba(0,0,0,0.3);--settings-bg-var-row:#2d2f37;--settings-text-input:#f9fafb;--settings-text-primary-btn:#e0f2fe;--settings-border-input:#4b5563;--settings-bg-btn-primary:linear-gradient(180deg,#3b82f6,#2563eb);--settings-border-btn-primary:#1d4ed8;--settings-bg-btn-subtle:linear-gradient(180deg,#4b5563,#374151);--settings-bg-type-chip:#3730a3;--settings-border-type-chip:#4f46e5;--settings-bg-switch-track:#4b5563;--settings-bg-switch-handle:#d1d5db;--settings-shadow-switch-handle:0 1px 3px rgba(0,0,0,0.4);--settings-bg-switch-checked:#3b82f6;--settings-text-hint-ok:#34d399;--settings-text-hint-bad:#ef4444;--actions-bg-glass:linear-gradient(180deg,rgba(40,42,48,0.8),rgba(33,34,38,0.75));--actions-shadow-card:0 10px 40px rgba(0,0,0,0.3);--actions-btn-bg:linear-gradient(180deg,#4b5563,#374151);--actions-btn-text:#d1d5db;--actions-btn-primary-bg:linear-gradient(180deg,#3b82f6,#2563eb);--actions-btn-primary-border:#1d4ed8;--actions-btn-primary-text:#f1f5f9;--actions-btn-subtle-bg:linear-gradient(180deg,#4b5563,#374151);--actions-btn-subtle-border:#6b7280;--actions-shadow-btn-active:0 2px 8px rgba(0,0,0,0.2);--actions-outline-focus:#2563eb;--accordion-bg:var(--bg-solid);--accordion-body-bg:rgba(45,47,55,0.5);--meta-bg:linear-gradient(180deg,#2d2f37,#24262b);--meta-shadow:0 6px 18px rgba(0,0,0,0.2);--meta-key-bg:#374151;--meta-glow-bg:linear-gradient(90deg,#3b82f6,#8b5cf6,#10b981,#ec4899);--json-hover-bg:rgba(147,197,253,0.1);--json-tree-line:rgba(107,114,128,0.4);--json-key-color:#e5e7eb;--json-val-string:#6ee7b7;--json-val-number:#c4b5fd;--json-val-boolean:#7dd3fc;--json-val-null:#9ca3af;--json-caret-shadow:0 1px 0 rgba(255,255,255,0.05),0 2px 6px rgba(0,0,0,0.2);--json-caret-open-shadow:0 3px 10px rgba(0,0,0,0.3);--tab-active-shadow:0 0 0 3px rgba(59,130,246,0.4);--tab-content-bg:rgba(45,47,55,0.5);--ball-hue:220;--ball-sat:10%;--ball-lum:25%;--ball-shadow-color:rgba(0,0,0,0.3);--ball-glow-color:rgba(150,180,210,0.4);--ball-inner-shadow-color:rgba(0,0,0,0.4);--ball-specular-color:rgba(255,255,255,0.15);--ball-glass-color:rgba(255,255,255,0.05);--ball-focus-outline:rgba(150,180,210,0.7);--ball-logo-bg:linear-gradient(180deg,rgba(255,255,255,0.9) 0%,rgba(233,213,255,0.6) 45%,rgba(220,200,255,0.5) 65%,rgba(191,128,255,0.65) 100%),linear-gradient(180deg,rgba(0,0,0,0.45),rgba(0,0,0,0) 60%);--ball-logo-shadow-top:rgba(255,255,255,0.6);--ball-logo-shadow-near:rgba(0,0,0,0.3);--ball-logo-shadow-far:rgba(138,43,226,0.45);--ball-logo-filter-glow:drop-shadow(0 0 3px rgba(191,128,255,0.35))}\n','',{version:3,sources:['webpack://./src/ERA变量框架/ui/components/ThemeManager.vue'],names:[],mappings:'AAmBA,MAEE,qFAA8F,CAC9F,oFAA6F,CAC7F,eAAgB,CAChB,+BAAmC,CACnC,gCAAoC,CACpC,qCAAyC,CACzC,gCAAoC,CACpC,8BAAkC,CAClC,gCAAoC,CACpC,oBAAqB,CACrB,uBAAwB,CACxB,qBAAsB,CACtB,2CAA+C,CAC/C,0CAA8C,CAC9C,iDAAqD,CACrD,kDAAsD,CACtD,iDAAoD,CACpD,mBAAoB,CACpB,8BAAkC,CAClC,oDAAuD,CACvD,sBAAuB,CACvB,wBAAyB,CACzB,oDAAuD,CACvD,sBAAuB,CACvB,wBAAyB,CACzB,yDAA4D,CAC5D,2BAA4B,CAC5B,6BAA8B,CAG9B,yFAAkG,CAClG,mDAAuD,CACvD,0CAA2C,CAC3C,oDAAwD,CACxD,0DAA8D,CAC9D,6DAAgE,CAChE,6BAA8B,CAC9B,mCAAoC,CACpC,+BAAgC,CAChC,iEAAoE,CACpE,qCAAsC,CACtC,gEAAmE,CACnE,+BAAgC,CAChC,mCAAoC,CACpC,kCAAmC,CACnC,gCAAiC,CACjC,yDAA6D,CAC7D,oCAAqC,CACrC,+BAAgC,CAChC,gCAAiC,CAGjC,wFAAiG,CACjG,kDAAsD,CACtD,wDAA2D,CAC3D,0BAA2B,CAC3B,gEAAmE,CACnE,oCAAqC,CACrC,kCAAmC,CACnC,+DAAkE,CAClE,mCAAoC,CACpC,qDAAyD,CACzD,+BAAgC,CAGhC,mDAAsD,CACtD,0CAA8C,CAG9C,iDAAoD,CACpD,yCAA6C,CAC7C,qBAAsB,CACtB,qEAA0E,CAG1E,qCAAyC,CACzC,uCAA2C,CAC3C,wBAAyB,CACzB,yBAA0B,CAC1B,yBAA0B,CAC1B,0BAA2B,CAC3B,uBAAwB,CACxB,2DAAgE,CAChE,oDAAwD,CAGxD,oDAAwD,CACxD,uCAA2C,CAG3C,cAAe,CACf,cAAe,CACf,cAAe,CACf,oCAAwC,CACxC,wCAA4C,CAC5C,yCAA6C,CAC7C,2CAA+C,CAC/C,wCAA4C,CAC5C,2CAA+C,CAC/C,8DAAiE,CACjE,uCAA2C,CAC3C,6CAAiD,CACjD,sCAA0C,CAC1C,4DACF,CAGA,YAEE,8EAAuF,CACvF,4EAAqF,CACrF,kBAAmB,CACnB,4BAAgC,CAChC,8BAAkC,CAClC,sCAA0C,CAC1C,qCAAyC,CACzC,oCAAwC,CACxC,qCAAyC,CACzC,oBAAqB,CACrB,uBAAwB,CACxB,qBAAsB,CACtB,0CAA8C,CAC9C,0CAA8C,CAC9C,iDAAqD,CACrD,kDAAsD,CACtD,iDAAoD,CACpD,mBAAoB,CACpB,mCAAuC,CACvC,oDAAuD,CACvD,sBAAuB,CACvB,wBAAyB,CACzB,oDAAuD,CACvD,sBAAuB,CACvB,wBAAyB,CACzB,yDAA4D,CAC5D,2BAA4B,CAC5B,6BAA8B,CAG9B,kFAA2F,CAC3F,kDAAsD,CACtD,4DAAgE,CAChE,mDAAuD,CACvD,0DAA8D,CAC9D,6BAA8B,CAC9B,6BAA8B,CAC9B,mCAAoC,CACpC,+BAAgC,CAChC,iEAAoE,CACpE,qCAAsC,CACtC,gEAAmE,CACnE,+BAAgC,CAChC,mCAAoC,CACpC,kCAAmC,CACnC,mCAAoC,CACpC,yDAA6D,CAC7D,oCAAqC,CACrC,+BAAgC,CAChC,gCAAiC,CAGjC,iFAA0F,CAC1F,iDAAqD,CACrD,wDAA2D,CAC3D,0BAA2B,CAC3B,gEAAmE,CACnE,oCAAqC,CACrC,kCAAmC,CACnC,+DAAkE,CAClE,mCAAoC,CACpC,qDAAyD,CACzD,+BAAgC,CAGhC,8BAA+B,CAC/B,sCAA0C,CAG1C,iDAAoD,CACpD,wCAA4C,CAC5C,qBAAsB,CACtB,qEAA0E,CAG1E,qCAAyC,CACzC,sCAA0C,CAC1C,wBAAyB,CACzB,yBAA0B,CAC1B,yBAA0B,CAC1B,0BAA2B,CAC3B,uBAAwB,CACxB,4EAAoF,CACpF,mDAAuD,CAGvD,kDAAsD,CACtD,mCAAuC,CAGvC,cAAe,CACf,cAAe,CACf,cAAe,CACf,mCAAuC,CACvC,uCAA2C,CAC3C,yCAA6C,CAC7C,4CAAgD,CAChD,yCAA6C,CAC7C,0CAA8C,CAC9C,0MAQoE,CACpE,4CAAgD,CAChD,uCAA2C,CAC3C,4CAAgD,CAChD,mEACF',sourcesContent:['<script setup lang="ts">\nimport { defineExpose, ref } from \'vue\';\n\nconst isDarkMode = ref(false);\n\n// 通过 defineExpose 将状态和方法暴露给父组件\ndefineExpose({\n  isDarkMode,\n});\n<\/script>\n\n<style>\n/*\n  这个 style 标签没有 \'scoped\' 属性，\n  因此当 ThemeManager 组件被挂载时，\n  这里的所有样式都会作为全局样式注入到页面中。\n*/\n\n/* 亮色主题（默认） */\n:root {\n  /* === App.vue & General Styles === */\n  --bg-blur-heavy: linear-gradient(180deg, rgba(255, 255, 255, 0.75), rgba(255, 255, 255, 0.65));\n  --bg-blur-light: linear-gradient(90deg, rgba(255, 255, 255, 0.65), rgba(255, 255, 255, 0.45));\n  --bg-solid: #fff;\n  --bg-soft: rgba(255, 255, 255, 0.6);\n  --bg-empty: rgba(255, 255, 255, 0.5);\n  --border-strong: rgba(255, 255, 255, 0.6);\n  --border-normal: rgba(0, 0, 0, 0.08);\n  --border-soft: rgba(0, 0, 0, 0.06);\n  --border-dashed: rgba(0, 0, 0, 0.08);\n  --text-title: #1f2937;\n  --text-subtitle: #374151;\n  --text-normal: #6b7280;\n  --shadow-panel: 0 10px 40px rgba(0, 0, 0, 0.18);\n  --shadow-button: 0 2px 8px rgba(0, 0, 0, 0.08);\n  --shadow-button-hover: 0 6px 16px rgba(0, 0, 0, 0.12);\n  --shadow-inset: inset 0 1px 0 rgba(255, 255, 255, 0.6);\n  --chip-bg: linear-gradient(180deg, #fafafa, #f4f4f4);\n  --chip-text: #6b7280;\n  --chip-border: rgba(0, 0, 0, 0.06);\n  --chip-ok-bg: linear-gradient(180deg, #ecfdf5, #d1fae5);\n  --chip-ok-text: #065f46;\n  --chip-ok-border: #a7f3d0;\n  --mk-pill-bg: linear-gradient(180deg, #eef2ff, #e0e7ff);\n  --mk-pill-text: #4338ca;\n  --mk-pill-border: #c7d2fe;\n  --mk-pill-null-bg: linear-gradient(180deg, #f9fafb, #f3f4f6);\n  --mk-pill-null-text: #6b7280;\n  --mk-pill-null-border: #e5e7eb;\n\n  /* === EraSettingsPanel.vue Styles === */\n  --settings-bg-glass: linear-gradient(180deg, rgba(255, 255, 255, 0.76), rgba(255, 255, 255, 0.62));\n  --settings-shadow-card: 0 10px 40px rgba(0, 0, 0, 0.16);\n  --settings-shadow-inset: inset 0 1px 0 #fff;\n  --settings-shadow-minibtn: 0 2px 6px rgba(0, 0, 0, 0.06);\n  --settings-shadow-minibtn-hover: 0 5px 12px rgba(0, 0, 0, 0.1);\n  --settings-bg-var-row: linear-gradient(180deg, #ffffff, #f8fafc);\n  --settings-text-input: #111827;\n  --settings-text-primary-btn: #0f172a;\n  --settings-border-input: #e5e7eb;\n  --settings-bg-btn-primary: linear-gradient(180deg, #e0f2fe, #bfdbfe);\n  --settings-border-btn-primary: #93c5fd;\n  --settings-bg-btn-subtle: linear-gradient(180deg, #f9fafb, #f3f4f6);\n  --settings-bg-type-chip: #eef2ff;\n  --settings-border-type-chip: #c7d2fe;\n  --settings-bg-switch-track: #e5e7eb;\n  --settings-bg-switch-handle: #fff;\n  --settings-shadow-switch-handle: 0 1px 3px rgba(0, 0, 0, 0.2);\n  --settings-bg-switch-checked: #93c5fd;\n  --settings-text-hint-ok: #065f46;\n  --settings-text-hint-bad: #b91c1c;\n\n  /* === ActionButtons.vue & AboutEra.vue Styles === */\n  --actions-bg-glass: linear-gradient(180deg, rgba(255, 255, 255, 0.76), rgba(255, 255, 255, 0.62));\n  --actions-shadow-card: 0 10px 40px rgba(0, 0, 0, 0.16);\n  --actions-btn-bg: linear-gradient(180deg, #fafafa, #f3f4f6);\n  --actions-btn-text: #374151;\n  --actions-btn-primary-bg: linear-gradient(180deg, #e0f2fe, #bfdbfe);\n  --actions-btn-primary-border: #93c5fd;\n  --actions-btn-primary-text: #0f172a;\n  --actions-btn-subtle-bg: linear-gradient(180deg, #f9fafb, #f3f4f6);\n  --actions-btn-subtle-border: #e5e7eb;\n  --actions-shadow-btn-active: 0 2px 8px rgba(0, 0, 0, 0.1);\n  --actions-outline-focus: #60a5fa;\n\n  /* === EraAccordion.vue Styles === */\n  --accordion-bg: linear-gradient(180deg, #fff, #fafafa);\n  --accordion-body-bg: rgba(255, 255, 255, 0.82);\n\n  /* === MetaHeader.vue Styles === */\n  --meta-bg: linear-gradient(180deg, #ffffff, #f9fafb);\n  --meta-shadow: 0 6px 18px rgba(0, 0, 0, 0.06);\n  --meta-key-bg: #f3f4f6;\n  --meta-glow-bg: linear-gradient(90deg, #60a5fa, #a78bfa, #34d399, #f472b6);\n\n  /* === JsonNode.vue Styles === */\n  --json-hover-bg: rgba(59, 130, 246, 0.06);\n  --json-tree-line: rgba(107, 114, 128, 0.25);\n  --json-key-color: #1f2937;\n  --json-val-string: #047857;\n  --json-val-number: #7c3aed;\n  --json-val-boolean: #0369a1;\n  --json-val-null: #9ca3af;\n  --json-caret-shadow: 0 1px 0 #fff, 0 2px 6px rgba(0, 0, 0, 0.06);\n  --json-caret-open-shadow: 0 3px 10px rgba(0, 0, 0, 0.12);\n\n  /* === TabSwitch.vue Styles === */\n  --tab-active-shadow: 0 0 0 3px rgba(147, 197, 253, 0.35);\n  --tab-content-bg: rgba(255, 255, 255, 0.86);\n\n  /* === FloatingBall.vue Styles === */\n  --ball-hue: 210;\n  --ball-sat: 15%;\n  --ball-lum: 95%;\n  --ball-shadow-color: rgba(0, 0, 0, 0.15);\n  --ball-glow-color: rgba(180, 200, 220, 0.55);\n  --ball-inner-shadow-color: rgba(0, 0, 0, 0.1);\n  --ball-specular-color: rgba(255, 255, 255, 0.9);\n  --ball-glass-color: rgba(255, 255, 255, 0.1);\n  --ball-focus-outline: rgba(180, 200, 220, 0.85);\n  --ball-logo-bg: linear-gradient(180deg, #8899aa 0%, #556677 100%);\n  --ball-logo-shadow-top: rgba(0, 0, 0, 0.25);\n  --ball-logo-shadow-near: rgba(255, 255, 255, 0.6);\n  --ball-logo-shadow-far: rgba(0, 0, 0, 0.1);\n  --ball-logo-filter-glow: drop-shadow(0 0 1px rgba(0, 0, 0, 0.2));\n}\n\n/* 暗色主题 */\n.dark-theme {\n  /* === App.vue & General Styles === */\n  --bg-blur-heavy: linear-gradient(180deg, rgba(35, 37, 43, 0.8), rgba(28, 29, 33, 0.75));\n  --bg-blur-light: linear-gradient(90deg, rgba(50, 52, 59, 0.7), rgba(42, 43, 48, 0.6));\n  --bg-solid: #2d2f37;\n  --bg-soft: rgba(60, 63, 73, 0.5);\n  --bg-empty: rgba(60, 63, 73, 0.25);\n  --border-strong: rgba(255, 255, 255, 0.12);\n  --border-normal: rgba(255, 255, 255, 0.1);\n  --border-soft: rgba(255, 255, 255, 0.08);\n  --border-dashed: rgba(255, 255, 255, 0.1);\n  --text-title: #f9fafb;\n  --text-subtitle: #d1d5db;\n  --text-normal: #9ca3af;\n  --shadow-panel: 0 10px 40px rgba(0, 0, 0, 0.3);\n  --shadow-button: 0 2px 8px rgba(0, 0, 0, 0.25);\n  --shadow-button-hover: 0 6px 16px rgba(0, 0, 0, 0.35);\n  --shadow-inset: inset 0 1px 0 rgba(255, 255, 255, 0.1);\n  --chip-bg: linear-gradient(180deg, #4b5563, #374151);\n  --chip-text: #e5e7eb;\n  --chip-border: rgba(255, 255, 255, 0.1);\n  --chip-ok-bg: linear-gradient(180deg, #064e3b, #052e22);\n  --chip-ok-text: #a7f3d0;\n  --chip-ok-border: #047857;\n  --mk-pill-bg: linear-gradient(180deg, #3730a3, #312e81);\n  --mk-pill-text: #c7d2fe;\n  --mk-pill-border: #4f46e5;\n  --mk-pill-null-bg: linear-gradient(180deg, #4b5563, #374151);\n  --mk-pill-null-text: #9ca3af;\n  --mk-pill-null-border: #6b7280;\n\n  /* === EraSettingsPanel.vue Styles === */\n  --settings-bg-glass: linear-gradient(180deg, rgba(40, 42, 48, 0.8), rgba(33, 34, 38, 0.75));\n  --settings-shadow-card: 0 10px 40px rgba(0, 0, 0, 0.3);\n  --settings-shadow-inset: inset 0 1px 0 rgba(255, 255, 255, 0.05);\n  --settings-shadow-minibtn: 0 2px 6px rgba(0, 0, 0, 0.2);\n  --settings-shadow-minibtn-hover: 0 5px 12px rgba(0, 0, 0, 0.3);\n  --settings-bg-var-row: #2d2f37;\n  --settings-text-input: #f9fafb;\n  --settings-text-primary-btn: #e0f2fe;\n  --settings-border-input: #4b5563;\n  --settings-bg-btn-primary: linear-gradient(180deg, #3b82f6, #2563eb);\n  --settings-border-btn-primary: #1d4ed8;\n  --settings-bg-btn-subtle: linear-gradient(180deg, #4b5563, #374151);\n  --settings-bg-type-chip: #3730a3;\n  --settings-border-type-chip: #4f46e5;\n  --settings-bg-switch-track: #4b5563;\n  --settings-bg-switch-handle: #d1d5db;\n  --settings-shadow-switch-handle: 0 1px 3px rgba(0, 0, 0, 0.4);\n  --settings-bg-switch-checked: #3b82f6;\n  --settings-text-hint-ok: #34d399;\n  --settings-text-hint-bad: #ef4444;\n\n  /* === ActionButtons.vue & AboutEra.vue Styles === */\n  --actions-bg-glass: linear-gradient(180deg, rgba(40, 42, 48, 0.8), rgba(33, 34, 38, 0.75));\n  --actions-shadow-card: 0 10px 40px rgba(0, 0, 0, 0.3);\n  --actions-btn-bg: linear-gradient(180deg, #4b5563, #374151);\n  --actions-btn-text: #d1d5db;\n  --actions-btn-primary-bg: linear-gradient(180deg, #3b82f6, #2563eb);\n  --actions-btn-primary-border: #1d4ed8;\n  --actions-btn-primary-text: #f1f5f9;\n  --actions-btn-subtle-bg: linear-gradient(180deg, #4b5563, #374151);\n  --actions-btn-subtle-border: #6b7280;\n  --actions-shadow-btn-active: 0 2px 8px rgba(0, 0, 0, 0.2);\n  --actions-outline-focus: #2563eb;\n\n  /* === EraAccordion.vue Styles === */\n  --accordion-bg: var(--bg-solid);\n  --accordion-body-bg: rgba(45, 47, 55, 0.5);\n\n  /* === MetaHeader.vue Styles === */\n  --meta-bg: linear-gradient(180deg, #2d2f37, #24262b);\n  --meta-shadow: 0 6px 18px rgba(0, 0, 0, 0.2);\n  --meta-key-bg: #374151;\n  --meta-glow-bg: linear-gradient(90deg, #3b82f6, #8b5cf6, #10b981, #ec4899);\n\n  /* === JsonNode.vue Styles === */\n  --json-hover-bg: rgba(147, 197, 253, 0.1);\n  --json-tree-line: rgba(107, 114, 128, 0.4);\n  --json-key-color: #e5e7eb;\n  --json-val-string: #6ee7b7;\n  --json-val-number: #c4b5fd;\n  --json-val-boolean: #7dd3fc;\n  --json-val-null: #9ca3af;\n  --json-caret-shadow: 0 1px 0 rgba(255, 255, 255, 0.05), 0 2px 6px rgba(0, 0, 0, 0.2);\n  --json-caret-open-shadow: 0 3px 10px rgba(0, 0, 0, 0.3);\n\n  /* === TabSwitch.vue Styles === */\n  --tab-active-shadow: 0 0 0 3px rgba(59, 130, 246, 0.4);\n  --tab-content-bg: rgba(45, 47, 55, 0.5);\n\n  /* === FloatingBall.vue Styles === */\n  --ball-hue: 220;\n  --ball-sat: 10%;\n  --ball-lum: 25%;\n  --ball-shadow-color: rgba(0, 0, 0, 0.3);\n  --ball-glow-color: rgba(150, 180, 210, 0.4);\n  --ball-inner-shadow-color: rgba(0, 0, 0, 0.4);\n  --ball-specular-color: rgba(255, 255, 255, 0.15);\n  --ball-glass-color: rgba(255, 255, 255, 0.05);\n  --ball-focus-outline: rgba(150, 180, 210, 0.7);\n  --ball-logo-bg:\n    linear-gradient(\n      180deg,\n      rgba(255, 255, 255, 0.9) 0%,\n      rgba(233, 213, 255, 0.6) 45%,\n      rgba(220, 200, 255, 0.5) 65%,\n      rgba(191, 128, 255, 0.65) 100%\n    ),\n    linear-gradient(180deg, rgba(0, 0, 0, 0.45), rgba(0, 0, 0, 0) 60%);\n  --ball-logo-shadow-top: rgba(255, 255, 255, 0.6);\n  --ball-logo-shadow-near: rgba(0, 0, 0, 0.3);\n  --ball-logo-shadow-far: rgba(138, 43, 226, 0.45);\n  --ball-logo-filter-glow: drop-shadow(0 0 3px rgba(191, 128, 255, 0.35));\n}\n</style>\n'],sourceRoot:''}]);const i=s},441:(e,n)=>{n.A=(e,n)=>{const t=e.__vccOpts||e;for(const[e,a]of n)t[e]=a;return t}},495:(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});var a=t(790),r=t.n(a),o=t(54),s=t.n(o)()(r());s.push([e.id,'.json-line[data-v-7005772e]{position:relative;display:flex;align-items:center;gap:6px;padding:2px 6px;border-radius:6px;transition:background 0.2s ease}.json-line[data-v-7005772e]:hover{background:var(--json-hover-bg)}.json-children[data-v-7005772e]{border-left:1px dashed var(--json-tree-line);transition:border-color 0.3s ease}.key[data-v-7005772e]{color:var(--json-key-color);font-weight:700;transition:color 0.3s ease}.colon[data-v-7005772e]{color:var(--text-normal);transition:color 0.3s ease}.brace[data-v-7005772e]{color:var(--text-normal);transition:color 0.3s ease}.summary[data-v-7005772e]{color:var(--text-normal);margin-left:4px;transition:color 0.3s ease}.val.string[data-v-7005772e]{color:var(--json-val-string)}.val.number[data-v-7005772e]{color:var(--json-val-number)}.val.boolean[data-v-7005772e]{color:var(--json-val-boolean)}.val.null[data-v-7005772e]{color:var(--json-val-null)}.val.undefined[data-v-7005772e]{color:var(--json-val-null)}.caret[data-v-7005772e]{width:18px;height:18px;border:1px solid var(--border-soft);border-radius:4px;background:var(--bg-solid);line-height:16px;text-align:center;font-size:10px;color:var(--text-normal);cursor:pointer;box-shadow:var(--json-caret-shadow);transition:transform 0.18s ease,box-shadow 0.18s ease,background 0.3s ease,border-color 0.3s ease,color 0.3s ease}.caret.open[data-v-7005772e]{transform:rotate(90deg);box-shadow:var(--json-caret-open-shadow)}.node[data-v-7005772e]{overflow:clip;contain:paint;min-height:0}.json-children[data-v-7005772e]{overflow:clip;contain:paint}\n','',{version:3,sources:['webpack://./src/ERA变量框架/ui/template/JsonNode.vue'],names:[],mappings:'AAoJA,4BACE,iBAAkB,CAClB,YAAa,CACb,kBAAmB,CACnB,OAAQ,CACR,eAAgB,CAChB,iBAAkB,CAClB,+BACF,CACA,kCACE,+BACF,CACA,gCACE,4CAA6C,CAC7C,iCACF,CAGA,sBACE,2BAA4B,CAC5B,eAAgB,CAChB,0BACF,CACA,wBACE,wBAAyB,CACzB,0BACF,CACA,wBACE,wBAAyB,CACzB,0BACF,CACA,0BACE,wBAAyB,CACzB,eAAgB,CAChB,0BACF,CACA,6BACE,4BACF,CACA,6BACE,4BACF,CACA,8BACE,6BACF,CACA,2BACE,0BACF,CACA,gCACE,0BACF,CAGA,wBACE,UAAW,CACX,WAAY,CACZ,mCAAoC,CACpC,iBAAkB,CAClB,0BAA2B,CAC3B,gBAAiB,CACjB,iBAAkB,CAClB,cAAe,CACf,wBAAyB,CACzB,cAAe,CACf,mCAAoC,CACpC,iHAMF,CACA,6BACE,uBAAwB,CACxB,wCACF,CAGA,uBAEE,aAAc,CACd,aAAc,CACd,YACF,CAEA,gCAEE,aAAc,CACd,aACF',sourcesContent:['<template>\n  \x3c!-- 单条节点（支持递归） --\x3e\n  <div class="node">\n    \x3c!-- 每个键值对 / 数组项的容器 --\x3e\n    <div class="json-line" :style="{ paddingLeft: level * 14 + \'px\' }">\n      \x3c!-- 行+缩进 --\x3e\n      <button v-if="foldable" class="caret" :class="{ open }" aria-label="toggle" @click="open = !open">▸</button>\n      \x3c!-- 折叠箭头按钮 --\x3e\n\n      <span class="key">{{ k }}</span\n      ><span class="colon">:</span>\n      \x3c!-- 键与冒号 --\x3e\n\n      \x3c!-- 可折叠容器：只显示括号与摘要；展开后由下方 children 区域递归渲染 --\x3e\n      <template v-if="foldable">\n        <span class="brace">{{ isArray ? \'[\' : \'{\' }}</span>\n        \x3c!-- 容器起始括号 --\x3e\n        <span v-if="!open" class="summary">{{ summary }}</span>\n        \x3c!-- 收起时的摘要 --\x3e\n      </template>\n\n      \x3c!-- 原始值：直接着色渲染 --\x3e\n      <template v-else>\n        <span class="val" :class="type">{{ primitiveText }}</span>\n        \x3c!-- 原始值文本 --\x3e\n      </template>\n    </div>\n\n    \x3c!-- 子元素区域：仅当可折叠且处于展开态时显示 --\x3e\n    <template v-if="foldable && open">\n      <div class="json-children">\n        \x3c!-- 递归：自引用同名组件 JsonNode（依赖 name: \'JsonNode\' 实现自递归） --\x3e\n        <JsonNode\n          v-for="(childVal, childKey) in childEntries"\n          :key="path + \'/\' + String(childKey)"\n          :k="String(childKey)"\n          :v="childVal"\n          :path="path + \'/\' + String(childKey)"\n          :level="level + 1"\n          :default-collapsed="defaultCollapsed"\n          :max-depth="maxDepth"\n        />\n        <div class="json-line" :style="{ paddingLeft: level * 14 + \'px\' }">\n          <span class="brace">{{ isArray ? \']\' : \'}\' }}</span>\n          \x3c!-- 容器闭合括号 --\x3e\n        </div>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script lang="ts">\nimport { computed, defineComponent, onMounted, ref, watch } from \'vue\'; // 引入响应式/组件工具\nimport { Logger } from \'../../utils/log\';\n\nexport default defineComponent({\n  name: \'JsonNode\', // 关键：为自递归提供组件名\n  props: {\n    k: { type: [String, Number], required: true }, // 当前键（或数组下标）\n    v: { required: true }, // 当前值\n    path: { type: String, required: true }, // 路径（仅用于 key/调试）\n    level: { type: Number, required: true }, // 层级（用于缩进）\n    defaultCollapsed: { type: Boolean, default: true }, // 默认是否折叠\n    maxDepth: { type: Number, default: 3 }, // 初次展开的最大深度\n  },\n  setup(p) {\n    const logger = new Logger();\n\n    onMounted(() => {\n      logger.debug(\'onMounted\', \'组件已挂载\', { props: p });\n    });\n\n    // 节点类型判定\n    const type = computed(() => {\n      const val = p.v;\n      if (val === null) return \'null\';\n      if (Array.isArray(val)) return \'array\';\n      const t = typeof val;\n      if (t === \'object\') return \'object\';\n      if (t === \'undefined\') return \'undefined\';\n      return t as \'string\' | \'number\' | \'boolean\' | \'bigint\' | \'symbol\' | \'function\';\n    });\n\n    // 是否数组/对象\n    const isArray = computed(() => type.value === \'array\');\n    const isObject = computed(() => type.value === \'object\');\n\n    // 是否可折叠\n    const foldable = computed(() => isArray.value || isObject.value);\n\n    // 初始开合：不超过 maxDepth 的层级默认展开；否则遵循 defaultCollapsed\n    const open = ref<boolean>(p.level <= (p.maxDepth ?? 3) ? true : !p.defaultCollapsed);\n\n    watch(open, newOpenState => {\n      logger.debug(\'watch:open\', `折叠状态改变为: ${newOpenState ? \'展开\' : \'收起\'}`);\n    });\n\n    // 原始值渲染文本（补足 undefined / bigint / symbol）\n    const primitiveText = computed(() => {\n      const val = p.v as any;\n      switch (type.value) {\n        case \'string\':\n          return JSON.stringify(val);\n        case \'number\':\n          return String(val);\n        case \'boolean\':\n          return val ? \'true\' : \'false\';\n        case \'null\':\n          return \'null\';\n        case \'undefined\':\n          return \'undefined\';\n        case \'bigint\':\n          return String(val) + \'n\';\n        case \'symbol\':\n          return String(val);\n        case \'function\':\n          return \'ƒ()\';\n        default:\n          return \'\';\n      }\n    });\n\n    // 收起时的摘要信息\n    const summary = computed(() => {\n      if (isArray.value) return `Array[${(p.v as any[]).length}]`;\n      if (isObject.value) return `Object{${Object.keys(p.v || {}).length}}`;\n      return \'\';\n    });\n\n    // 子项列表：对象 → 其 entries；数组 → 直接枚举索引和值\n    const childEntries = computed<Record<string, any>>(() => {\n      if (isObject.value) return p.v as Record<string, any>;\n      if (isArray.value) {\n        const out: Record<string, any> = {};\n        (p.v as any[]).forEach((cv, idx) => {\n          out[String(idx)] = cv;\n        });\n        return out;\n      }\n      return {};\n    });\n\n    return { type, isArray, foldable, open, primitiveText, summary, childEntries };\n  },\n});\n<\/script>\n\n<style scoped>\n.json-line {\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  padding: 2px 6px;\n  border-radius: 6px;\n  transition: background 0.2s ease;\n}\n.json-line:hover {\n  background: var(--json-hover-bg);\n}\n.json-children {\n  border-left: 1px dashed var(--json-tree-line);\n  transition: border-color 0.3s ease;\n}\n\n/* 结构元素与着色 */\n.key {\n  color: var(--json-key-color);\n  font-weight: 700;\n  transition: color 0.3s ease;\n}\n.colon {\n  color: var(--text-normal);\n  transition: color 0.3s ease;\n}\n.brace {\n  color: var(--text-normal);\n  transition: color 0.3s ease;\n}\n.summary {\n  color: var(--text-normal);\n  margin-left: 4px;\n  transition: color 0.3s ease;\n}\n.val.string {\n  color: var(--json-val-string);\n}\n.val.number {\n  color: var(--json-val-number);\n}\n.val.boolean {\n  color: var(--json-val-boolean);\n}\n.val.null {\n  color: var(--json-val-null);\n}\n.val.undefined {\n  color: var(--json-val-null);\n}\n\n/* 折叠箭头 */\n.caret {\n  width: 18px;\n  height: 18px;\n  border: 1px solid var(--border-soft);\n  border-radius: 4px;\n  background: var(--bg-solid);\n  line-height: 16px;\n  text-align: center;\n  font-size: 10px;\n  color: var(--text-normal);\n  cursor: pointer;\n  box-shadow: var(--json-caret-shadow);\n  transition:\n    transform 0.18s ease,\n    box-shadow 0.18s ease,\n    background 0.3s ease,\n    border-color 0.3s ease,\n    color 0.3s ease;\n}\n.caret.open {\n  transform: rotate(90deg);\n  box-shadow: var(--json-caret-open-shadow);\n}\n\n/* ===[新增] 防溢出：节点与子树都裁剪（配合上层折叠时彻底看不见） === */\n.node {\n  /* 单个节点容器 */\n  overflow: clip; /* 裁剪节点内部所有绘制 */\n  contain: paint; /* 隔离绘制，避免 1px 渲染外泄 */\n  min-height: 0; /* 防“最小高度”把父级撑开 */\n}\n\n.json-children {\n  /* 子节点区域 */\n  overflow: clip; /* 裁剪子树（含左侧虚线等装饰） */\n  contain: paint; /* 防止子元素阴影/边框超界 */\n}\n</style>\n'],sourceRoot:''}]);const i=s},514:(e,n,t)=>{var a=t(4);a.__esModule&&(a=a.default),'string'==typeof a&&(a=[[e.id,a,'']]),a.locals&&(e.exports=a.locals);(0,t(424).A)('4633824b',a,!1,{ssrId:!0})},534:(e,n,t)=>{var a=t(940);a.__esModule&&(a=a.default),'string'==typeof a&&(a=[[e.id,a,'']]),a.locals&&(e.exports=a.locals);(0,t(424).A)('ec029f24',a,!1,{ssrId:!0})},574:(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});var a=t(790),r=t.n(a),o=t(54),s=t.n(o)()(r());s.push([e.id,'.details-wrapper[data-v-6079192c]{display:flex;flex-direction:column;gap:10px}.detail-block[data-v-6079192c]{padding:10px 12px;background:var(--bg-soft);border:1px solid var(--border-soft);border-radius:10px;transition:background 0.3s ease,border-color 0.3s ease}.detail-title[data-v-6079192c]{margin:0 0 8px;font-size:13px;font-weight:800;color:var(--text-subtitle);transition:color 0.3s ease}\n','',{version:3,sources:['webpack://./src/ERA变量框架/ui/components/EraPanelContent/OperationDetails.vue'],names:[],mappings:'AA4BA,kCACE,YAAa,CACb,qBAAsB,CACtB,QACF,CAEA,+BACE,iBAAkB,CAClB,yBAA0B,CAC1B,mCAAoC,CACpC,kBAAmB,CACnB,sDAGF,CAEA,+BACE,cAAe,CACf,cAAe,CACf,eAAgB,CAChB,0BAA2B,CAC3B,0BACF',sourcesContent:['<template>\n  <EraAccordion title="ERA 最新操作详情" :default-open="false">\n    <template #default>\n      <div class="details-wrapper">\n        <div class="detail-block">\n          <h4 class="detail-title">SelectedMks（数组）</h4>\n          <PrettyJsonViewer :value="data.selectedMks" :default-collapsed="true" :max-depth="3" />\n        </div>\n        <div class="detail-block">\n          <h4 class="detail-title">EditLogs（对象）</h4>\n          <PrettyJsonViewer :value="data.editLogs" :default-collapsed="true" :max-depth="2" />\n        </div>\n      </div>\n    </template>\n  </EraAccordion>\n</template>\n\n<script setup lang="ts">\nimport type { WriteDonePayload } from \'../../../utils/constants\';\nimport EraAccordion from \'../../template/EraAccordion.vue\';\nimport PrettyJsonViewer from \'../../template/PrettyJsonViewer.vue\';\n\ndefineProps<{\n  data: WriteDonePayload;\n}>();\n<\/script>\n\n<style scoped>\n.details-wrapper {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.detail-block {\n  padding: 10px 12px;\n  background: var(--bg-soft);\n  border: 1px solid var(--border-soft);\n  border-radius: 10px;\n  transition:\n    background 0.3s ease,\n    border-color 0.3s ease;\n}\n\n.detail-title {\n  margin: 0 0 8px;\n  font-size: 13px;\n  font-weight: 800;\n  color: var(--text-subtitle);\n  transition: color 0.3s ease;\n}\n</style>\n'],sourceRoot:''}]);const i=s},581:(e,n,t)=>{var a=t(495);a.__esModule&&(a=a.default),'string'==typeof a&&(a=[[e.id,a,'']]),a.locals&&(e.exports=a.locals);(0,t(424).A)('3f0f9b79',a,!1,{ssrId:!0})},691:(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});var a=t(790),r=t.n(a),o=t(54),s=t.n(o)()(r());s.push([e.id,'.settings-card[data-v-63750456]{width:100%;padding:12px;background:var(--settings-bg-glass);border:1px solid var(--border-strong);border-radius:16px;backdrop-filter:blur(10px);box-shadow:var(--settings-shadow-card),var(--settings-shadow-inset);display:flex;flex-direction:column;gap:10px;transition:background 0.3s ease,border-color 0.3s ease}.card-header[data-v-63750456]{display:flex;align-items:center;justify-content:space-between;padding:8px 10px;border-radius:10px;border:1px solid var(--border-soft);background:var(--chip-bg);color:var(--text-title);font-weight:800;font-size:13px;cursor:pointer;box-shadow:var(--settings-shadow-inset),var(--shadow-button);transition:background 0.3s ease,border-color 0.3s ease,color 0.3s ease,transform 0.2s ease,box-shadow 0.2s ease}.card-header[data-v-63750456]:hover{transform:translateY(-1px);box-shadow:var(--settings-shadow-inset),var(--shadow-button-hover)}.title[data-v-63750456]{pointer-events:none}.chev[data-v-63750456]{opacity:0.7}.content[data-v-63750456]{display:flex;flex-direction:column;gap:10px}.toolbar[data-v-63750456]{display:flex;align-items:center;gap:8px}.spacer[data-v-63750456]{flex:1}.mini-btn[data-v-63750456]{padding:6px 10px;border-radius:8px;border:1px solid var(--border-normal);background:var(--chip-bg);color:var(--text-normal);cursor:pointer;font-size:12px;font-weight:700;box-shadow:var(--settings-shadow-inset),var(--settings-shadow-minibtn);transition:background 0.3s ease,border-color 0.3s ease,color 0.3s ease,transform 0.2s ease,box-shadow 0.2s ease}.mini-btn[data-v-63750456]:hover{transform:translateY(-1px);box-shadow:var(--settings-shadow-inset),var(--settings-shadow-minibtn-hover)}.mini-btn.primary[data-v-63750456]{background:var(--settings-bg-btn-primary);border-color:var(--settings-border-btn-primary);color:var(--settings-text-primary-btn)}.mini-btn.subtle[data-v-63750456]{background:var(--settings-bg-btn-subtle);border-color:var(--settings-border-input)}.vars[data-v-63750456]{display:flex;flex-direction:column;gap:8px}.var-row[data-v-63750456]{display:grid;grid-template-columns:1fr minmax(120px,1.2fr) auto;align-items:center;gap:10px;padding:8px 10px;border:1px solid var(--border-soft);border-radius:10px;background:var(--settings-bg-var-row);transition:background 0.3s ease,border-color 0.3s ease}.var-key[data-v-63750456]{font-family:ui-monospace,SFMono-Regular,Menlo,Consolas,monospace;font-size:12px;color:var(--text-subtitle);overflow:hidden;text-overflow:ellipsis;white-space:nowrap;transition:color 0.3s ease}.var-editor[data-v-63750456]{display:flex;align-items:center;gap:8px}.ipt[data-v-63750456]{width:100%;padding:8px 10px;border-radius:8px;border:1px solid var(--settings-border-input);background:var(--bg-solid);font-size:12px;color:var(--settings-text-input);box-shadow:var(--settings-shadow-inset);transition:background 0.3s ease,border-color 0.3s ease,color 0.3s ease}.ta[data-v-63750456]{min-height:64px;font-family:ui-monospace,SFMono-Regular,Menlo,Consolas,monospace}.type-chip[data-v-63750456]{font-size:11px;color:var(--text-subtitle);background:var(--settings-bg-type-chip);border:1px solid var(--settings-border-type-chip);border-radius:999px;padding:4px 8px;white-space:nowrap;transition:background 0.3s ease,border-color 0.3s ease,color 0.3s ease}.switch[data-v-63750456]{position:relative;width:42px;height:24px;display:inline-block}.switch input[data-v-63750456]{opacity:0;width:0;height:0}.switch .track[data-v-63750456]{position:absolute;inset:0;border-radius:999px;background:var(--settings-bg-switch-track);box-shadow:var(--settings-shadow-inset);transition:background 0.2s ease}.switch .track[data-v-63750456]::after{content:\'\';position:absolute;top:3px;left:3px;width:18px;height:18px;border-radius:50%;background:var(--settings-bg-switch-handle);box-shadow:var(--settings-shadow-switch-handle);transition:transform 0.2s ease,background 0.3s ease}.switch input:checked+.track[data-v-63750456]{background:var(--settings-bg-switch-checked)}.switch input:checked+.track[data-v-63750456]::after{transform:translateX(18px)}.hint[data-v-63750456]{font-size:11px;color:var(--text-normal);transition:color 0.3s ease}.hint.ok[data-v-63750456]{color:var(--settings-text-hint-ok)}.hint.bad[data-v-63750456]{color:var(--settings-text-hint-bad)}.placeholder[data-v-63750456]{padding:10px;color:var(--text-normal);font-size:12px;border:1px dashed var(--border-dashed);border-radius:10px;background:var(--bg-placeholder);transition:background 0.3s ease,border-color 0.3s ease,color 0.3s ease}\n','',{version:3,sources:['webpack://./src/ERA变量框架/ui/components/RightRailContent/EraSettingsPanel.vue'],names:[],mappings:'AA2PA,gCAEE,UAAW,CACX,YAAa,CACb,mCAAoC,CACpC,qCAAsC,CACtC,kBAAmB,CACnB,0BAA2B,CAC3B,mEAAqE,CACrE,YAAa,CACb,qBAAsB,CACtB,QAAS,CACT,sDAGF,CAGA,8BAEE,YAAa,CACb,kBAAmB,CACnB,6BAA8B,CAC9B,gBAAiB,CACjB,kBAAmB,CACnB,mCAAoC,CACpC,yBAA0B,CAC1B,uBAAwB,CACxB,eAAgB,CAChB,cAAe,CACf,cAAe,CACf,4DAA8D,CAC9D,+GAMF,CACA,oCACE,0BAA2B,CAC3B,kEACF,CACA,wBACE,mBACF,CACA,uBACE,WACF,CAGA,0BACE,YAAa,CACb,qBAAsB,CACtB,QACF,CAGA,0BACE,YAAa,CACb,kBAAmB,CACnB,OACF,CACA,yBACE,MACF,CAEA,2BAEE,gBAAiB,CACjB,iBAAkB,CAClB,qCAAsC,CACtC,yBAA0B,CAC1B,wBAAyB,CACzB,cAAe,CACf,cAAe,CACf,eAAgB,CAChB,sEAAwE,CACxE,+GAMF,CACA,iCACE,0BAA2B,CAC3B,4EACF,CACA,mCACE,yCAA0C,CAC1C,+CAAgD,CAChD,sCACF,CACA,kCACE,wCAAyC,CACzC,yCACF,CAGA,uBACE,YAAa,CACb,qBAAsB,CACtB,OACF,CAEA,0BAEE,YAAa,CACb,kDAAoD,CACpD,kBAAmB,CACnB,QAAS,CACT,gBAAiB,CACjB,mCAAoC,CACpC,kBAAmB,CACnB,qCAAsC,CACtC,sDAGF,CACA,0BACE,gEAAqE,CACrE,cAAe,CACf,0BAA2B,CAC3B,eAAgB,CAChB,sBAAuB,CACvB,kBAAmB,CACnB,0BACF,CACA,6BACE,YAAa,CACb,kBAAmB,CACnB,OACF,CAEA,sBAEE,UAAW,CACX,gBAAiB,CACjB,iBAAkB,CAClB,6CAA8C,CAC9C,0BAA2B,CAC3B,cAAe,CACf,gCAAiC,CACjC,uCAAwC,CACxC,sEAIF,CACA,qBACE,eAAgB,CAChB,gEACF,CAEA,4BAEE,cAAe,CACf,0BAA2B,CAC3B,uCAAwC,CACxC,iDAAkD,CAClD,mBAAoB,CACpB,eAAgB,CAChB,kBAAmB,CACnB,sEAIF,CAGA,yBACE,iBAAkB,CAClB,UAAW,CACX,WAAY,CACZ,oBACF,CACA,+BACE,SAAU,CACV,OAAQ,CACR,QACF,CACA,gCACE,iBAAkB,CAClB,OAAQ,CACR,mBAAoB,CACpB,0CAA2C,CAC3C,uCAAwC,CACxC,+BACF,CACA,uCACE,UAAW,CACX,iBAAkB,CAClB,OAAQ,CACR,QAAS,CACT,UAAW,CACX,WAAY,CACZ,iBAAkB,CAClB,2CAA4C,CAC5C,+CAAgD,CAChD,mDAGF,CACA,8CACE,4CACF,CACA,qDACE,0BACF,CAEA,uBACE,cAAe,CACf,wBAAyB,CACzB,0BACF,CACA,0BACE,kCACF,CACA,2BACE,mCACF,CAEA,8BACE,YAAa,CACb,wBAAyB,CACzB,cAAe,CACf,sCAAuC,CACvC,kBAAmB,CACnB,gCAAiC,CACjC,sEAIF',sourcesContent:['<template>\n  \x3c!-- 外层卡片：与 ActionButtons 保持一致的玻璃卡风格，但默认收起 --\x3e\n  <section class="settings-card" role="region" aria-label="ERA 设置">\n    \x3c!-- 设置卡片容器 --\x3e\n    \x3c!-- 标题行：可点击折叠/展开 --\x3e\n    <button class="card-header" :aria-expanded="isOpen" @click="onToggle">\n      \x3c!-- 点击切换展开状态 --\x3e\n      <span class="title">ERA 设置</span>\n      \x3c!-- 标题文字 --\x3e\n      <span class="chev" aria-hidden="true">{{ isOpen ? \'▾\' : \'▸\' }}</span>\n      \x3c!-- 展开箭头 --\x3e\n    </button>\n\n    \x3c!-- 内容体：默认收起；展开后显示变量列表与操作 --\x3e\n    <div v-show="isOpen" class="content">\n      \x3c!-- 展开内容容器 --\x3e\n      \x3c!-- 顶部操作区：刷新/保存/重置编辑 --\x3e\n      <div class="toolbar">\n        \x3c!-- 工具条 --\x3e\n        <button class="mini-btn" title="重新读取脚本变量" @click.stop="loadVars">🔄 重新读取</button>\n        \x3c!-- 读取按钮 --\x3e\n        <div class="spacer"></div>\n        \x3c!-- 占位撑开 --\x3e\n        <button class="mini-btn subtle" title="丢弃未保存的修改" @click.stop="discardEdits">↩︎ 丢弃修改</button>\n        \x3c!-- 丢弃编辑 --\x3e\n        <button class="mini-btn primary" title="保存修改到脚本变量" @click.stop="saveEdits">💾 保存修改</button>\n        \x3c!-- 保存修改 --\x3e\n      </div>\n\n      \x3c!-- 变量列表：逐项渲染 --\x3e\n      <div class="vars">\n        <template v-if="rows.length > 0">\n          \x3c!-- 有变量时渲染列表 --\x3e\n          <div v-for="row in rows" :key="row.key" class="var-row">\n            \x3c!-- 每个变量一行 --\x3e\n            <label class="var-key" :title="row.key">{{ row.key }}</label>\n            \x3c!-- 变量名 --\x3e\n            \x3c!-- 根据变量类型选择不同的编辑控件 --\x3e\n            <div class="var-editor">\n              \x3c!-- 编辑器容器 --\x3e\n              \x3c!-- 布尔：勾选框 --\x3e\n              <template v-if="row.type === \'boolean\'">\n                <label class="switch">\n                  \x3c!-- 自定义开关外观 --\x3e\n                  <input v-model="edits[row.key]" type="checkbox" />\n                  \x3c!-- 勾选值 --\x3e\n                  <span class="track"></span>\n                  \x3c!-- 轨道 --\x3e\n                </label>\n              </template>\n\n              \x3c!-- 数字：number 输入 --\x3e\n              <template v-else-if="row.type === \'number\'">\n                <input v-model.number="edits[row.key]" type="number" class="ipt" :placeholder="String(row.value)" />\n                \x3c!-- 数字输入 --\x3e\n              </template>\n\n              \x3c!-- 字符串：text 输入 --\x3e\n              <template v-else-if="row.type === \'string\'">\n                <input v-model="edits[row.key]" type="text" class="ipt" :placeholder="String(row.value)" />\n                \x3c!-- 文本输入 --\x3e\n              </template>\n\n              \x3c!-- 其他（对象/数组/null/未知）：JSON 文本域 --\x3e\n              <template v-else>\n                <textarea\n                  v-model="jsonBuffers[row.key]"\n                  class="ipt ta"\n                  :placeholder="safeStringify(row.value)"\n                  @input="markJsonTouched(row.key)"\n                ></textarea>\n                \x3c!-- JSON 文本域 --\x3e\n                <span class="hint" :class="{ ok: jsonState[row.key]?.ok, bad: jsonState[row.key]?.bad }">{{\n                  jsonState[row.key]?.msg ?? \'以 JSON 格式编辑此值\'\n                }}</span>\n                \x3c!-- JSON 校验提示 --\x3e\n              </template>\n            </div>\n            \x3c!-- 类型徽标 --\x3e\n            <span class="type-chip">{{ humanType(row.type) }}</span>\n            \x3c!-- 类型展示 --\x3e\n          </div>\n        </template>\n\n        <template v-else>\n          \x3c!-- 没有变量时的占位 --\x3e\n          <div class="placeholder">\n            <p>未读取到任何脚本变量。</p>\n            \x3c!-- 文本提示 --\x3e\n            <p class="dim">\n              请先确保在 <code>app_ready</code> 或初始化阶段通过\n              <code>initializeExternalSettings()</code> 写入默认变量。\n            </p>\n            \x3c!-- 辅助说明 --\x3e\n          </div>\n        </template>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script setup lang="ts">\n/* 块头：逻辑说明\n   - 默认收起，展开时读取脚本域变量；\n   - 支持 boolean/number/string/json 四类编辑；\n   - 保存时按原类型回写到脚本域。\n*/\nimport { reactive, ref } from \'vue\'; // 中文注释：Vue 响应式 API\nimport { z } from \'zod\';\nimport { SettingsSchema } from \'../../../utils/constants\';\nimport { getScriptSettings, updateScriptSettings } from \'../../../utils/era_data\';\nimport { Logger } from \'../../../utils/log\'; // 中文注释：项目内日志工具\n\nconst logger = new Logger(); // 中文注释：实例化日志\n\n// === 折叠状态 ===\nconst isOpen = ref(false); // 中文注释：是否展开\n\n// === 原始数据与编辑缓存 ===\ntype Row = { key: string; value: any; type: \'boolean\' | \'number\' | \'string\' | \'json\' }; // 中文注释：一行变量的结构\nconst rows = ref<Row[]>([]); // 中文注释：可渲染的变量行\nconst edits = reactive<Record<string, any>>({}); // 中文注释：针对简单类型的编辑缓存（布尔/数字/字符串）\nconst jsonBuffers = reactive<Record<string, string>>({}); // 中文注释：针对 JSON 类型的文本缓存\nconst jsonState = reactive<Record<string, { ok?: boolean; bad?: boolean; msg?: string }>>({}); // 中文注释：JSON 校验状态\n\n// === 工具：类型判定与人类可读名 ===\nfunction detectType(v: any): Row[\'type\'] {\n  // 中文注释：检测变量类型\n  if (typeof v === \'boolean\') return \'boolean\'; // 中文注释：布尔\n  if (typeof v === \'number\' && Number.isFinite(v)) return \'number\'; // 中文注释：有限数\n  if (typeof v === \'string\') return \'string\'; // 中文注释：字符串\n  return \'json\'; // 中文注释：其他一律归为 json（对象/数组/null/特殊数等）\n}\nfunction humanType(t: Row[\'type\']): string {\n  // 中文注释：类型中文名\n  return t === \'boolean\' ? \'布尔\' : t === \'number\' ? \'数字\' : t === \'string\' ? \'字符串\' : \'JSON\'; // 中文注释：映射\n}\nfunction safeStringify(v: any): string {\n  // 中文注释：安全 JSON 序列化\n  try {\n    return JSON.stringify(v, null, 2);\n  } catch {\n    return String(v);\n  } // 中文注释：失败则转字符串\n}\n\n// === 加载变量列表 ===\nfunction loadVars() {\n  try {\n    logger.debug(\'loadVars\', \'尝试读取脚本设置...\');\n    const obj = getScriptSettings();\n    logger.debug(\'loadVars\', \'成功读取脚本设置:\', obj);\n\n    if (!obj || Object.keys(obj).length === 0) {\n      logger.warn(\'loadVars\', \'设置对象为空，UI 将不会被填充。\');\n      rows.value = [];\n      return;\n    }\n\n    // 清空旧缓存\n    rows.value = [];\n    for (const k of Object.keys(edits)) delete edits[k];\n    for (const k of Object.keys(jsonBuffers)) delete jsonBuffers[k];\n    for (const k of Object.keys(jsonState)) delete jsonState[k];\n\n    // 构建可编辑行\n    Object.entries(obj)\n      .filter(([key]) => key !== \'开启悬浮球\')\n      .forEach(([key, value]) => {\n        const t = detectType(value);\n        rows.value.push({ key, value, type: t });\n        if (t === \'json\') {\n          jsonBuffers[key] = safeStringify(value);\n        } else {\n          edits[key] = value;\n        }\n      });\n  } catch (e) {\n    logger.error(\'loadVars\', \'读取脚本变量失败:\', e);\n    alert(\'读取 ERA 设置失败，请检查浏览器控制台获取详细信息。\');\n  }\n}\n\n// === 展开折叠 ===\nfunction onToggle() {\n  // 中文注释：切换展开\n  isOpen.value = !isOpen.value; // 中文注释：翻转状态\n  if (isOpen.value && rows.value.length === 0) loadVars(); // 中文注释：首次展开时读取数据\n}\n\n// === JSON 文本域编辑标记 + 校验 ===\nfunction markJsonTouched(key: string) {\n  // 中文注释：标记 JSON 文本改动并校验\n  const txt = jsonBuffers[key] ?? \'\'; // 中文注释：读取文本\n  if (txt.trim() === \'\') {\n    // 中文注释：空文本提示\n    jsonState[key] = { bad: true, ok: false, msg: \'不能为空（若要设为 null 请写 null）\' }; // 中文注释：空提示\n    return; // 中文注释：返回\n  }\n  try {\n    JSON.parse(txt);\n    jsonState[key] = { ok: true, bad: false, msg: \'JSON 格式有效\' };\n  } catch (e: any) {\n    // 中文注释：校验通过\n    jsonState[key] = { bad: true, ok: false, msg: `JSON 格式错误：${e?.message ?? \'\'}` };\n  } // 中文注释：校验失败\n}\n\n// === 丢弃未保存的编辑 ===\nfunction discardEdits() {\n  // 中文注释：丢弃编辑\n  loadVars(); // 中文注释：重新读取覆盖本地改动\n}\n\n// === 保存修改 ===\nasync function saveEdits() {\n  // 中文注释：保存到脚本域\n  try {\n    await updateScriptSettings(currentSettings => {\n      const next: z.infer<typeof SettingsSchema> = { ...currentSettings };\n\n      // 合并简单类型的改动（布尔/数字/字符串）\n      Object.entries(edits).forEach(([k, v]) => {\n        const key = k as keyof z.infer<typeof SettingsSchema>;\n        (next as any)[key] = v;\n      });\n\n      // 合并 JSON 文本改动（需先通过校验）\n      Object.entries(jsonBuffers).forEach(([k, txt]) => {\n        if (txt != null) {\n          if (jsonState[k]?.bad) throw new Error(`键 ${k} 的 JSON 格式不正确`);\n          const key = k as keyof z.infer<typeof SettingsSchema>;\n          (next as any)[key] = JSON.parse(txt);\n        }\n      });\n\n      return next;\n    });\n\n    logger.log(\'saveEdits\', \'脚本变量已保存\');\n    window.dispatchEvent(new CustomEvent(\'era-settings-updated\'));\n    loadVars();\n  } catch (e) {\n    logger.error(\'saveEdits\', \'保存失败：\', e);\n    alert(`保存失败：${(e as any)?.message ?? e}`);\n  }\n}\n<\/script>\n\n<style scoped>\n/* === 外层卡片容器（与 ActionButtons 保持同系外观） === */\n.settings-card {\n  /* 玻璃卡容器 */\n  width: 100%; /* 占满侧栏宽度 */\n  padding: 12px; /* 内边距 */\n  background: var(--settings-bg-glass);\n  border: 1px solid var(--border-strong);\n  border-radius: 16px; /* 圆角 */\n  backdrop-filter: blur(10px); /* 毛玻璃 */\n  box-shadow: var(--settings-shadow-card), var(--settings-shadow-inset);\n  display: flex; /* 纵向布局 */\n  flex-direction: column; /* 垂直排布 */\n  gap: 10px; /* 间距 */\n  transition:\n    background 0.3s ease,\n    border-color 0.3s ease;\n}\n\n/* 标题按钮：收起/展开控制 */\n.card-header {\n  /* 标题行按钮 */\n  display: flex; /* 横向布局 */\n  align-items: center; /* 垂直居中 */\n  justify-content: space-between; /* 两端对齐 */\n  padding: 8px 10px; /* 内边距 */\n  border-radius: 10px; /* 圆角 */\n  border: 1px solid var(--border-soft);\n  background: var(--chip-bg);\n  color: var(--text-title);\n  font-weight: 800; /* 加粗 */\n  font-size: 13px; /* 字号 */\n  cursor: pointer; /* 可点 */\n  box-shadow: var(--settings-shadow-inset), var(--shadow-button);\n  transition:\n    background 0.3s ease,\n    border-color 0.3s ease,\n    color 0.3s ease,\n    transform 0.2s ease,\n    box-shadow 0.2s ease;\n}\n.card-header:hover {\n  transform: translateY(-1px);\n  box-shadow: var(--settings-shadow-inset), var(--shadow-button-hover);\n} /* 悬停态 */\n.title {\n  pointer-events: none;\n} /* 避免子元素截获点击 */\n.chev {\n  opacity: 0.7;\n} /* 箭头淡化 */\n\n/* 内容体 */\n.content {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n} /* 内容容器 */\n\n/* 工具条 */\n.toolbar {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n} /* 工具条布局 */\n.spacer {\n  flex: 1;\n} /* 右对齐按钮用 */\n\n.mini-btn {\n  /* 通用小按钮 */\n  padding: 6px 10px; /* 内边距 */\n  border-radius: 8px; /* 圆角 */\n  border: 1px solid var(--border-normal);\n  background: var(--chip-bg);\n  color: var(--text-normal);\n  cursor: pointer; /* 可点击 */\n  font-size: 12px; /* 字号 */\n  font-weight: 700; /* 加粗 */\n  box-shadow: var(--settings-shadow-inset), var(--settings-shadow-minibtn);\n  transition:\n    background 0.3s ease,\n    border-color 0.3s ease,\n    color 0.3s ease,\n    transform 0.2s ease,\n    box-shadow 0.2s ease;\n}\n.mini-btn:hover {\n  transform: translateY(-1px);\n  box-shadow: var(--settings-shadow-inset), var(--settings-shadow-minibtn-hover);\n} /* 悬停 */\n.mini-btn.primary {\n  background: var(--settings-bg-btn-primary);\n  border-color: var(--settings-border-btn-primary);\n  color: var(--settings-text-primary-btn);\n} /* 主要 */\n.mini-btn.subtle {\n  background: var(--settings-bg-btn-subtle);\n  border-color: var(--settings-border-input);\n} /* 次要 */\n\n/* 变量列表 */\n.vars {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n} /* 列表容器 */\n\n.var-row {\n  /* 一行变量 */\n  display: grid; /* 网格布局 */\n  grid-template-columns: 1fr minmax(120px, 1.2fr) auto; /* 三列：键 / 编辑器 / 类型 */\n  align-items: center; /* 垂直居中 */\n  gap: 10px; /* 列间距 */\n  padding: 8px 10px; /* 内边距 */\n  border: 1px solid var(--border-soft);\n  border-radius: 10px; /* 圆角 */\n  background: var(--settings-bg-var-row);\n  transition:\n    background 0.3s ease,\n    border-color 0.3s ease;\n}\n.var-key {\n  font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, monospace;\n  font-size: 12px;\n  color: var(--text-subtitle);\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  transition: color 0.3s ease;\n} /* 键名样式 */\n.var-editor {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n} /* 编辑器容器 */\n\n.ipt {\n  /* 通用输入框 */\n  width: 100%; /* 拉满可用宽度 */\n  padding: 8px 10px; /* 内边距 */\n  border-radius: 8px; /* 圆角 */\n  border: 1px solid var(--settings-border-input);\n  background: var(--bg-solid);\n  font-size: 12px; /* 字号 */\n  color: var(--settings-text-input);\n  box-shadow: var(--settings-shadow-inset);\n  transition:\n    background 0.3s ease,\n    border-color 0.3s ease,\n    color 0.3s ease;\n}\n.ta {\n  min-height: 64px;\n  font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, monospace;\n} /* JSON 文本域 */\n\n.type-chip {\n  /* 类型标签 */\n  font-size: 11px; /* 字号 */\n  color: var(--text-subtitle);\n  background: var(--settings-bg-type-chip);\n  border: 1px solid var(--settings-border-type-chip);\n  border-radius: 999px; /* 胶囊 */\n  padding: 4px 8px; /* 内边距 */\n  white-space: nowrap; /* 不换行 */\n  transition:\n    background 0.3s ease,\n    border-color 0.3s ease,\n    color 0.3s ease;\n}\n\n/* 自定义开关（布尔） */\n.switch {\n  position: relative;\n  width: 42px;\n  height: 24px;\n  display: inline-block;\n} /* 开关容器 */\n.switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n} /* 隐藏原生框 */\n.switch .track {\n  position: absolute;\n  inset: 0;\n  border-radius: 999px;\n  background: var(--settings-bg-switch-track);\n  box-shadow: var(--settings-shadow-inset);\n  transition: background 0.2s ease;\n} /* 轨道 */\n.switch .track::after {\n  content: \'\';\n  position: absolute;\n  top: 3px;\n  left: 3px;\n  width: 18px;\n  height: 18px;\n  border-radius: 50%;\n  background: var(--settings-bg-switch-handle);\n  box-shadow: var(--settings-shadow-switch-handle);\n  transition:\n    transform 0.2s ease,\n    background 0.3s ease;\n} /* 拖头 */\n.switch input:checked + .track {\n  background: var(--settings-bg-switch-checked);\n} /* 选中轨道色 */\n.switch input:checked + .track::after {\n  transform: translateX(18px);\n} /* 拖头右移 */\n\n.hint {\n  font-size: 11px;\n  color: var(--text-normal);\n  transition: color 0.3s ease;\n} /* JSON 提示 */\n.hint.ok {\n  color: var(--settings-text-hint-ok);\n} /* 通过提示色 */\n.hint.bad {\n  color: var(--settings-text-hint-bad);\n} /* 错误提示色 */\n\n.placeholder {\n  padding: 10px;\n  color: var(--text-normal);\n  font-size: 12px;\n  border: 1px dashed var(--border-dashed);\n  border-radius: 10px;\n  background: var(--bg-placeholder);\n  transition:\n    background 0.3s ease,\n    border-color 0.3s ease,\n    color 0.3s ease;\n} /* 空状态 */\n</style>\n'],sourceRoot:''}]);const i=s},715:(e,n,t)=>{var a=t(81);a.__esModule&&(a=a.default),'string'==typeof a&&(a=[[e.id,a,'']]),a.locals&&(e.exports=a.locals);(0,t(424).A)('cd4d425e',a,!1,{ssrId:!0})},790:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if('function'==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r='sourceMappingURL=data:application/json;charset=utf-8;base64,'.concat(a),o='/*# '.concat(r,' */');return[n].concat([o]).join('\n')}return[n].join('\n')}},845:(e,n,t)=>{var a=t(939);a.__esModule&&(a=a.default),'string'==typeof a&&(a=[[e.id,a,'']]),a.locals&&(e.exports=a.locals);(0,t(424).A)('36661992',a,!1,{ssrId:!0})},855:(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});var a=t(790),r=t.n(a),o=t(54),s=t.n(o)()(r());s.push([e.id,'.era-panel[data-v-7500b97c]{flex:2 1 600px;min-width:320px;height:min(680px,86vh);display:flex;flex-direction:column;background:var(--bg-blur-heavy);border:1px solid var(--border-strong);backdrop-filter:blur(10px);border-radius:16px;box-shadow:var(--shadow-panel),var(--shadow-inset);overflow:hidden;font-family:ui-monospace,SFMono-Regular,Menlo,Consolas,monospace;transition:background 0.3s ease,border-color 0.3s ease}.panel-top[data-v-7500b97c]{display:flex;align-items:center;justify-content:space-between;padding:14px 16px;border-bottom:1px solid var(--border-soft);background:var(--bg-blur-light);transition:background 0.3s ease,border-color 0.3s ease}.panel-title[data-v-7500b97c]{font-size:16px;font-weight:800;letter-spacing:0.5px;color:var(--text-title);transition:color 0.3s ease}.btn-close[data-v-7500b97c]{width:32px;height:32px;line-height:30px;text-align:center;border-radius:8px;border:1px solid var(--border-normal);background:var(--bg-solid);cursor:pointer;font-size:18px;color:var(--text-normal);box-shadow:var(--shadow-button);transition:background 0.3s ease,border-color 0.3s ease,color 0.3s ease,transform 0.2s ease,box-shadow 0.2s ease}.btn-close[data-v-7500b97c]:hover{transform:translateY(-1px);box-shadow:var(--shadow-button-hover)}.panel-body[data-v-7500b97c]{padding:0;overflow:hidden;flex-grow:1;display:flex;flex-direction:column}.panel-content-wrapper[data-v-7500b97c]{padding:14px 14px 16px;overflow-y:auto;flex-grow:1}.panel-content-wrapper[data-v-7500b97c]>*+*{margin-top:12px}.empty[data-v-7500b97c]{height:100%;display:grid;place-items:center;color:var(--text-normal);font-size:14px;border:1px dashed var(--border-dashed);border-radius:12px;background:var(--bg-empty);transition:background 0.3s ease,border-color 0.3s ease,color 0.3s ease}\n','',{version:3,sources:['webpack://./src/ERA变量框架/ui/components/EraPanel.vue'],names:[],mappings:'AAmEA,4BACE,cAAe,CACf,eAAgB,CAChB,sBAAwB,CACxB,YAAa,CACb,qBAAsB,CACtB,+BAAgC,CAChC,qCAAsC,CACtC,0BAA2B,CAC3B,kBAAmB,CACnB,kDAAoD,CACpD,eAAgB,CAChB,gEAAqE,CACrE,sDAGF,CAEA,4BACE,YAAa,CACb,kBAAmB,CACnB,6BAA8B,CAC9B,iBAAkB,CAClB,0CAA2C,CAC3C,+BAAgC,CAChC,sDAGF,CACA,8BACE,cAAe,CACf,eAAgB,CAChB,oBAAqB,CACrB,uBAAwB,CACxB,0BACF,CACA,4BACE,UAAW,CACX,WAAY,CACZ,gBAAiB,CACjB,iBAAkB,CAClB,iBAAkB,CAClB,qCAAsC,CACtC,0BAA2B,CAC3B,cAAe,CACf,cAAe,CACf,wBAAyB,CACzB,+BAAgC,CAChC,+GAMF,CACA,kCACE,0BAA2B,CAC3B,qCACF,CAEA,6BACE,SAAU,CACV,eAAgB,CAChB,WAAY,CACZ,YAAa,CACb,qBACF,CAEA,wCACE,sBAAuB,CACvB,eAAgB,CAChB,WACF,CAGA,4CACE,eACF,CAEA,wBACE,WAAY,CACZ,YAAa,CACb,kBAAmB,CACnB,wBAAyB,CACzB,cAAe,CACf,sCAAuC,CACvC,kBAAmB,CACnB,0BAA2B,CAC3B,sEAIF',sourcesContent:['<template>\n  <div class="era-panel">\n    <header class="panel-top">\n      <h3 class="panel-title">ERA 数据面板</h3>\n      <button class="btn-close" aria-label="关闭" @click="requestSwitchView(\'FloatingBall\')">×</button>\n    </header>\n    <div class="panel-body">\n      <div class="panel-content-wrapper">\n        <template v-if="data">\n          <EraAccordion title="最新消息元数据" :default-open="false">\n            <MetaHeader :mk="data.mk" :message-id="data.message_id" />\n          </EraAccordion>\n\n          <OperationDetails :data="data" />\n\n          <TabSwitch v-model:active="activeTab" :tabs="tabs">\n            <template #pure>\n              <PrettyJsonViewer :value="data.statWithoutMeta" :default-collapsed="true" :max-depth="Infinity" />\n            </template>\n            <template #full>\n              <PrettyJsonViewer :value="data.stat" :default-collapsed="true" :max-depth="Infinity" />\n            </template>\n          </TabSwitch>\n        </template>\n        <template v-else>\n          <div class="empty">等待 era:writeDone 事件数据…</div>\n        </template>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang="ts">\nimport { ref } from \'vue\';\nimport { Logger } from \'../../utils/log\';\nimport EraAccordion from \'../template/EraAccordion.vue\';\nimport MetaHeader from \'./EraPanelContent/MetaHeader.vue\';\nimport TabSwitch from \'../template/TabSwitch.vue\';\nimport OperationDetails from \'./EraPanelContent/OperationDetails.vue\';\nimport PrettyJsonViewer from \'../template/PrettyJsonViewer.vue\';\nimport type { WriteDonePayload } from \'../../utils/constants\';\n\ntype TabItem = { key: \'pure\' | \'full\'; label: string };\n\nconst logger = new Logger();\n\ndefineProps<{\n  data: WriteDonePayload | null;\n}>();\n\nconst requestSwitchView = (viewName: \'FloatingBall\' | \'ExpandedView\') => {\n  logger.debug(\'requestSwitchView\', `请求切换视图到: ${viewName}`);\n  if ((window as any).eraUiSwitchView) {\n    (window as any).eraUiSwitchView(viewName);\n  } else {\n    logger.warn(\'requestSwitchView\', \'全局切换函数 eraUiSwitchView 未找到\');\n  }\n};\n\nconst tabs: TabItem[] = [\n  { key: \'pure\', label: \'纯净状态数据\' },\n  { key: \'full\', label: \'完整状态数据\' },\n];\nconst activeTab = ref<\'pure\' | \'full\'>(\'pure\');\n<\/script>\n\n<style scoped>\n.era-panel {\n  flex: 2 1 600px;\n  min-width: 320px;\n  height: min(680px, 86vh);\n  display: flex;\n  flex-direction: column;\n  background: var(--bg-blur-heavy);\n  border: 1px solid var(--border-strong);\n  backdrop-filter: blur(10px);\n  border-radius: 16px;\n  box-shadow: var(--shadow-panel), var(--shadow-inset);\n  overflow: hidden;\n  font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, monospace;\n  transition:\n    background 0.3s ease,\n    border-color 0.3s ease;\n}\n\n.panel-top {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 14px 16px;\n  border-bottom: 1px solid var(--border-soft);\n  background: var(--bg-blur-light);\n  transition:\n    background 0.3s ease,\n    border-color 0.3s ease;\n}\n.panel-title {\n  font-size: 16px;\n  font-weight: 800;\n  letter-spacing: 0.5px;\n  color: var(--text-title);\n  transition: color 0.3s ease;\n}\n.btn-close {\n  width: 32px;\n  height: 32px;\n  line-height: 30px;\n  text-align: center;\n  border-radius: 8px;\n  border: 1px solid var(--border-normal);\n  background: var(--bg-solid);\n  cursor: pointer;\n  font-size: 18px;\n  color: var(--text-normal);\n  box-shadow: var(--shadow-button);\n  transition:\n    background 0.3s ease,\n    border-color 0.3s ease,\n    color 0.3s ease,\n    transform 0.2s ease,\n    box-shadow 0.2s ease;\n}\n.btn-close:hover {\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-button-hover);\n}\n\n.panel-body {\n  padding: 0;\n  overflow: hidden;\n  flex-grow: 1;\n  display: flex; /* 确保 wrapper 能撑满 */\n  flex-direction: column;\n}\n\n.panel-content-wrapper {\n  padding: 14px 14px 16px;\n  overflow-y: auto; /* 内部滚动 */\n  flex-grow: 1;\n}\n\n/* 用 margin 替代 gap */\n.panel-content-wrapper > * + * {\n  margin-top: 12px;\n}\n\n.empty {\n  height: 100%; /* 撑满父容器 */\n  display: grid;\n  place-items: center;\n  color: var(--text-normal);\n  font-size: 14px;\n  border: 1px dashed var(--border-dashed);\n  border-radius: 12px;\n  background: var(--bg-empty);\n  transition:\n    background 0.3s ease,\n    border-color 0.3s ease,\n    color 0.3s ease;\n}\n</style>\n'],sourceRoot:''}]);const i=s},892:(e,n,t)=>{var a=t(930);a.__esModule&&(a=a.default),'string'==typeof a&&(a=[[e.id,a,'']]),a.locals&&(e.exports=a.locals);(0,t(424).A)('5fc4b7f0',a,!1,{ssrId:!0})},903:(e,n,t)=>{var a=t(13);a.__esModule&&(a=a.default),'string'==typeof a&&(a=[[e.id,a,'']]),a.locals&&(e.exports=a.locals);(0,t(424).A)('286d262e',a,!1,{ssrId:!0})},930:(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});var a=t(790),r=t.n(a),o=t(54),s=t.n(o)()(r());s.push([e.id,'.right-rail[data-v-61d00544]{flex:1 1 420px;min-width:400px;height:min(680px,86vh);position:sticky;top:10px;align-self:flex-start;z-index:1;display:flex;flex-direction:column}.right-rail-content-wrapper[data-v-61d00544]{display:flex;flex-direction:column;gap:12px;overflow-y:auto;flex-grow:1}\n','',{version:3,sources:['webpack://./src/ERA变量框架/ui/components/RightRail.vue'],names:[],mappings:'AAiBA,6BACE,cAAe,CACf,eAAgB,CAChB,sBAAwB,CACxB,eAAgB,CAChB,QAAS,CACT,qBAAsB,CACtB,SAAU,CACV,YAAa,CACb,qBACF,CAEA,6CACE,YAAa,CACb,qBAAsB,CACtB,QAAS,CACT,eAAgB,CAChB,WACF',sourcesContent:['<template>\n  <aside class="right-rail">\n    <div class="right-rail-content-wrapper">\n      <ActionButtons />\n      <EraSettingsPanel />\n      <AboutEra />\n    </div>\n  </aside>\n</template>\n\n<script setup lang="ts">\nimport AboutEra from \'./RightRailContent/AboutEra.vue\';\nimport ActionButtons from \'./RightRailContent/ActionButtons.vue\';\nimport EraSettingsPanel from \'./RightRailContent/EraSettingsPanel.vue\';\n<\/script>\n\n<style scoped>\n.right-rail {\n  flex: 1 1 420px;\n  min-width: 400px;\n  height: min(680px, 86vh);\n  position: sticky;\n  top: 10px;\n  align-self: flex-start;\n  z-index: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.right-rail-content-wrapper {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  overflow-y: auto;\n  flex-grow: 1;\n}\n</style>\n'],sourceRoot:''}]);const i=s},939:(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});var a=t(790),r=t.n(a),o=t(54),s=t.n(o)()(r());s.push([e.id,'.tabs[data-v-4f79defc]{border:1px solid var(--border-soft);border-radius:12px;overflow:hidden;background:var(--accordion-bg);transition:background 0.3s ease,border-color 0.3s ease}.tab-bar[data-v-4f79defc]{display:flex;gap:8px;padding:8px;border-bottom:1px solid var(--border-soft);background:var(--mk-pill-null-bg);transition:background 0.3s ease,border-color 0.3s ease}.tab-btn[data-v-4f79defc]{padding:8px 12px;font-weight:800;font-size:13px;color:var(--text-normal);background:var(--bg-solid);border:1px solid var(--settings-border-input);border-radius:10px;cursor:pointer;transition:background 0.3s ease,border-color 0.3s ease,color 0.3s ease,box-shadow 0.3s ease}.tab-btn.active[data-v-4f79defc]{color:var(--settings-text-input);border-color:var(--settings-border-btn-primary);box-shadow:var(--settings-shadow-inset),var(--tab-active-shadow)}.tab-content[data-v-4f79defc]{padding:10px 12px;background:var(--tab-content-bg);transition:background 0.3s ease}\n','',{version:3,sources:['webpack://./src/ERA变量框架/ui/template/TabSwitch.vue'],names:[],mappings:'AA+DA,uBACE,mCAAoC,CACpC,kBAAmB,CACnB,eAAgB,CAChB,8BAA+B,CAC/B,sDAGF,CACA,0BACE,YAAa,CACb,OAAQ,CACR,WAAY,CACZ,0CAA2C,CAC3C,iCAAkC,CAClC,sDAGF,CACA,0BACE,gBAAiB,CACjB,eAAgB,CAChB,cAAe,CACf,wBAAyB,CACzB,0BAA2B,CAC3B,6CAA8C,CAC9C,kBAAmB,CACnB,cAAe,CACf,2FAKF,CACA,iCACE,gCAAiC,CACjC,+CAAgD,CAChD,gEACF,CACA,8BACE,iBAAkB,CAClB,gCAAiC,CACjC,+BACF',sourcesContent:['<template>\n  <section class="tabs">\n    \x3c!-- 页签行 --\x3e\n    <div class="tab-bar" role="tablist">\n      <button\n        v-for="t in tabs"\n        :key="t.key"\n        class="tab-btn"\n        :class="{ active: t.key === innerActive }"\n        role="tab"\n        @click="setActive(t.key)"\n      >\n        {{ t.label }}\n      </button>\n    </div>\n\n    \x3c!-- 内容区：根据活动键渲染对应插槽 --\x3e\n    <div class="tab-content">\n      <div v-if="innerActive === \'pure\'">\n        <slot name="pure" />\n        \x3c!-- 纯净状态数据内容 --\x3e\n      </div>\n      <div v-else>\n        <slot name="full" />\n        \x3c!-- 完整状态数据内容 --\x3e\n      </div>\n    </div>\n  </section>\n</template>\n\n<script setup lang="ts">\nimport { onMounted, ref, watch } from \'vue\'; // 引入响应式工具\nimport { Logger } from \'../../utils/log\';\n\ntype TabItem = { key: \'pure\' | \'full\'; label: string }; // Tab 项类型\n\nconst logger = new Logger();\nconst props = defineProps<{ tabs: TabItem[]; active?: \'pure\' | \'full\' }>(); // 输入 tabs 与可选 active\nconst emit = defineEmits<{ \'update:active\': [\'pure\' | \'full\'] }>(); // v-model:active\n\nconst innerActive = ref<\'pure\' | \'full\'>(props.active ?? \'pure\'); // 内部活动键\n\nwatch(\n  () => props.active,\n  v => {\n    if (v) {\n      logger.debug(\'watch:active\', `外部同步 active tab 为: ${v}`);\n      innerActive.value = v;\n    }\n  },\n); // 外部变更时同步\nfunction setActive(k: \'pure\' | \'full\') {\n  logger.log(\'setActive\', `用户点击，切换 tab 到: ${k}`);\n  innerActive.value = k;\n  emit(\'update:active\', k);\n} // 切换并抛出\n\nonMounted(() => {\n  logger.log(\'onMounted\', \'组件已挂载\', { props });\n});\n<\/script>\n\n<style scoped>\n.tabs {\n  border: 1px solid var(--border-soft);\n  border-radius: 12px;\n  overflow: hidden;\n  background: var(--accordion-bg);\n  transition:\n    background 0.3s ease,\n    border-color 0.3s ease;\n}\n.tab-bar {\n  display: flex;\n  gap: 8px;\n  padding: 8px;\n  border-bottom: 1px solid var(--border-soft);\n  background: var(--mk-pill-null-bg);\n  transition:\n    background 0.3s ease,\n    border-color 0.3s ease;\n}\n.tab-btn {\n  padding: 8px 12px;\n  font-weight: 800;\n  font-size: 13px;\n  color: var(--text-normal);\n  background: var(--bg-solid);\n  border: 1px solid var(--settings-border-input);\n  border-radius: 10px;\n  cursor: pointer;\n  transition:\n    background 0.3s ease,\n    border-color 0.3s ease,\n    color 0.3s ease,\n    box-shadow 0.3s ease;\n}\n.tab-btn.active {\n  color: var(--settings-text-input);\n  border-color: var(--settings-border-btn-primary);\n  box-shadow: var(--settings-shadow-inset), var(--tab-active-shadow);\n}\n.tab-content {\n  padding: 10px 12px;\n  background: var(--tab-content-bg);\n  transition: background 0.3s ease;\n}\n</style>\n'],sourceRoot:''}]);const i=s},940:(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});var a=t(790),r=t.n(a),o=t(54),s=t.n(o)()(r());s.push([e.id,'.meta[data-v-439c7dd4]{position:relative;border:1px solid var(--border-soft);border-radius:12px;background:var(--meta-bg);box-shadow:var(--meta-shadow),var(--settings-shadow-inset);transition:background 0.3s ease,border-color 0.3s ease}.kv[data-v-439c7dd4]{display:grid;grid-template-columns:120px 1fr;gap:8px 12px}.item[data-v-439c7dd4]{display:contents}.k[data-v-439c7dd4]{justify-self:start;align-self:center;font-size:12px;color:var(--text-normal);background:var(--meta-key-bg);border:1px solid var(--settings-border-input);padding:4px 8px;border-radius:8px;font-weight:700;transition:background 0.3s ease,border-color 0.3s ease,color 0.3s ease}.v[data-v-439c7dd4]{align-self:center;font-family:ui-monospace,Menlo,Consolas,monospace;font-size:12px;color:var(--settings-text-input);background:var(--bg-solid);border:1px solid var(--settings-border-input);padding:6px 8px;border-radius:8px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;transition:background 0.3s ease,border-color 0.3s ease,color 0.3s ease}.glow[data-v-439c7dd4]{position:absolute;left:12px;right:12px;top:0;height:3px;border-radius:999px;background:var(--meta-glow-bg);filter:blur(0.4px)}\n','',{version:3,sources:['webpack://./src/ERA变量框架/ui/components/EraPanelContent/MetaHeader.vue'],names:[],mappings:'AA4CA,uBACE,iBAAkB,CAElB,mCAAoC,CACpC,kBAAmB,CACnB,yBAA0B,CAC1B,0DAA4D,CAC5D,sDAGF,CAEA,qBACE,YAAa,CACb,+BAAgC,CAChC,YACF,CACA,uBACE,gBACF,CACA,oBACE,kBAAmB,CACnB,iBAAkB,CAClB,cAAe,CACf,wBAAyB,CACzB,6BAA8B,CAC9B,6CAA8C,CAC9C,eAAgB,CAChB,iBAAkB,CAClB,eAAgB,CAChB,sEAIF,CACA,oBACE,iBAAkB,CAClB,iDAAqD,CACrD,cAAe,CACf,gCAAiC,CACjC,0BAA2B,CAC3B,6CAA8C,CAC9C,eAAgB,CAChB,iBAAkB,CAClB,eAAgB,CAChB,sBAAuB,CACvB,kBAAmB,CACnB,sEAIF,CAGA,uBACE,iBAAkB,CAClB,SAAU,CACV,UAAW,CACX,KAAM,CACN,UAAW,CACX,mBAAoB,CACpB,8BAA+B,CAC/B,kBACF',sourcesContent:['<template>\n  <section class="meta">\n    <div class="kv">\n      <div class="item">\n        <span class="k">mk</span>\n        \x3c!-- 键：mk --\x3e\n        <span class="v" :title="mk">{{ mk || \'—\' }}</span>\n        \x3c!-- 值：mk --\x3e\n      </div>\n      <div class="item">\n        <span class="k">message_id</span>\n        \x3c!-- 键：message_id --\x3e\n        <span class="v">{{ messageId ?? \'—\' }}</span>\n        \x3c!-- 值：message_id --\x3e\n      </div>\n    </div>\n    <div class="glow"></div>\n    \x3c!-- 装饰：流光条 --\x3e\n  </section>\n</template>\n\n<script setup lang="ts">\nimport { onMounted, watch } from \'vue\';\nimport { Logger } from \'../../../utils/log\';\n\nconst logger = new Logger();\n\n// 接收父组件传入的两个字段\nconst props = defineProps<{ mk: string; messageId: number }>(); // 简单的只读展示\n\nonMounted(() => {\n  logger.log(\'onMounted\', \'组件已挂载\', { props });\n});\n\nwatch(\n  () => props,\n  newProps => {\n    logger.debug(\'watch:props\', \'Props 发生变化\', { newProps });\n  },\n  { deep: true },\n);\n<\/script>\n\n<style scoped>\n.meta {\n  position: relative;\n  /* padding is handled by EraAccordion\'s .inner */\n  border: 1px solid var(--border-soft);\n  border-radius: 12px;\n  background: var(--meta-bg);\n  box-shadow: var(--meta-shadow), var(--settings-shadow-inset);\n  transition:\n    background 0.3s ease,\n    border-color 0.3s ease;\n}\n\n.kv {\n  display: grid;\n  grid-template-columns: 120px 1fr;\n  gap: 8px 12px;\n}\n.item {\n  display: contents;\n}\n.k {\n  justify-self: start;\n  align-self: center;\n  font-size: 12px;\n  color: var(--text-normal);\n  background: var(--meta-key-bg);\n  border: 1px solid var(--settings-border-input);\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-weight: 700;\n  transition:\n    background 0.3s ease,\n    border-color 0.3s ease,\n    color 0.3s ease;\n}\n.v {\n  align-self: center;\n  font-family: ui-monospace, Menlo, Consolas, monospace;\n  font-size: 12px;\n  color: var(--settings-text-input);\n  background: var(--bg-solid);\n  border: 1px solid var(--settings-border-input);\n  padding: 6px 8px;\n  border-radius: 8px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  transition:\n    background 0.3s ease,\n    border-color 0.3s ease,\n    color 0.3s ease;\n}\n\n/* 顶部流光装饰 */\n.glow {\n  position: absolute;\n  left: 12px;\n  right: 12px;\n  top: 0;\n  height: 3px;\n  border-radius: 999px;\n  background: var(--meta-glow-bg);\n  filter: blur(0.4px);\n}\n</style>\n'],sourceRoot:''}]);const i=s},962:(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});var a=t(790),r=t.n(a),o=t(54),s=t.n(o)()(r());s.push([e.id,'.era-app-container{position:fixed;inset:0;z-index:2147483646;pointer-events:none;isolation:isolate;contain:layout style paint;width:100svw;height:100svh}\n','',{version:3,sources:['webpack://./src/ERA变量框架/ui/App.vue'],names:[],mappings:'AAwGA,mBAEE,cAAe,CACf,OAAQ,CACR,kBAAmB,CACnB,mBAAoB,CACpB,iBAAkB,CAClB,0BAA2B,CAC3B,YAAa,CACb,aACF',sourcesContent:['<template>\n  <div class="era-app-container" :class="{ \'dark-theme\': isDarkMode }">\n    <ThemeManager ref="themeManager" />\n    <FloatingBall v-show="currentComponent === \'FloatingBall\'" @click="requestSwitchView(\'ExpandedView\')" />\n    <div v-show="currentComponent === \'ExpandedView\'" class="era-expanded-layer">\n      \x3c!-- 视口级展开层：悬浮模态容器 --\x3e\n      <div class="era-shell">\n        \x3c!-- 新增横向壳容器：左面板 + 右侧栏 --\x3e\n        <EraPanel :data="dataRef" />\n        <RightRail />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang="ts">\nimport { computed, onBeforeUnmount, onMounted, ref, watch } from \'vue\';\nimport { getScriptSettings } from \'../utils/era_data\';\nimport { Logger } from \'../utils/log\';\nimport type { WriteDonePayload } from \'../utils/constants\';\nimport EraPanel from \'./components/EraPanel.vue\';\nimport FloatingBall from \'./components/FloatingBall.vue\';\nimport RightRail from \'./components/RightRail.vue\';\nimport ThemeManager from \'./components/ThemeManager.vue\';\n\nconst logger = new Logger();\n\n// 主题状态管理\nconst themeManager = ref<InstanceType<typeof ThemeManager> | null>(null);\nconst isDarkMode = ref(false);\n\nconst loadThemeSetting = () => {\n  try {\n    const settings = getScriptSettings();\n    const darkModeValue = settings?.[\'开启黑夜模式\'] ?? false;\n    isDarkMode.value = darkModeValue;\n    if (themeManager.value) {\n      themeManager.value.isDarkMode = darkModeValue;\n    }\n    logger.log(\'loadThemeSetting\', `主题已更新为: ${darkModeValue ? \'Dark\' : \'Light\'}`);\n  } catch (e) {\n    logger.error(\'loadThemeSetting\', \'加载主题设置失败\', e);\n    isDarkMode.value = false; // Fallback to light mode\n  }\n};\n\nonMounted(() => {\n  loadThemeSetting();\n  window.addEventListener(\'era-settings-updated\', loadThemeSetting);\n});\n\nonBeforeUnmount(() => {\n  window.removeEventListener(\'era-settings-updated\', loadThemeSetting);\n});\n\n// App.vue 原有的 props\nconst props = defineProps({\n  initialView: {\n    type: String,\n    required: true,\n    default: \'FloatingBall\',\n  },\n  eventData: {\n    type: Object as () => WriteDonePayload | null,\n    default: () => null,\n  },\n});\n\n// App.vue 原有的逻辑\nconst currentComponent = ref(props.initialView);\nconst requestSwitchView = (viewName: \'FloatingBall\' | \'ExpandedView\') => {\n  logger.debug(\'requestSwitchView\', `请求切换视图到: ${viewName}`);\n  if ((window as any).eraUiSwitchView) {\n    (window as any).eraUiSwitchView(viewName);\n  } else {\n    logger.warn(\'requestSwitchView\', \'全局切换函数 eraUiSwitchView 未找到\');\n  }\n};\n\n// 从 EraDataPanel 迁移过来的逻辑\nconst dataRef = computed(() => props.eventData || null);\n\nwatch(\n  () => props.eventData,\n  (newData, oldData) => {\n    logger.debug(\'watch:eventData\', \'eventData prop 发生变化\', {\n      newData,\n      oldData,\n    });\n  },\n  { deep: true },\n);\n\nwatch(\n  () => props.initialView,\n  newView => {\n    logger.debug(\'watch:initialView\', `initialView prop 发生变化，新视图: ${newView}`);\n    currentComponent.value = newView;\n  },\n);\n<\/script>\n\n<style>\n/* App.vue 视口级悬浮容器（替换原有 .era-app-container） */\n.era-app-container {\n  /* 作为全局悬浮层根容器 */\n  position: fixed; /* 固定在视口，不受外层布局影响 */\n  inset: 0; /* 覆盖整个视口区域（top/right/bottom/left 全 0） */\n  z-index: 2147483646; /* 超高层级，盖住站点其它层 */\n  pointer-events: none; /* 默认不截获点击，避免阻挡页面 */\n  isolation: isolate; /* 新建独立层叠上下文，防止被外层混合影响 */\n  contain: layout style paint; /* 创建渲染封装，减少外界干扰 */\n  width: 100svw; /* 适配移动端动态视口宽度 */\n  height: 100svh; /* 适配移动端动态视口高度 */\n}\n</style>\n\n<style scoped>\n/* 从 EraDataPanel.vue 迁移过来的样式 */\n\n/* ===[新增] 横向壳：左面板 + 右侧栏（按钮）=== */\n.era-shell {\n  /* 横向包裹容器 */ /* 中文注释：横向排列容器 */\n  display: flex; /* 横向布局 */ /* 中文注释：flex 横排 */\n  align-items: flex-start; /* 顶对齐 */ /* 中文注释：上缘对齐 */\n  gap: 12px; /* 左右间距 */ /* 中文注释：元素间距 */\n  flex-wrap: nowrap; /* 默认不换行 */ /* 中文注释：保持并排 */\n}\n\n/* 保持面板宽高（原样），但让它更好地在横向中自适应 */\n:deep(.era-panel) {\n  flex: 0 1 auto; /* 面板按自身宽度布局 */\n}\n\n/* 小屏回落：改为上下堆叠（按钮在下） */\n@media (max-width: 992px) {\n  /* 992px (平板) 以下回落 */\n  .era-shell {\n    flex-wrap: wrap; /* 允许换行 */\n  }\n  :deep(.era-panel),\n  :deep(.right-rail) {\n    width: 100%; /* 各占一行 */\n    flex-basis: auto; /* 重置 flex-basis */\n  }\n  :deep(.right-rail) {\n    position: static; /* 取消吸顶 */\n    margin-top: 12px; /* 与上方留白 */\n    height: auto; /* 高度自适应 */\n    max-height: 40vh; /* 限制最大高度，避免过长 */\n  }\n}\n\n/* ===[新增] 悬浮球：固定在右下角 + 开启点击 === */\n:deep(.floating-ball) {\n  /* 选中子组件根元素（scoped 下用 deep） */\n  position: fixed; /* 固定定位到视口 */\n  right: max(16px, env(safe-area-inset-right)); /* 右侧安全区 + 基础边距 */\n  bottom: max(90px, env(safe-area-inset-bottom)); /* 底部安全区 + 基础边距 */\n  z-index: 2147483647; /* 高于容器根，确保始终可点 */\n  pointer-events: auto; /* 启用点击（父容器是 none） */\n  touch-action: manipulation; /* 移动端减少点击延迟 */\n  will-change: transform; /* 提前分层，避免站点 3D/滤镜影响 */\n}\n\n/* ===[新增] 展开层：视口级模态容器（只在 ExpandedView v-show 为 true 时存在） === */\n.era-expanded-layer {\n  /* 绑定在模板新增的 class */\n  position: fixed; /* 固定在视口（不受外层布局约束） */\n  inset: 0; /* 铺满视口 */\n  display: grid; /* 用 grid 居中内容 */\n  place-items: center; /* 水平垂直置中 */\n  padding: clamp(12px, 2.5vw, 24px); /* 视口自适应内边距 */\n  pointer-events: auto; /* 启用点击（与父容器的 none 区分） */\n  z-index: 2147483646; /* 仅次于悬浮球，保证在最上层 */\n  background: transparent; /* 如需半透明遮罩可改为 rgba(0,0,0,.25) */\n  overflow: auto; /* 内容超出时，容器自身滚动，不被裁剪 */\n}\n\n/* ===[新增] 小屏适配：面板在移动端更“填充”可视区 === */\n@media (max-width: 640px) {\n  /* 针对手机宽度 */\n  :deep(.era-panel) {\n    /* 重设面板宽高更贴合手机 */\n    width: min(92vw, 560px); /* 放宽到 92vw，避免 60vw 太窄 */\n    height: min(88vh, calc(100svh - 32px)); /* 兼顾状态栏/地址栏动态高度 */\n  }\n  .panel-body {\n    /* 主要内容区滚动容器 */\n    overscroll-behavior: contain; /* 防止滚动牵动背景页面 */\n  }\n}\n</style>\n'],sourceRoot:''}]);const i=s}},t={};function a(e){var r=t[e];if(void 0!==r)return r.exports;var o=t[e]={id:e,exports:{}};return n[e](o,o.exports,a),o.exports}a.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return a.d(n,{a:n}),n},a.d=(e,n)=>{for(var t in n)a.o(n,t)&&!a.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},a.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),a.r=e=>{'undefined'!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:'Module'}),Object.defineProperty(e,'__esModule',{value:!0})};const r=z,o=r.z.object({在ai消息尾部生成特殊符号:r.z.boolean().default(!0),特殊符号值:r.z.string().default('<StatusPlaceHolderImpl/>'),开启悬浮球:r.z.boolean().default(!0),开启黑夜模式:r.z.boolean().default(!1),强制重载功能:r.z.boolean().default(!1),强制重载消息数:r.z.number().default(2)}),s={type:'chat'},i='ERAMetaData',l='stat_data',d='EditLogs',c='SelectedMks',p='era_data',A=new RegExp(`<${p}>({.*?})<\\/${p}>`),g={INSERT_BY_OBJECT:'era:insertByObject',UPDATE_BY_OBJECT:'era:updateByObject',INSERT_BY_PATH:'era:insertByPath',UPDATE_BY_PATH:'era:updateByPath',DELETE_BY_OBJECT:'era:deleteByObject',DELETE_BY_PATH:'era:deleteByPath',GET_CURRENT_VARS:'era:getCurrentVars'},C='era:writeDone',u='era:apiWrite',b='era_debug_config';let m=[],f=[];function v(){try{const e=globalThis.localStorage?.getItem(b)||'{"enabled":[],"disabled":[]}',n=JSON.parse(e),t=e=>new RegExp(`^${e.replace(/\*/g,'.*?')}$`);m=(n.enabled||[]).map(t),f=(n.disabled||[]).map(t)}catch(e){console.error('《ERA-Log》: 加载调试配置失败。',e),m=[],f=[]}}function h(e){const n={enabled:[...new Set(e.enabled)],disabled:[...new Set(e.disabled)]};globalThis.localStorage?.setItem(b,JSON.stringify(n)),v(),console.log('%c《ERA-Log》调试模式已更新。','color: #3498db; font-weight: bold;',{'启用 (Enabled)':n.enabled,'禁用 (Disabled)':n.disabled})}if(v(),'undefined'!=typeof globalThis){const e={add(e){const n=globalThis.localStorage?.getItem(b)||'{"enabled":[],"disabled":[]}',t=JSON.parse(n),a=new Set(t.enabled||[]),r=new Set(t.disabled||[]);a.add(e),r.delete(e),h({enabled:Array.from(a),disabled:Array.from(r)})},remove(e){const n=globalThis.localStorage?.getItem(b)||'{"enabled":[],"disabled":[]}',t=JSON.parse(n),a=new Set(t.enabled||[]),r=new Set(t.disabled||[]);r.add(e),a.delete(e),h({enabled:Array.from(a),disabled:Array.from(r)})},status(){const e=globalThis.localStorage?.getItem(b)||'{"enabled":[],"disabled":[]}',n=JSON.parse(e);console.log('%c《ERA-Log》当前调试配置:','color: #3498db; font-weight: bold;',n)},clear(){h({enabled:[],disabled:[]})}};globalThis.eraDebug=e}const x={mk:''};class y{moduleName;constructor(){this.moduleName=this._getModuleNameFromStack()||'unknown'}_getModuleNameFromStack(){try{const e=((new Error).stack||'').split('\n').find(e=>e.includes('/src/ERA变量框架/')&&!e.includes('/utils/log.ts'));if(!e)return null;const n=e.match(/src\/ERA变量框架\/([^?:\s)]+)/);if(!n||!n[1])return null;let t=n[1];return t=t.replace(/\.(vue|ts|js)$/,''),t.replace(/^src\/ERA变量框架\//,'').replace(/\/index$/,'').replace(/\//g,'-')}catch(e){return console.error('《ERA-Log-Debug》: 解析模块名时发生意外错误。',e),null}}formatMessage(e,n){return`《ERA》${x.mk?`（${x.mk}）`:''}「${this.moduleName}」【${e}】${String(n)}`}debug(e,n,t){if(!(a=this.moduleName)||f.some(e=>e.test(a))||0===m.length||!m.some(e=>e.test(a)))return;var a;const r=this.formatMessage(e,n);void 0!==t?console.debug(r,t):console.debug(r)}log(e,n,t){const a=this.formatMessage(e,n);void 0!==t?console.log(`%c${a}`,'color: #3498db;',t):console.log(`%c${a}`,'color: #3498db;')}warn(e,n,t){const a=this.formatMessage(e,n);void 0!==t?console.warn(`%c${a}`,'color: #f39c12;',t):console.warn(`%c${a}`,'color: #f39c12;')}error(e,n,t){const a=this.formatMessage(e,n);void 0!==t?console.error(`%c${a}`,'color: #e74c3c; font-weight: bold;',t):console.error(`%c${a}`,'color: #e74c3c; font-weight: bold;')}}const B=new y,w={INIT:[tavern_events.APP_READY],SYNC:['manual_write',u,tavern_events.MESSAGE_RECEIVED,tavern_events.MESSAGE_DELETED,tavern_events.MESSAGE_SWIPED,tavern_events.CHAT_CHANGED,'manual_sync','manual_full_sync','combo_sync'],API:Object.values(g),UPDATE_MK_ONLY:[tavern_events.MESSAGE_SENT],COLLISION_DETECTORS:[tavern_events.GENERATION_STARTED],COMBO_STARTERS:[tavern_events.MESSAGE_UPDATED]},E=new Map([[tavern_events.MESSAGE_SWIPED,{next:tavern_events.GENERATION_STARTED,maxInterval:600}]]),k=new Map([[tavern_events.MESSAGE_UPDATED,{next:tavern_events.GENERATION_STARTED,resultType:'combo_sync',maxInterval:1600}]]),S=new Map([[tavern_events.MESSAGE_SWIPED,500],[tavern_events.MESSAGE_UPDATED,1500]]);function D(e){return w.INIT.includes(e)?'INIT':w.SYNC.includes(e)?'SYNC':w.API.includes(e)?'API':w.UPDATE_MK_ONLY.includes(e)?'UPDATE_MK_ONLY':w.COLLISION_DETECTORS.includes(e)?'COLLISION_DETECTORS':w.COMBO_STARTERS.includes(e)?'COMBO_STARTERS':'UNKNOWN'}function V(e){const n=_.cloneDeep(e),t=[];for(const n of e){if(0===t.length){t.push(n);continue}const e=t[t.length-1],a=n.timestamp-e.timestamp,r=k.get(e.type);if(r&&n.type===r.next){if(a<=r.maxInterval){B.debug('mergeEventBatch',`检测到事件组合: ${e.type} 和 ${n.type} (时间差: ${a}ms <= ${r.maxInterval}ms)。将合并为 ${r.resultType} 事件。`),t.pop(),t.push({type:r.resultType,timestamp:n.timestamp,detail:n.detail});continue}B.debug('mergeEventBatch',`检测到潜在的事件组合，但因超时而失败: ${e.type} 和 ${n.type} (时间差: ${a}ms > ${r.maxInterval}ms)。`)}const o=E.get(e.type);if(o&&n.type===o.next){if(a<=o.maxInterval){B.debug('mergeEventBatch',`检测到相邻事件对冲: ${e.type} 和 ${n.type} (时间差: ${a}ms <= ${o.maxInterval}ms)。将忽略这两个事件。`),t.pop();continue}B.debug('mergeEventBatch',`检测到潜在的事件对冲，但因超时而失败: ${e.type} 和 ${n.type} (时间差: ${a}ms > ${o.maxInterval}ms)。`)}const s=D(e.type);s===D(n.type)&&'SYNC'===s?t[t.length-1]=n:t.push(n)}const a=t.filter(e=>{const n=D(e.type),t='COLLISION_DETECTORS'===n,a='COMBO_STARTERS'===n;return(t||a)&&B.debug('mergeEventBatch',`清理未配对的事件: ${e.type}`),!t&&!a});return B.debug('mergeEventBatch',`事件合并: ${n.length} -> ${a.length}`,{before:n.map(e=>e.type),after:a.map(e=>e.type)}),a}const N=_;var M=a.n(N);function j(e){if(!M().isObject(e))return e;const n=M().cloneDeep(e);return function e(n){if(Array.isArray(n))n.forEach(n=>e(n));else if(M().isPlainObject(n))for(const t in n)t.startsWith('$')?delete n[t]:e(n[t])}(n),n}function R(){const e=getVariables(s)||{};return{meta:M().get(e,i,{}),stat:M().get(e,l,{})}}async function O(e){await updateVariablesWith(async n=>{const t=M().get(n,l,{}),a=await e(t);return M().set(n,l,a),n},s)}async function F(e){await updateVariablesWith(async n=>{const t=M().get(n,i,{}),a=await e(t);return M().set(n,i,a),n},s)}function I(){const e=getVariables({type:'script',script_id:getScriptId()});return o.parse(e??{})}async function T(e){await updateVariablesWith(async n=>{const t=o.parse(n??{});return await e(t)},{type:'script',script_id:getScriptId()})}function P(e){if(!e.includes('{{'))return e;let n=e;return n=n.replace(/{{user}}/gi,SillyTavern.name1),n=n.replace(/{{char}}/gi,SillyTavern.name2),n}const L=new y;function G(e){if(!e)return null;let n=null;if('string'==typeof e.mes)n=e.mes;else if(Array.isArray(e.swipes)){const t=Number(e.swipe_id??0);n=e.swipes[t]||null}else'string'==typeof e.message&&(n=e.message);return null===n?null:P(n)}function J(e){const n=function(e){if('string'!=typeof e)return null;const n=e.match(A);if(!n||!n[1])return null;try{const e=n[1],t=e.match(/"era-message-key"\s*=\s*"(.*?)"/),a=e.match(/"era-message-type"\s*=\s*"(.*?)"/);if(t?.[1]&&a?.[1]){const e={'era-message-key':t[1],'era-message-type':a[1]};return L.debug('parseEraData','成功解析 EraData',e),e}return L.debug('parseEraData','未能在 EraData 块中找到完整的键值对',{customFormatBlock:e}),null}catch(e){return L.warn('parseEraData','解析 EraData 块时发生异常',e),null}}(G(e));return n?'user'===n['era-message-type']:'user'===e?.role}async function Y(e,n){const t=G(e);L.debug('updateMessageContent','更新前的消息内容:',t),L.debug('updateMessageContent','更新后的消息内容:',n);const a={message_id:e.message_id};if(Array.isArray(e.swipes)){const t=Number(e.swipe_id??0),r=[...e.swipes];r[t]=n,a.swipes=r}else a.message=n;await setChatMessages([a],{refresh:'none'})}function q(e){if(!e)return e;let n=String(e).trim();return n=n.replace(/^\s*(?:```|~~~)\[a-zA-Z0-9_-\]*\s*\r?\n/,''),n=n.replace(/\r?\n(?:```|~~~)\s*$/,''),n.trim()}function U(e='',n='exact'){if('any'===n||'*'===e)return/([a-zA-Z][a-zA-Z0-9_]*)/;const t=e.replace(/[.*+?^${}()|[\]\\]/g,'\\$&');switch(n){case'exact':return new RegExp(`(${t})`);case'prefix':return new RegExp(`(${t}[a-zA-Z0-9_]*)`);case'suffix':return new RegExp(`([a-zA-Z0-9_]*${t})`);default:return new RegExp(`([a-zA-Z0-9_]*${t}[a-zA-Z0-9_]*)`)}}function W(e,n,t=e.length){const a=new RegExp(`</${n.source}>`,'g');let r,o=null;for(;null!==(r=a.exec(e))&&r.index<t;)o=r;if(!o)return null;const s=o[1],i=o.index,l=`<${s}>`,d=e.lastIndexOf(l,i);return-1===d?W(e,n,i):{startIndex:d,endIndex:i+`</${s}>`.length,content:e.substring(d+l.length,i),tagName:s}}function H(e,n){return(n?new RegExp(`</?${n.source}>`):/<\/?\s*[a-zA-Z][a-zA-Z0-9_]*\s*>/).test(e)}function K(e,n){const t=function(e,n){let t=e;for(;;){const e=W(t,n);if(!e)break;t=t.slice(0,e.startIndex)+t.slice(e.endIndex)}return t}(e,U('think','contains')),a=function(e,n){const t=[];let a=e.length;for(;a>0;){const r=W(e,n,a);if(!r)break;t.unshift(r.content),a=r.startIndex}return t}(t,n),r=[];for(const e of a){const n=q(e.trim());H(n)||n&&r.push(n)}return r}const Q=new y;function X(e){if(!e)return'';const n=G(e);return function(e){if('string'!=typeof e)return null;const n=e.match(A);if(!n||!n[1])return null;try{const e=n[1],t=e.match(/"era-message-key"\s*=\s*"(.*?)"/),a=e.match(/"era-message-type"\s*=\s*"(.*?)"/);return t?.[1]&&a?.[1]?{'era-message-key':t[1],'era-message-type':a[1]}:null}catch{return null}}(n)?.['era-message-key']||''}async function Z(e){if(!e||'number'!=typeof e.message_id||!e.role)return Q.warn('ensureMessageKey',`无效的消息对象结构，无法确保Key。msg=${JSON.stringify(e)}`),{mk:'',isNew:!1};const n=X(e);if(n)return{mk:n,isNew:!1};const t=`era_mk_${Date.now()}_${Math.random().toString(36).slice(2,8)}`,a='user'===e.role?'user':'assistant',r=`<${p}>{"era-message-key"="${t}","era-message-type"="${a}"}</${p}>`;Q.log('ensureMessageKey',`为消息 (ID: ${e.message_id}) 注入新的Key: ${t}`);const o=(G(e)??'')+'\n'+r,s='assistant'===a?function(e){const n=I();if(!n.在ai消息尾部生成特殊符号)return e;const t=n.特殊符号值;return'string'!=typeof e?t:e.includes(t)?e:e.trimEnd()+'\n'+t}(o):o;return await Y(e,s),{mk:t,isNew:!0}}const ee=async()=>{const e=getChatMessages(-1,{include_swipes:!0})?.[0];if(!e||'number'!=typeof e.message_id)return;const{mk:n}=await Z(e);n&&await F(t=>{const a=_.get(t,c,[]);return a[e.message_id]!==n&&(a[e.message_id]=n,_.set(t,c,a)),t})},ne=new y;async function te(){ne.log('initializeExternalSettings','开始初始化脚本设置...'),await T(async e=>(ne.debug('initializeExternalSettings','当前设置:',e),e)),ne.log('initializeExternalSettings','脚本设置初始化完成。')}$(()=>{te()});const ae=new y,re={'.':'__DOT__','"':'__DQUOTE__','\'':'__SQUOTE__'},oe=_.invert(re),se=new RegExp(Object.keys(re).map(_.escapeRegExp).join('|'),'g'),ie=new RegExp(Object.values(re).map(_.escapeRegExp).join('|'),'g');function le(e){if(Array.isArray(e))return e.map(e=>le(e));if(_.isPlainObject(e)){const n={};for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t)){n[t.replace(se,e=>re[e])]=le(e[t])}return n}return'string'==typeof e?e.replace(se,e=>re[e]):e}function de(e){if(Array.isArray(e))return e.map(e=>de(e));if(_.isPlainObject(e)){const n={};for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t)){n[t.replace(ie,e=>oe[e])]=de(e[t])}return n}return'string'==typeof e?e.replace(ie,e=>oe[e]):e}function ce(e){if(Array.isArray(e))return e.map(e=>Array.isArray(e)||_.isPlainObject(e)?JSON.stringify(e):e);if(_.isPlainObject(e)){const n={};for(const t in e)n[t]=ce(e[t]);return n}return e}const pe=e=>{try{return JSON.stringify(e,null,2)}catch(e){return`<<stringify失败: ${e?.message||e}>>`}};function Ae(e,n){return _.mergeWith(_.cloneDeep(e),_.cloneDeep(n),(e,n)=>{if(Array.isArray(e)||Array.isArray(n))return n})}function ge(e){if(Array.isArray(e))return e;if(e&&'object'==typeof e)return[e];if('string'==typeof e){const n=e.replace(/^\s*```(?:json)?\s*|\s*```\s*$/g,'');try{const e=JSON.parse(n);return Array.isArray(e)?e:[]}catch{return[]}}return[]}function Ce(e){const n=[];if(!e||'string'!=typeof e)return n;const t=function(e){if(!e)return'';let n='',t=!1;for(let a=0;a<e.length;a++){const r=e[a];if('"'!==r||0!==a&&'\\'===e[a-1]||(t=!t),t){n+=r;continue}const o=e[a+1];if('/'===r&&'/'===o){const t=e.indexOf('\n',a+2);if(-1===t)break;n+='\n',a=t;continue}if('/'===r&&'*'===o){const n=e.indexOf('*/',a+2);if(-1===n)break;a=n+1;continue}if('<'===r&&'\x3c!--'===e.substring(a,a+4)){const n=e.indexOf('--\x3e',a+4);if(-1===n)break;a=n+2;continue}n+=r}return n}(e),a=t.trim();let r=0,o=-1,s=!1;for(let e=0;e<a.length;e++){const t=a[e];if('"'!==t||0!==e&&'\\'===a[e-1]||(s=!s),!s)if('{'===t)0===r&&(o=e),r++;else if('}'===t&&r>0&&(r--,0===r&&-1!==o)){const t=a.substring(o,e+1);try{const e=JSON.parse(t);n.push(e)}catch(e){ae.error(`JSONL 解析失败: ${e?.message||e}. 失败的片段: ${t}`,e)}o=-1}}return n}const ue=new y,be=_.debounce(()=>{eventEmit(u),ue.log('debouncedEmitApiWrite',`已触发合并后的 ${u} 事件。`)},50,{leading:!1,trailing:!0});function me(e){const{stat:n,meta:t}=R(),a=j(n);ue.debug('emitWriteDoneEvent','获取了最新的 ERA 数据并生成了纯净版',{stat:n,meta:t,statWithoutMeta:a});const r={...e,stat:de(n),statWithoutMeta:de(a),selectedMks:_.get(t,c,[]),editLogs:_.get(t,d,{})};ue.debug('emitWriteDoneEvent','构建了完整的事件载荷',{inputPayload:e,fullPayload:r}),eventEmit(C,r),ue.log('emitWriteDoneEvent',`已触发 ${C} 事件。操作: ${JSON.stringify(e.actions)}, MK: ${e.mk}, MsgID: ${e.message_id}, 连续处理次数: ${e.consecutiveProcessingCount}`)}const fe=new y;async function ve(e){const n=pe(e.blockContent),t=`\n<${e.blockTag}>\n${n}\n</${e.blockTag}>`,a=await function(){const e=getChatMessages('0-{{lastMessageId}}',{include_swipes:!0});if(!e||0===e.length)return L.debug('findLastAiMessage','聊天记录为空, 未找到任何消息。'),null;for(let n=e.length-1;n>=0;n--){const t=e[n];if(!J(t))return L.debug('findLastAiMessage',`找到最后一条 AI 消息, ID: ${t.message_id}`),t}return L.debug('findLastAiMessage','未在聊天记录中找到任何 AI 消息。'),null}();if(!a)return void fe.warn('performApiWrite','找不到任何 AI 消息，无法执行 API 写入。');const r=(G(a)??'')+t;fe.log('performApiWrite',`实时写入 API 任务 (${e.blockTag}) 到消息 ID ${a.message_id}...`),await Y(a,r),be()}function he(e,n,t){const{type:a,detail:r}=e;var o,s;n.api=!0,a===g.INSERT_BY_OBJECT?ve({blockTag:'VariableInsert',blockContent:r}):a===g.UPDATE_BY_OBJECT?function(e){ve({blockTag:'VariableEdit',blockContent:e})}(r):a===g.INSERT_BY_PATH?(o=r.path,s=r.value,ve({blockTag:'VariableInsert',blockContent:_.set({},o,s)})):a===g.UPDATE_BY_PATH?function(e,n){ve({blockTag:'VariableEdit',blockContent:_.set({},e,n)})}(r.path,r.value):a===g.DELETE_BY_OBJECT?function(e){ve({blockTag:'VariableDelete',blockContent:e})}(r):a===g.DELETE_BY_PATH?function(e){ve({blockTag:'VariableDelete',blockContent:_.set({},e,{})})}(r.path):a===g.GET_CURRENT_VARS&&function(e){me(e)}(t)}const xe=new y;function ye(e,n,t,a){const r=n?_.get(e,n):e;if(void 0===r)return void xe.warn('applyDeleteAtLevel',`VariableDelete 跳过：路径不存在 -> ${n||'(root)'}`);const o=_.get(r,['$meta','necessary']),s=_.get(t,'$meta'),i=_.isPlainObject(s)&&_.isEmpty(s)||_.has(t,['$meta','necessary']);if(_.isPlainObject(t)&&!_.isEmpty(t)){if('all'===o&&!i)return void xe.warn('applyDeleteAtLevel',`VariableDelete 失败：路径 <${n}> 受 "necessary: all" 保护，其子节点无法被删除。`);for(const r of Object.keys(t)){ye(e,n?`${n}.${r}`:r,t[r],a)}return}if('self'===o||'all'===o)return void xe.warn('applyDeleteAtLevel',`VariableDelete 失败：路径 <${n}> 受 "necessary: ${o}" 保护，无法被直接删除。`);if(''===n)return void xe.error('applyDeleteAtLevel','VariableDelete 失败：不允许删除根对象。');const l=_.cloneDeep(r);_.unset(e,n),a.push({op:'delete',path:n,value_old:l}),xe.debug('applyDeleteAtLevel',`成功删除节点: ${n}`)}const Be=new y;function we(e,n){if(!e)return;const t=_.get(e,'$template'),a=_.get(e,n);if(_.isPlainObject(t)&&_.isPlainObject(a)){Be.debug('getInheritedTemplateContent',`为子节点 "${n}" 同时找到原型和特异性内容。\n      - 原型: ${JSON.stringify(t)}\n      - 特异性: ${JSON.stringify(a)}`);const e=Ae(_.cloneDeep(t),a);return Be.debug('getInheritedTemplateContent',`  - 合并后: ${JSON.stringify(e)}`),e}return _.isPlainObject(a)?(Be.debug('getInheritedTemplateContent',`为子节点 "${n}" 只找到特异性内容: ${JSON.stringify(a)}`),a):_.isPlainObject(t)?(Be.debug('getInheritedTemplateContent',`为子节点 "${n}" 只找到原型内容: ${JSON.stringify(t)}`),t):void Be.debug('getInheritedTemplateContent',`在父级模板内容中未为子节点 "${n}" 找到任何可继承的规则。`)}const Ee=new y;function ke(e,n,t,a,r,o){const s=function(e,n){const t=_.get(n,'$template');Be.debug('resolveTemplate',`解析出的模板内容:\n    - 继承: ${JSON.stringify(e)}\n    - 父节点变量: ${JSON.stringify(t)}`);let a={};return a=Ae(a,e),a=Ae(a,t),Be.debug('resolveTemplate',`合并后的最终模板内容: ${JSON.stringify(a)}`),_.isEmpty(a)?null:a}(r,o);Ee.debug('applyInsertAtLevel',`[入口] basePath: "${n||'root'}"`,{statData:_.cloneDeep(e)});const i=n?_.get(e,n):e;if(Ee.debug('applyInsertAtLevel',`[路径检查] at path: "${n||'root'}". currentNodeInVars 的值:`,i),n&&void 0===i){const r=function(e,n){if(Be.debug('applyTemplateToPatch',`[进入] 模板内容: ${JSON.stringify(e)}, 补丁: ${JSON.stringify(n)}`),!_.isPlainObject(n))return Be.debug('applyTemplateToPatch','[退出] 补丁不是一个普通对象，直接返回。'),n;if(!e)return Be.debug('applyTemplateToPatch','[退出] 模板内容无效，直接返回补丁。'),n;if(_.isEmpty(n))return Be.debug('applyTemplateToPatch','补丁为空对象，完全使用模板内容。'),_.cloneDeep(e);const t=Ae(_.cloneDeep(e),n);return Be.debug('applyTemplateToPatch',`合并模板与补丁后的结果: ${JSON.stringify(t)}`),t}(s,t),o=ce(r);return Ee.debug('applyInsertAtLevel',`最终插入数据 at ${n}:\n${JSON.stringify(o,null,2)}`),_.set(e,n,o),a.push({op:'insert',path:n,value_new:_.cloneDeep(o)}),void Ee.debug('applyInsertAtLevel',`原子性插入到新路径: ${n}`)}if(_.isPlainObject(i)&&_.isPlainObject(t)){Ee.debug('applyInsertAtLevel',`[递归补充] at path: "${n||'root'}"\n      - 当前层级模板 (localTplContent): ${JSON.stringify(s)}`);for(const r of Object.keys(t)){const o=n?`${n}.${r}`:r,l=t[r],d=we(s,r);Ee.debug('applyInsertAtLevel',`  - 准备递归子节点: "${r}"\n      - 将传递给子节点的模板 (subInheritedContent): ${JSON.stringify(d)}`),ke(e,o,l,a,d,i)}}else n&&Ee.warn('applyInsertAtLevel',`VariableInsert 失败：路径已存在且无法递归补充 -> ${n}`)}const _e=new y;async function Se(e,n=!1){try{_e.log('rollbackByMk',`开始回滚, MK=${e}`),await updateVariablesWith(n=>{const t=_.get(n,i,{}),a=_.get(n,l,{}),r=ge(_.get(t,[d,e]));if(!r||!r.length)return _e.debug('rollbackByMk','EditLog 为空或无效，跳过回滚。'),n;for(let e=r.length-1;e>=0;e--){const n=r[e],t=String(n?.op||'').toLowerCase(),o=String(n?.path||'');o&&('insert'!==t?'update'!==t&&'delete'!==t||(void 0===n?.value_old?_.unset(a,o):_.set(a,o,_.cloneDeep(n.value_old))):_.unset(a,o))}return _.set(n,l,a),n},s),_e.log('rollbackByMk',`回滚完成：MK=${e}`)}catch(n){_e.error('rollbackByMk',`回滚异常：MK=${e} → ${n?.message||n}`,n)}}async function De(e,n){_e?.debug('findLatestNewValue',`开始为路径 <${e}> 从消息ID <${n}> 向上追溯历史值...`);const t=getChatMessages('0-{{lastMessageId}}',{include_swipes:!1});if(!t||t.length<1)return _e?.debug('findLatestNewValue','消息历史为空，无法追溯。'),null;const a=t.findIndex(e=>e.message_id===n);if(-1===a)return _e?.warn('findLatestNewValue',`错误：在消息列表中未找到起始消息ID: ${n}`),null;for(let n=a-1;n>=0;n--){const a=t[n],r=a?.message_id;if(_e?.debug('findLatestNewValue',`[进度] 正在检查消息 (ID: ${r})，内容: "${(G(a)||'').substring(0,100)}..."`),J(a)||'number'!=typeof r)continue;const o=X(a);if(!o){_e?.debug('findLatestNewValue',`[进度] 消息 (ID: ${r}) 无 MK，跳过。`);continue}const{meta:s}=R(),i=ge(_.get(s,[d,o]));if(i&&0!==i.length){_e?.debug('findLatestNewValue',`[进度] 正在检查 MK ${o} 的 EditLog...\n${pe(i)}`);for(let n=i.length-1;n>=0;n--){const t=i[n];if(t&&t.path){if(t.path===e)return'delete'===t.op?(_e?.error('findLatestNewValue',`>> 状态异常! 在消息(ID:${a.message_id}, MK:${o})中为路径 <${e}> 找到了 'delete' 记录。这表明 update 操作可能正在尝试修改一个已被删除的变量。`),null):(_e?.debug('findLatestNewValue',`>> 成功! 在消息(ID:${a.message_id}, MK:${o})中找到精确路径 <${e}> 的值为: ${pe(t.value_new)}`),_.cloneDeep(t.value_new));if(e.startsWith(t.path+'.')){const n=e.substring(t.path.length+1),r=t.value_new;if(_.isPlainObject(r)&&_.has(r,n)){const e=_.get(r,n);return _e?.debug('findLatestNewValue',`>> 成功! 在消息(ID:${a.message_id}, MK:${o})中找到父级路径 <${t.path}>, 并从中提取子路径 <${n}> 的值为: ${pe(e)}`),_.cloneDeep(e)}}}}}else _e?.debug('findLatestNewValue',`[进度] MK ${o} 的 EditLog 为空，跳过。`)}return _e?.debug('findLatestNewValue',`向上追溯未找到路径 ${e} 的任何历史值，将使用 null 作为旧值`),null}const Ve=new y;async function Ne(e,n,t,a,r,o){const s=n?_.get(e,n):e;if(void 0===s)return void Ve.warn('applyEditAtLevel',`VariableEdit 跳过：路径不存在 -> ${n||'(root)'}`);const i=_.get(s,['$meta','updatable'],!0),l=!1===i&&!0===_.get(t,['$meta','updatable']);if(!1!==i||l)for(const s of Object.keys(t)){const i=n?`${n}.${s}`:s,l=t[s];if(_.isPlainObject(l)){await Ne(e,i,l,a,r,o);continue}if(!_.has(e,i)){Ve.warn('applyEditAtLevel',`VariableEdit 失败：路径非法，无法写入 -> ${i}`);continue}Ve.debug('applyEditAtLevel',`[旧值查找] 准备为路径 <${i}> 从消息 ID <${r}> 向上追溯...`);let d=await De(i,r);null===d?(d=_.get(e,i),Ve.debug('applyEditAtLevel',`[旧值查找] 追溯未找到历史值，从当前 stat_data 中获取到旧值: ${JSON.stringify(d)}`)):Ve.debug('applyEditAtLevel',`[旧值查找] 追溯成功，找到历史旧值: ${JSON.stringify(d)}`);const c=ce(l);_.set(e,i,c),a.push({op:'update',path:i,value_old:_.cloneDeep(d),value_new:_.cloneDeep(c)}),o.set(i,_.cloneDeep(c))}else Ve.warn('applyEditAtLevel',`VariableEdit 失败：路径 <${n}> 受 "$meta.updatable: false" 保护，无法被修改。`)}const $e=new y,Me=async e=>{$e.debug('ApplyVarChangeForMessage','开始处理消息...',{msg:e});try{if(!e||'number'!=typeof e.message_id)return $e.warn('ApplyVarChangeForMessage','无效消息对象或缺少 message_id，退出'),null;const n=e.message_id,t=X(e);if(!t)return $e.debug('ApplyVarChangeForMessage',`消息 (ID: ${n}) 不含 MK，跳过变量写入。`),null;if(J(e))return $e.debug('ApplyVarChangeForMessage',`消息 (ID: ${n}) 为用户消息，跳过变量写入，但保留其 MK。`),t;const a=G(e)||'',r=K(a,U('VariableInsert','exact')),o=K(a,U('VariableEdit','exact')),s=K(a,U('VariableDelete','exact'));$e.debug('ApplyVarChangeForMessage','delete拿到的指令',s),r.length||o.length||s.length||$e.debug('ApplyVarChangeForMessage',`消息 (ID: ${n}) 未检测到变量修改标签。`);const i=r.flatMap(e=>Ce(e)),l=o.flatMap(e=>Ce(e)),c=s.flatMap(e=>Ce(e)),p=le(i),A=le(l),g=le(c);$e.debug('ApplyVarChangeForMessage','数据转义完成',{before:{inserts:i,edits:l,deletes:c},after:{inserts:p,edits:A,deletes:g}});const C=[];await async function(e,n){if(e.length>0){await O(async e=>(Ee.debug('processInsertBlocks','[初始状态] 进入 processInsertBlocks 时的 statData:',_.cloneDeep(e)),e));for(const t of e)if(_.isPlainObject(t)&&!_.isEmpty(t))try{await O(e=>(Ee.debug('processInsertBlocks',`处理 insertRoot: ${JSON.stringify(t)}`),ke(e,'',t,n,null,null),e))}catch(e){Ee.error('processInsertBlocks',`处理 insertRoot 失败: ${e?.message||e}`,e)}Ee.log('processInsertBlocks','所有 VariableInsert 操作完成')}}(p,C),await async function(e,n,t){if(e.length>0){const a=new Map;for(const r of e)if(_.isPlainObject(r)&&!_.isEmpty(r))try{await O(async e=>(Ve.debug('processEditBlocks',`处理 editRoot: ${JSON.stringify(r)}`),await Ne(e,'',r,n,t,a),e))}catch(e){Ve.error('processEditBlocks',`处理 editRoot 失败: ${e?.message||e}`,e)}Ve.log('processEditBlocks','所有 VariableEdit 操作完成')}}(A,C,n),await async function(e,n){if(e.length>0){for(const t of e)if(_.isPlainObject(t)&&!_.isEmpty(t))try{await O(e=>(xe.debug('processDeleteBlocks',`处理 deleteRoot: ${JSON.stringify(t)}`),ye(e,'',t,n),e))}catch(e){xe.error('processDeleteBlocks',`处理 deleteRoot 失败: ${e?.message||e}`,e)}xe.log('processDeleteBlocks','所有 VariableDelete 操作完成')}}(g,C);try{await F(e=>{const a=Array.isArray(C)?C:ge(C);return $e.debug('ApplyVarChangeForMessage',`准备为 MK=${t} (MsgID=${n}) 写入 EditLog:\n${JSON.stringify(a,null,2)}`),_.set(e,[d,t],JSON.stringify(a)),e}),$e.debug('ApplyVarChangeForMessage',`成功为 MK=${t} 写入 EditLog。`)}catch(e){$e.error('ApplyVarChangeForMessage',`为 MK=${t} 写入 EditLogs 失败: ${e?.message||e}`,e)}return t}catch(e){return $e.error('ApplyVarChangeForMessage',`变量写入器异常: ${e?.message||e}`,e),null}},je=new y,Re=e=>{const n=X(e);return n||null},Oe=async(e=!1)=>{e?je.warn('resyncStateOnHistoryChange','强制完全重算模式已启动！'):je.log('resyncStateOnHistoryChange','聊天记录变更，启动状态同步...');const n=getChatMessages('0-{{lastMessageId}}',{include_swipes:!0});je.debug('resyncStateOnHistoryChange','获取到的 allMessages:',n);const{meta:t}=R(),a=_.cloneDeep(_.get(t,c,[]));if(je.debug('resyncStateOnHistoryChange',`状态快照: oldSelectedMks.length=${a.length}, allMessages.length=${n?.length??0}`),!n||0===n.length)return void je.log('resyncStateOnHistoryChange','当前聊天记录为空，不执行任何操作，同步终止。');let r=-1;if(e)r=0,je.log('resyncStateOnHistoryChange','强制模式：设置重算起点为 0。');else if(n.length<a.length){je.log('resyncStateOnHistoryChange','检测到消息删除。');for(let e=n.length-1;e>=0;e--){const t=Re(n[e]),o=a[e];if(je.debug('resyncStateOnHistoryChange',`[删除-对齐检查] i=${e}, currentMk=${t}, recordedMk=${o}`),t===o){r=e+1,je.log('resyncStateOnHistoryChange',`找到对齐点于 message_id=${e} (MK=${t})。将从 ID ${r} 开始检查。`);break}}-1===r&&(r=0,je.log('resyncStateOnHistoryChange','未找到任何对齐点，将从头开始检查。'));const e=n.map(Re).filter(e=>e),t=a.filter(e=>e),o=_.difference(t,e);if(je.debug('resyncStateOnHistoryChange',`旧MK序列: [${t.join(', ')}]`),je.debug('resyncStateOnHistoryChange',`新MK序列: [${e.join(', ')}]`),je.debug('resyncStateOnHistoryChange',`计算出的被删除MK: [${o.join(', ')}]`),o.length>0&&(e=>{const{meta:n}=R();for(const t of e)if(t&&ge(_.get(n,[d,t])).length>0)return!1;return!0})(o)){je.log('resyncStateOnHistoryChange',`检测到被删除的 ${o.length} 条消息均不含变量修改，执行快速同步。`);const e=[];for(let t=0;t<n.length;t++)e[t]=Re(n[t]);return await F(n=>(_.set(n,c,e),n)),void je.log('resyncStateOnHistoryChange','快速同步完成，仅修正 SelectedMks 数组。')}}else if(n.length===a.length){je.log('resyncStateOnHistoryChange','检测到消息长度不变，可能为修改或切换。');for(let e=n.length-1;e>=0;e--){const t=Re(n[e]),o=a[e];je.debug('resyncStateOnHistoryChange',`[切换-对齐检查] i=${e}, currentMk=${t}, recordedMk=${o}`),t!==o&&(r=e)}-1===r?(r=n.length>0?n.length-1:0,je.log('resyncStateOnHistoryChange',`所有MK均匹配。启动模拟写入，强制重算最后一条消息 (ID: ${r})。`)):je.log('resyncStateOnHistoryChange',`找到最早的不匹配点于 message_id=${r}。将从该点开始重算。`)}else je.log('resyncStateOnHistoryChange','检测到消息添加。'),r=a.length,je.log('resyncStateOnHistoryChange',`新增消息的写入逻辑已由同步流程接管。将从新增消息 (ID: ${r}) 开始处理。`);if(r>-1){const e=a.slice(r).filter(e=>e);if(e.length>0){je.log('resyncStateOnHistoryChange',`准备回滚 ${e.length} 个MK: [${e.join(', ')}]`);for(const n of e.reverse())je.debug('resyncStateOnHistoryChange',`[回滚] 正在回滚 MK: ${n}`),await Se(n,!0);je.log('resyncStateOnHistoryChange','逆序回滚完成。')}}je.log('resyncStateOnHistoryChange',`从 ID ${r} 开始顺序重算...`);const o=a.slice(0,r);for(let e=r;e<n.length;e++){const t=n[e];je.debug('resyncStateOnHistoryChange',`[重算] 正在处理消息索引: ${e}`);const a=await Me(t);o[e]=a}je.log('resyncStateOnHistoryChange','顺序重算完成。'),await F(e=>(_.set(e,c,o),e)),je.log('resyncStateOnHistoryChange','状态同步完成。')},Fe=new y;async function Ie(e){const n=getChatMessages(e);if(!n||0===n.length)return void Fe.warn('forceRenderMessage',`找不到消息ID为 ${e} 的消息。`);const t=n[0];await setChatMessages([{message_id:e,message:t.message}]),Fe.debug('forceRenderMessage',`已使用 setChatMessages 刷新消息 ${e}。`)}const Te=new y;async function Pe(e,n,t){const{type:a}=e;Te.debug('handleSyncEvent',`事件 ${a} 触发状态同步流程...`);const r='manual_full_sync'===a;await Oe(r),n.resync=!0,'combo_sync'!=a&&async function(){const e=getVariables({type:'script',script_id:getScriptId()});if(!_.get(e,'强制重载功能',!1))return void Fe.debug('forceRenderRecentMessages','强制重载功能未启用, 跳过。');const n=_.get(e,'强制重载消息数',1);Fe.log('forceRenderRecentMessages',`开始强制重载, 数量: ${n}`),await new Promise(e=>setTimeout(e,1e3));const t=getChatMessages('0-{{lastMessageId}}');if(!t||0===t.length)return void Fe.warn('forceRenderRecentMessages','无法获取到任何消息, 终止重载。');const a=t.slice(-n);for(const e of a)Fe.debug('forceRenderRecentMessages',`正在强制渲染消息: ${e.message_id}`),await Ie(e.message_id),await new Promise(e=>setTimeout(e,100));Fe.log('forceRenderRecentMessages','强制重载完成。')}(),await ee(),me(t)}const Le=new y;let ze=null;function Ge(){const e=x.mk;return e&&ze&&ze.mk===e?(Le.debug('updateConsecutiveMkCount',`连续处理写入/同步操作的 MK: ${e}。旧计数: ${ze.count}，新计数: ${ze.count+1}`),ze.count++):(Le.debug('updateConsecutiveMkCount',`新的写入/同步操作的 MK: ${e}。重置计数为 1。前一个 MK 是: ${ze?.mk}`),ze={mk:e,count:1}),ze.count}async function Je(e,n){const{type:t}=e,a=D(t);let r=null;const o={rollback:!1,apply:!1,resync:!1,api:!1,apiWrite:!1};try{const{mk:s,message_id:i,isNewKey:l}=await(async()=>{try{const e=getChatMessages(-1,{include_swipes:!0})?.[0];if(Q.debug('ensureMkForLatestMessage',`获取到的最新消息对象 (msg): ${JSON.stringify(e)}`),!e||'number'!=typeof e.message_id)return Q.warn('ensureMkForLatestMessage','无法读取最新消息或其ID，退出'),{mk:'',message_id:null,isNewKey:!1};const{mk:n,isNew:t}=await Z(e);return Q.log('ensureMkForLatestMessage',`已为最新消息 ${e.message_id} 确保 MK 存在。 (是否新建: ${t})`),{mk:n,message_id:e.message_id,isNewKey:t}}catch(e){return Q.error('ensureMkForLatestMessage',`确保MK时异常: ${e?.message||e}`,e),{mk:'',message_id:null,isNewKey:!1}}})();if(!s||null===i)return Le.warn('dispatchAndExecuteTask','无法获取有效的 MK 或消息 ID，跳过任务执行。'),n;x.mk=s,r=i,l&&s&&(n={mk:s,ignoreCount:1});const{shouldSkip:d,newIgnoreRule:c}=function(e,n,t){return t&&e===tavern_events.CHARACTER_MESSAGE_RENDERED&&n===t.mk?(Le.log('handleRedundantRenderEvent',`忽略由 MK (${t.mk}) 注入触发的冗余渲染事件。剩余忽略次数: ${t.ignoreCount-1}`),t.ignoreCount--,t.ignoreCount<=0&&(t=null,Le.log('handleRedundantRenderEvent','忽略次数用完')),{shouldSkip:!0,newIgnoreRule:t}):{shouldSkip:!1,newIgnoreRule:t}}(t,s,n);if(n=c,d)return n;Le.log('dispatchAndExecuteTask',`执行任务: ${t} (分组: ${a})`);const p={mk:s,message_id:r,actions:o,consecutiveProcessingCount:1};switch(a){case'INIT':te(),p.consecutiveProcessingCount=Ge(),await Pe(e,o,p);break;case'SYNC':p.consecutiveProcessingCount=Ge(),await Pe(e,o,p);break;case'API':he(e,o,p);break;case'UPDATE_MK_ONLY':await async function(){await ee()}()}}catch(e){Le.error('dispatchAndExecuteTask',`事件 ${t} 处理异常: ${e}`,e)}finally{x.mk=''}return n}const Ye=new y,qe=[];let Ue=!1,We=!1,He=null;function Ke(e,n){Ye.debug('pushToQueue',`接收到事件: ${e}，已推入队列。`,{detail:n}),qe.push({type:e,detail:n,timestamp:Date.now()}),async function(){if(We)return void Ye.debug('processQueue','已有处理函数在排队等待，本次调用忽略。');Ue&&(Ye.debug('processQueue','处理器忙碌，进入排队等待状态...'),We=!0,await new Promise(e=>{He=e}),We=!1,Ye.debug('processQueue','等待结束，获取到处理权。'));if(0===qe.length)return void Ye.debug('processQueue','队列为空，无需处理。');Ue=!0,Ye.log('processQueue','处理器启动');const e=qe[0];if('API'!==D(e.type)){const n=S.get(e.type)??300;Ye.log('processQueue',`启动事件收集窗口，等待 ${n}ms...`),await new Promise(e=>setTimeout(e,n))}Ye.debug('processQueue','事件收集窗口关闭，准备处理的队列内容:',JSON.stringify(qe.map(e=>e.type)));let n=null;for(;qe.length>0;){const e=qe.splice(0,qe.length),t=V(e);Ye.debug('processQueue',`开始处理一个新批次，包含 ${e.length} 个原始事件，合并后为 ${t.length} 个任务。`);for(const e of t){n=await Je(e,n)}Ye.debug('processQueue','本轮批次处理完毕。')}if(Ue=!1,Ye.log('processQueue','处理器空闲，已释放锁。'),He){Ye.debug('processQueue','通知排队的处理器开始工作。');const e=He;He=null,e()}}()}const Qe=new y;$(()=>{registerMacroLike(/{{\s*ERA(-withmeta)?\s*:\s*([^}]+?)\s*}}/gi,(e,n,t,a)=>function(e){if(!e.includes('{{ERA'))return e;const{stat:n}=R();return n?e.replace(/{{\s*ERA(-withmeta)?\s*:\s*([^}]+?)\s*}}/gi,(e,t,a)=>{const r=a.trim(),o=!!t;let s;if(s='$ALLDATA'===r?n:_.get(n,r),void 0===s)return Qe.warn('parseEraMacros',`在 stat_data 中未找到路径 "${r}", 宏将替换为空字符串.`),'';const i=o?s:j(s),l=de(i);return Qe.debug('parseEraMacros',`宏替换数据反转义: ${r}`,{before:i,after:l}),'object'==typeof l&&null!==l?JSON.stringify(l):String(l)}):(Qe.warn('parseEraMacros','无法获取到 stat_data, 宏替换失败.'),e)}(n))});const Xe=Vue,Ze={class:'acc'},en=['aria-expanded'],nn={class:'title'},tn={class:'hint'},an={class:'inner'},rn=(0,Xe.defineComponent)({__name:'EraAccordion',props:{title:{},defaultOpen:{type:Boolean,default:!1}},setup(e){const n=e,t=(0,Xe.ref)(n.defaultOpen);return(n,a)=>((0,Xe.openBlock)(),(0,Xe.createElementBlock)('section',Ze,[(0,Xe.createCommentVNode)(' 折叠头：点击切换 '),(0,Xe.createElementVNode)('button',{class:'acc-head','aria-expanded':t.value?'true':'false',onClick:a[0]||(a[0]=e=>t.value=!t.value)},[(0,Xe.createElementVNode)('span',{class:(0,Xe.normalizeClass)(['caret',{open:t.value}])},'▸',2),(0,Xe.createCommentVNode)(' 指示箭头 '),(0,Xe.createElementVNode)('span',nn,(0,Xe.toDisplayString)(e.title),1),(0,Xe.createCommentVNode)(' 标题文本 '),a[1]||(a[1]=(0,Xe.createElementVNode)('span',{class:'spacer'},null,-1)),(0,Xe.createCommentVNode)(' 弹性空隙 '),(0,Xe.createElementVNode)('span',tn,(0,Xe.toDisplayString)(t.value?'收起':'展开'),1),(0,Xe.createCommentVNode)(' 右侧提示 ')],8,en),(0,Xe.createCommentVNode)(' 内容：高度过渡（使用 CSS Grid） '),(0,Xe.createElementVNode)('div',{class:(0,Xe.normalizeClass)(['acc-body',{open:t.value}])},[(0,Xe.createElementVNode)('div',an,[(0,Xe.renderSlot)(n.$slots,'default')])],2)]))}});a(318);var on=a(441);const sn=(0,on.A)(rn,[['__scopeId','data-v-f723f6d6']]),ln={class:'meta'},dn={class:'kv'},cn={class:'item'},pn=['title'],An={class:'item'},gn={class:'v'},Cn=(0,Xe.defineComponent)({__name:'MetaHeader',props:{mk:{},messageId:{}},setup(e){const n=new y,t=e;return(0,Xe.onMounted)(()=>{n.log('onMounted','组件已挂载',{props:t})}),(0,Xe.watch)(()=>t,e=>{n.debug('watch:props','Props 发生变化',{newProps:e})},{deep:!0}),(n,t)=>((0,Xe.openBlock)(),(0,Xe.createElementBlock)('section',ln,[(0,Xe.createElementVNode)('div',dn,[(0,Xe.createElementVNode)('div',cn,[t[0]||(t[0]=(0,Xe.createElementVNode)('span',{class:'k'},'mk',-1)),(0,Xe.createCommentVNode)(' 键：mk '),(0,Xe.createElementVNode)('span',{class:'v',title:e.mk},(0,Xe.toDisplayString)(e.mk||'—'),9,pn),(0,Xe.createCommentVNode)(' 值：mk ')]),(0,Xe.createElementVNode)('div',An,[t[1]||(t[1]=(0,Xe.createElementVNode)('span',{class:'k'},'message_id',-1)),(0,Xe.createCommentVNode)(' 键：message_id '),(0,Xe.createElementVNode)('span',gn,(0,Xe.toDisplayString)(e.messageId??'—'),1),(0,Xe.createCommentVNode)(' 值：message_id ')])]),t[2]||(t[2]=(0,Xe.createElementVNode)('div',{class:'glow'},null,-1)),(0,Xe.createCommentVNode)(' 装饰：流光条 ')]))}});a(534);const un=(0,on.A)(Cn,[['__scopeId','data-v-439c7dd4']]),bn={class:'tabs'},mn={class:'tab-bar',role:'tablist'},fn=['onClick'],vn={class:'tab-content'},hn={key:0},xn={key:1},yn=(0,Xe.defineComponent)({__name:'TabSwitch',props:{tabs:{},active:{}},emits:['update:active'],setup(e,{emit:n}){const t=new y,a=e,r=n,o=(0,Xe.ref)(a.active??'pure');return(0,Xe.watch)(()=>a.active,e=>{e&&(t.debug('watch:active',`外部同步 active tab 为: ${e}`),o.value=e)}),(0,Xe.onMounted)(()=>{t.log('onMounted','组件已挂载',{props:a})}),(n,a)=>((0,Xe.openBlock)(),(0,Xe.createElementBlock)('section',bn,[(0,Xe.createCommentVNode)(' 页签行 '),(0,Xe.createElementVNode)('div',mn,[((0,Xe.openBlock)(!0),(0,Xe.createElementBlock)(Xe.Fragment,null,(0,Xe.renderList)(e.tabs,e=>((0,Xe.openBlock)(),(0,Xe.createElementBlock)('button',{key:e.key,class:(0,Xe.normalizeClass)(['tab-btn',{active:e.key===o.value}]),role:'tab',onClick:n=>{return a=e.key,t.log('setActive',`用户点击，切换 tab 到: ${a}`),o.value=a,void r('update:active',a);var a}},(0,Xe.toDisplayString)(e.label),11,fn))),128))]),(0,Xe.createCommentVNode)(' 内容区：根据活动键渲染对应插槽 '),(0,Xe.createElementVNode)('div',vn,['pure'===o.value?((0,Xe.openBlock)(),(0,Xe.createElementBlock)('div',hn,[(0,Xe.renderSlot)(n.$slots,'pure'),(0,Xe.createCommentVNode)(' 纯净状态数据内容 ')])):((0,Xe.openBlock)(),(0,Xe.createElementBlock)('div',xn,[(0,Xe.renderSlot)(n.$slots,'full'),(0,Xe.createCommentVNode)(' 完整状态数据内容 ')]))])]))}});a(845);const Bn=(0,on.A)(yn,[['__scopeId','data-v-4f79defc']]),wn={class:'node'},En={class:'key'},kn={class:'brace'},_n={key:0,class:'summary'},Sn={key:0,class:'json-children'},Dn={class:'brace'};const Vn=(0,Xe.defineComponent)({name:'JsonNode',props:{k:{type:[String,Number],required:!0},v:{required:!0},path:{type:String,required:!0},level:{type:Number,required:!0},defaultCollapsed:{type:Boolean,default:!0},maxDepth:{type:Number,default:3}},setup(e){const n=new y;(0,Xe.onMounted)(()=>{n.debug('onMounted','组件已挂载',{props:e})});const t=(0,Xe.computed)(()=>{const n=e.v;if(null===n)return'null';if(Array.isArray(n))return'array';const t=typeof n;return'object'===t?'object':'undefined'===t?'undefined':t}),a=(0,Xe.computed)(()=>'array'===t.value),r=(0,Xe.computed)(()=>'object'===t.value),o=(0,Xe.computed)(()=>a.value||r.value),s=(0,Xe.ref)(e.level<=(e.maxDepth??3)||!e.defaultCollapsed);(0,Xe.watch)(s,e=>{n.debug('watch:open','折叠状态改变为: '+(e?'展开':'收起'))});const i=(0,Xe.computed)(()=>{const n=e.v;switch(t.value){case'string':return JSON.stringify(n);case'number':case'symbol':return String(n);case'boolean':return n?'true':'false';case'null':return'null';case'undefined':return'undefined';case'bigint':return String(n)+'n';case'function':return'ƒ()';default:return''}}),l=(0,Xe.computed)(()=>a.value?`Array[${e.v.length}]`:r.value?`Object{${Object.keys(e.v||{}).length}}`:''),d=(0,Xe.computed)(()=>{if(r.value)return e.v;if(a.value){const n={};return e.v.forEach((e,t)=>{n[String(t)]=e}),n}return{}});return{type:t,isArray:a,foldable:o,open:s,primitiveText:i,summary:l,childEntries:d}}});a(581);const Nn=(0,on.A)(Vn,[['render',function(e,n,t,a,r,o){const s=(0,Xe.resolveComponent)('JsonNode',!0);return(0,Xe.openBlock)(),(0,Xe.createElementBlock)(Xe.Fragment,null,[(0,Xe.createCommentVNode)(' 单条节点（支持递归） '),(0,Xe.createElementVNode)('div',wn,[(0,Xe.createCommentVNode)(' 每个键值对 / 数组项的容器 '),(0,Xe.createElementVNode)('div',{class:'json-line',style:(0,Xe.normalizeStyle)({paddingLeft:14*e.level+'px'})},[(0,Xe.createCommentVNode)(' 行+缩进 '),e.foldable?((0,Xe.openBlock)(),(0,Xe.createElementBlock)('button',{key:0,class:(0,Xe.normalizeClass)(['caret',{open:e.open}]),'aria-label':'toggle',onClick:n[0]||(n[0]=n=>e.open=!e.open)},'▸',2)):(0,Xe.createCommentVNode)('v-if',!0),(0,Xe.createCommentVNode)(' 折叠箭头按钮 '),(0,Xe.createElementVNode)('span',En,(0,Xe.toDisplayString)(e.k),1),n[1]||(n[1]=(0,Xe.createElementVNode)('span',{class:'colon'},':',-1)),(0,Xe.createCommentVNode)(' 键与冒号 '),(0,Xe.createCommentVNode)(' 可折叠容器：只显示括号与摘要；展开后由下方 children 区域递归渲染 '),e.foldable?((0,Xe.openBlock)(),(0,Xe.createElementBlock)(Xe.Fragment,{key:1},[(0,Xe.createElementVNode)('span',kn,(0,Xe.toDisplayString)(e.isArray?'[':'{'),1),(0,Xe.createCommentVNode)(' 容器起始括号 '),e.open?(0,Xe.createCommentVNode)('v-if',!0):((0,Xe.openBlock)(),(0,Xe.createElementBlock)('span',_n,(0,Xe.toDisplayString)(e.summary),1)),(0,Xe.createCommentVNode)(' 收起时的摘要 ')],64)):((0,Xe.openBlock)(),(0,Xe.createElementBlock)(Xe.Fragment,{key:2},[(0,Xe.createCommentVNode)(' 原始值：直接着色渲染 '),(0,Xe.createElementVNode)('span',{class:(0,Xe.normalizeClass)(['val',e.type])},(0,Xe.toDisplayString)(e.primitiveText),3),(0,Xe.createCommentVNode)(' 原始值文本 ')],64))],4),(0,Xe.createCommentVNode)(' 子元素区域：仅当可折叠且处于展开态时显示 '),e.foldable&&e.open?((0,Xe.openBlock)(),(0,Xe.createElementBlock)('div',Sn,[(0,Xe.createCommentVNode)(' 递归：自引用同名组件 JsonNode（依赖 name: \'JsonNode\' 实现自递归） '),((0,Xe.openBlock)(!0),(0,Xe.createElementBlock)(Xe.Fragment,null,(0,Xe.renderList)(e.childEntries,(n,t)=>((0,Xe.openBlock)(),(0,Xe.createBlock)(s,{key:e.path+'/'+String(t),k:String(t),v:n,path:e.path+'/'+String(t),level:e.level+1,'default-collapsed':e.defaultCollapsed,'max-depth':e.maxDepth},null,8,['k','v','path','level','default-collapsed','max-depth']))),128)),(0,Xe.createElementVNode)('div',{class:'json-line',style:(0,Xe.normalizeStyle)({paddingLeft:14*e.level+'px'})},[(0,Xe.createElementVNode)('span',Dn,(0,Xe.toDisplayString)(e.isArray?']':'}'),1),(0,Xe.createCommentVNode)(' 容器闭合括号 ')],4)])):(0,Xe.createCommentVNode)('v-if',!0)])],2112)}],['__scopeId','data-v-7005772e']]),$n={class:'json-root'},Mn={class:'json-line'},jn={class:'brace'},Rn={class:'json-children'},On={key:1,class:'json-line',style:{paddingLeft:'14px'}},Fn={class:'json-line'},In={class:'brace'},Tn=(0,Xe.defineComponent)({__name:'PrettyJsonViewer',props:{value:{},defaultCollapsed:{type:Boolean,default:!0},maxDepth:{default:3}},setup(e){const n=new y,t=e,a=(0,Xe.computed)(()=>{const e=t.value,a=null!==e&&'object'==typeof e;return n.debug('isPlainObjectOrArray',`计算结果: ${a}。该值${a?'是':'不是'}普通对象或数组。`,{传入值:e}),a}),r=(0,Xe.computed)(()=>{const e=t.value;let a;if(null===e)a='null';else if(Array.isArray(e))a='array';else{const n=typeof e;a='undefined'===n?'undefined':n}return n.debug('primitiveType',`计算原始值类型: ${a}`,{传入值:e}),a}),o=(0,Xe.computed)(()=>{const e=t.value;let a;switch(r.value){case'string':a=JSON.stringify(e);break;case'number':case'symbol':a=String(e);break;case'boolean':a=e?'true':'false';break;case'null':a='null';break;case'undefined':a='undefined';break;case'bigint':a=String(e)+'n';break;case'function':a='ƒ()';break;default:a=''}return n.debug('primitiveText',`格式化原始值文本: "${a}"`,{传入值:e,类型:r.value}),a}),s=(0,Xe.computed)(()=>{const e=Array.isArray(t.value);return n.debug('isArrayRoot',`计算根节点是否为数组: ${e}`,{传入值:t.value}),e}),i=(0,Xe.computed)(()=>s.value?'[':'{'),l=(0,Xe.computed)(()=>s.value?']':'}');return(n,t)=>((0,Xe.openBlock)(),(0,Xe.createElementBlock)('div',$n,[(0,Xe.createElementVNode)('div',Mn,[(0,Xe.createElementVNode)('span',jn,(0,Xe.toDisplayString)(i.value),1),(0,Xe.createCommentVNode)(' 根开括号：对象{ / 数组[ ')]),(0,Xe.createElementVNode)('div',Rn,[a.value?((0,Xe.openBlock)(!0),(0,Xe.createElementBlock)(Xe.Fragment,{key:0},(0,Xe.renderList)(e.value,(n,t)=>((0,Xe.openBlock)(),(0,Xe.createBlock)(Nn,{key:String(t),k:String(t),v:n,path:String(t),level:1,'default-collapsed':e.defaultCollapsed,'max-depth':e.maxDepth},null,8,['k','v','path','default-collapsed','max-depth']))),128)):((0,Xe.openBlock)(),(0,Xe.createElementBlock)('div',On,[t[0]||(t[0]=(0,Xe.createElementVNode)('span',{class:'key'},'value',-1)),t[1]||(t[1]=(0,Xe.createElementVNode)('span',{class:'colon'},':',-1)),(0,Xe.createElementVNode)('span',{class:(0,Xe.normalizeClass)(['val',r.value])},(0,Xe.toDisplayString)(o.value),3)]))]),(0,Xe.createElementVNode)('div',Fn,[(0,Xe.createElementVNode)('span',In,(0,Xe.toDisplayString)(l.value),1),(0,Xe.createCommentVNode)(' 根闭括号：对象} / 数组] ')])]))}});a(715);const Pn=(0,on.A)(Tn,[['__scopeId','data-v-6fc9ef75']]),Ln={class:'details-wrapper'},zn={class:'detail-block'},Gn={class:'detail-block'},Jn=(0,Xe.defineComponent)({__name:'OperationDetails',props:{data:{}},setup:e=>(n,t)=>((0,Xe.openBlock)(),(0,Xe.createBlock)(sn,{title:'ERA 最新操作详情','default-open':!1},{default:(0,Xe.withCtx)(()=>[(0,Xe.createElementVNode)('div',Ln,[(0,Xe.createElementVNode)('div',zn,[t[0]||(t[0]=(0,Xe.createElementVNode)('h4',{class:'detail-title'},'SelectedMks（数组）',-1)),(0,Xe.createVNode)(Pn,{value:e.data.selectedMks,'default-collapsed':!0,'max-depth':3},null,8,['value'])]),(0,Xe.createElementVNode)('div',Gn,[t[1]||(t[1]=(0,Xe.createElementVNode)('h4',{class:'detail-title'},'EditLogs（对象）',-1)),(0,Xe.createVNode)(Pn,{value:e.data.editLogs,'default-collapsed':!0,'max-depth':2},null,8,['value'])])])]),_:1}))});a(340);const Yn=(0,on.A)(Jn,[['__scopeId','data-v-6079192c']]),qn={class:'era-panel'},Un={class:'panel-top'},Wn={class:'panel-body'},Hn={class:'panel-content-wrapper'},Kn={key:1,class:'empty'},Qn=(0,Xe.defineComponent)({__name:'EraPanel',props:{data:{}},setup(e){const n=new y,t=[{key:'pure',label:'纯净状态数据'},{key:'full',label:'完整状态数据'}],a=(0,Xe.ref)('pure');return(r,o)=>((0,Xe.openBlock)(),(0,Xe.createElementBlock)('div',qn,[(0,Xe.createElementVNode)('header',Un,[o[2]||(o[2]=(0,Xe.createElementVNode)('h3',{class:'panel-title'},'ERA 数据面板',-1)),(0,Xe.createElementVNode)('button',{class:'btn-close','aria-label':'关闭',onClick:o[0]||(o[0]=e=>{return t='FloatingBall',n.debug('requestSwitchView',`请求切换视图到: ${t}`),void(window.eraUiSwitchView?window.eraUiSwitchView(t):n.warn('requestSwitchView','全局切换函数 eraUiSwitchView 未找到'));var t})},'×')]),(0,Xe.createElementVNode)('div',Wn,[(0,Xe.createElementVNode)('div',Hn,[e.data?((0,Xe.openBlock)(),(0,Xe.createElementBlock)(Xe.Fragment,{key:0},[(0,Xe.createVNode)(sn,{title:'最新消息元数据','default-open':!1},{default:(0,Xe.withCtx)(()=>[(0,Xe.createVNode)(un,{mk:e.data.mk,'message-id':e.data.message_id},null,8,['mk','message-id'])]),_:1}),(0,Xe.createVNode)(Yn,{data:e.data},null,8,['data']),(0,Xe.createVNode)(Bn,{active:a.value,'onUpdate:active':o[1]||(o[1]=e=>a.value=e),tabs:t},{pure:(0,Xe.withCtx)(()=>[(0,Xe.createVNode)(Pn,{value:e.data.statWithoutMeta,'default-collapsed':!0,'max-depth':1/0},null,8,['value'])]),full:(0,Xe.withCtx)(()=>[(0,Xe.createVNode)(Pn,{value:e.data.stat,'default-collapsed':!0,'max-depth':1/0},null,8,['value'])]),_:1},8,['active'])],64)):((0,Xe.openBlock)(),(0,Xe.createElementBlock)('div',Kn,'等待 era:writeDone 事件数据…'))])])]))}});a(133);const Xn=(0,on.A)(Qn,[['__scopeId','data-v-7500b97c']]),Zn=(0,Xe.defineComponent)({__name:'FloatingBall',emits:['click'],setup(e){const n=new y;return(0,Xe.onMounted)(()=>{n.log('onMounted','FloatingBall.vue 组件已挂载')}),(e,n)=>((0,Xe.openBlock)(),(0,Xe.createElementBlock)('div',{class:'floating-ball',onClick:n[0]||(n[0]=n=>e.$emit('click'))},[n[1]||(n[1]=(0,Xe.createElementVNode)('span',{class:'era-logo','aria-hidden':'true'},'ERA',-1)),(0,Xe.createCommentVNode)(' 仅显示用；不拦截事件 ')]))}});a(903);const et=(0,on.A)(Zn,[['__scopeId','data-v-39e74a4e']]),nt={class:'about-era-card',role:'complementary','aria-label':'关于 ERA'},tt=(0,Xe.defineComponent)({__name:'AboutEra',setup:e=>(e,n)=>((0,Xe.openBlock)(),(0,Xe.createElementBlock)('section',nt,[...n[0]||(n[0]=[(0,Xe.createStaticVNode)('<h4 class="card-title" data-v-9b1026a6>关于 ERA</h4><div class="info-list" data-v-9b1026a6><ul data-v-9b1026a6><li data-v-9b1026a6><strong data-v-9b1026a6>ERA 项目地址:</strong><a href="https://github.com/RockingSisyphus/ERA-EfficientRollbackArchitecture/tree/master" target="_blank" rel="noopener noreferrer" data-v-9b1026a6> GitHub </a></li><li data-v-9b1026a6><strong data-v-9b1026a6>ERA 介绍帖:</strong><a href="https://discord.com/channels/1134557553011998840/1423319849400270928" target="_blank" rel="noopener noreferrer" data-v-9b1026a6> Discord </a></li><li data-v-9b1026a6><strong data-v-9b1026a6>作者:</strong> 世界的山田</li><li data-v-9b1026a6><strong data-v-9b1026a6>ERA 框架交流群:</strong> 1006127516</li></ul></div>',2)])]))});a(514);const at=(0,on.A)(tt,[['__scopeId','data-v-9b1026a6']]),rt=new y;async function ot(e){if(!isCharacterTavernRegexesEnabled())return void rt.log('ensureCharacterRegex','局部正则未启用，跳过注入。');getTavernRegexes({scope:'character'}).some(n=>n.script_name===e.script_name)?rt.log('ensureCharacterRegex',`名为 "${e.script_name}" 的正则已存在，无需注入。`):(rt.log('ensureCharacterRegex',`未找到名为 "${e.script_name}" 的正则，正在注入...`),await updateTavernRegexesWith(n=>(n.push({...e,id:'',scope:'character'}),n),{scope:'character'}),rt.log('ensureCharacterRegex','正则注入成功。'))}const st={script_name:'ERA 数据隐藏正则',enabled:!0,run_on_edit:!0,find_regex:String.raw`/<(era_data|variable(?:think|insert|edit|delete))>[\s\S]*?</\1>/gsi`,replace_string:'',source:{user_input:!0,ai_output:!0,slash_command:!1,world_info:!1},destination:{display:!0,prompt:!0},min_depth:null,max_depth:null};const it={script_name:'ERA 状态栏模板',enabled:!0,run_on_edit:!0,find_regex:'/<StatusPlaceHolderImpl\\/>/gsi',replace_string:'```html\n<!doctype html>\n<html lang="zh-CN">\n  <head>\n    <meta charset="UTF-8" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title>ERA 状态栏模板</title>\n    <style>\n      body {\n        font-family:\n          -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, \'Noto Sans\', sans-serif,\n          \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\', \'Noto Color Emoji\';\n        margin: 0;\n        padding: 0;\n        background-color: transparent;\n      }\n      .era-statusbar {\n        color: #e0e0e0;\n        background: linear-gradient(145deg, #2c3e50, #34495e);\n        border-radius: 12px;\n        padding: 16px;\n        margin-top: 20px;\n        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);\n        border: 1px solid #4a6278;\n        overflow: hidden;\n      }\n      .era-statusbar-header {\n        display: flex;\n        align-items: center;\n        border-bottom: 1px solid #4a6278;\n        padding-bottom: 10px;\n        margin-bottom: 12px;\n      }\n      .era-statusbar-header h4 {\n        margin: 0;\n        font-size: 1.1em;\n        font-weight: 700;\n        color: #1abc9c;\n        text-shadow: 0 0 5px rgba(26, 188, 156, 0.5);\n      }\n      .era-statusbar-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n        gap: 10px;\n      }\n      .era-statusbar-item {\n        background-color: rgba(255, 255, 255, 0.05);\n        padding: 8px 12px;\n        border-radius: 8px;\n      }\n      .era-statusbar-item-label {\n        font-size: 0.85em;\n        color: #bdc3c7;\n        margin-bottom: 4px;\n      }\n      .era-statusbar-item-value {\n        font-size: 1em;\n        font-weight: 700;\n        color: #ecf0f1;\n      }\n      .era-instructions {\n        margin-top: 16px;\n        padding-top: 12px;\n        border-top: 1px solid #4a6278;\n        font-size: 0.9em;\n        line-height: 1.6;\n      }\n      .era-instructions a {\n        color: #3498db;\n        text-decoration: none;\n      }\n      .era-instructions a:hover {\n        text-decoration: underline;\n      }\n      .era-instructions .ai-note {\n        font-size: 0.8em;\n        color: #7f8c8d;\n      }\n    </style>\n  </head>\n  <body>\n    <div class="era-statusbar">\n      <div class="era-statusbar-header">\n        <h4>角色状态</h4>\n      </div>\n      <div class="era-statusbar-grid">\n        <div class="era-statusbar-item">\n          <div class="era-statusbar-item-label">姓名</div>\n          <div class="era-statusbar-item-value" id="player-name">--</div>\n        </div>\n        <div class="era-statusbar-item">\n          <div class="era-statusbar-item-label">等级</div>\n          <div class="era-statusbar-item-value" id="player-level">--</div>\n        </div>\n        <div class="era-statusbar-item">\n          <div class="era-statusbar-item-label">生命值</div>\n          <div class="era-statusbar-item-value" id="player-hp">-- / --</div>\n        </div>\n        <div class="era-statusbar-item">\n          <div class="era-statusbar-item-label">魔力值</div>\n          <div class="era-statusbar-item-value" id="player-mp">-- / --</div>\n        </div>\n      </div>\n\n      <div class="era-statusbar-header" style="margin-top: 16px">\n        <h4>附近NPC</h4>\n      </div>\n      <div id="npc-list" class="era-statusbar-grid">\n        <div class="era-statusbar-item-label" style="padding: 8px 12px">暂无NPC信息</div>\n      </div>\n\n      \x3c!-- \n      AI 你好！当角色卡作者让你修改此文件时，请在修改后删除下面的 "instructions-wrapper"整个 div 元素。\n    --\x3e\n      <div id="instructions-wrapper">\n        <div class="era-statusbar-header" style="margin-top: 16px">\n          <h4>给角色卡作者的说明</h4>\n        </div>\n        <div class="era-instructions">\n          <strong>你接下来需要做的：</strong><br />\n          1. 自己设计角色卡用到的变量结构，并使用 &amp;lt;VariableInsert&amp;gt 标签写入角色的开场白。<br />\n          2. 在角色主世界书的‘ERA变量意图说明’条目中，添加向 AI 说明各个变量意图的提示词。<br />\n          3. 修改本状态栏的 HTML 代码，使其与**你设计的变量系统匹配**。<br />\n          <br />\n          完成第一步和第二步请参考：<br />\n          <a\n            href="https://github.com/RockingSisyphus/ERA-EfficientRollbackArchitecture/blob/master/doc/%E4%BD%A0%E6%9C%80%E5%A5%BD%E8%87%AA%E5%B7%B1%E7%9C%8B%E4%B8%80%E9%81%8D%E7%9A%84era%E5%8D%A1%E5%AE%8C%E6%95%B4%E5%88%B6%E4%BD%9C%E6%96%87%E6%A1%A3%EF%BC%88%E5%8C%85%E5%90%AB%E5%8F%98%E9%87%8F%E5%88%9D%E5%A7%8B%E5%8C%96%E5%92%8C%E4%B8%96%E7%95%8C%E4%B9%A6%E6%8F%90%E7%A4%BA%E8%AF%8D%EF%BC%89/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%AF%B4%E6%98%8E%E4%BD%A0%E7%9A%84%E5%8F%98%E9%87%8F%E7%B3%BB%E7%BB%9F.md"\n            target="_blank"\n            rel="noopener noreferrer"\n            >如何设计和说明你的变量系统</a\n          >\n          <br /><br />\n          推荐你进入‘ERA 状态栏模板’正则中，将‘替换为’的内容（也就是当前模板状态栏的html代码）全部复制发送给 AI (如\n          Cline, ChatGPT, Claude等)，让它帮你完成第 3 步。为了让 AI\n          更好地理解如何修改，请同时将以下链接中的文档内容一并提供给它：<br />\n          <a\n            href="https://github.com/RockingSisyphus/ERA-EfficientRollbackArchitecture/tree/master/doc/%E9%80%82%E5%90%88%E6%8F%90%E4%BE%9B%E7%BB%99ai%E7%9A%84%E7%8A%B6%E6%80%81%E6%A0%8Fhtml%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%EF%BC%88%E5%8F%AA%E5%8C%85%E5%90%ABhtml%E7%8A%B6%E6%80%81%E6%A0%8F%E4%BB%A3%E7%A0%81%E4%B9%A6%E5%86%99%E9%83%A8%E5%88%86%EF%BC%89"\n            target="_blank"\n            rel="noopener noreferrer"\n            >ERA 状态栏开发文档</a\n          >\n          <br /><br />\n          <strong>关于 ERA 框架:</strong><br />\n          作者: 世界的山田<br />\n          ERA 框架交流群: 1006127516<br />\n          <a\n            href="https://github.com/RockingSisyphus/ERA-EfficientRollbackArchitecture/tree/master"\n            target="_blank"\n            rel="noopener noreferrer"\n            >ERA 项目地址</a\n          >\n          |\n          <a\n            href="https://discord.com/channels/1134557553011998840/1423319849400270928"\n            target="_blank"\n            rel="noopener noreferrer"\n            >Discord 发布帖</a\n          >\n        </div>\n      </div>\n    </div>\n\n    <script>\n      document.addEventListener(\'DOMContentLoaded\', () => {\n        const playerName = document.getElementById(\'player-name\');\n        const playerLevel = document.getElementById(\'player-level\');\n        const playerHp = document.getElementById(\'player-hp\');\n        const playerMp = document.getElementById(\'player-mp\');\n        const npcListContainer = document.getElementById(\'npc-list\');\n        let isInitialLoad = true;\n\n        function updateUI(stat) {\n          // 更新玩家信息\n          const pName = _.get(stat, \'player.name\');\n          if (pName !== undefined) playerName.textContent = pName;\n          else if (isInitialLoad) playerName.textContent = \'示例数据\';\n\n          const pLevel = _.get(stat, \'player.level\');\n          if (pLevel !== undefined) playerLevel.textContent = pLevel;\n          else if (isInitialLoad) playerLevel.textContent = \'示例数据\';\n\n          const pHp = _.get(stat, \'player.hp\');\n          const pMaxHp = _.get(stat, \'player.max_hp\');\n          if (pHp !== undefined && pMaxHp !== undefined) playerHp.textContent = `${pHp} / ${pMaxHp}`;\n          else if (isInitialLoad) playerHp.textContent = \'示例数据, 完成步骤1后显示\';\n\n          const pMp = _.get(stat, \'player.mp\');\n          const pMaxMp = _.get(stat, \'player.max_mp\');\n          if (pMp !== undefined && pMaxMp !== undefined) playerMp.textContent = `${pMp} / ${pMaxMp}`;\n          else if (isInitialLoad) playerMp.textContent = \'示例数据\';\n\n          // 更新NPC列表\n          const npcs = _.get(stat, \'world_state.npcs\', {});\n          npcListContainer.innerHTML = \'\'; // 清空旧列表\n          if (_.isEmpty(npcs)) {\n            if (isInitialLoad)\n              npcListContainer.innerHTML =\n                \'<div class="era-statusbar-item-label" style="padding: 8px 12px;">示例数据, 完成步骤1后显示</div>\';\n            else\n              npcListContainer.innerHTML =\n                \'<div class="era-statusbar-item-label" style="padding: 8px 12px;">暂无NPC信息</div>\';\n          } else {\n            for (const npcId in npcs) {\n              const npc = npcs[npcId];\n              const npcElement = document.createElement(\'div\');\n              npcElement.className = \'era-statusbar-item\';\n              npcElement.innerHTML = `\n                    <div class="era-statusbar-item-label">${npc.name || \'未知NPC\'}</div>\n                    <div class="era-statusbar-item-value">心情: ${npc.mood || \'平常\'}</div>\n                `;\n              npcListContainer.appendChild(npcElement);\n            }\n          }\n\n          isInitialLoad = false;\n        }\n\n        eventOn(\'era:writeDone\', detail => {\n          if (detail && detail.statWithoutMeta) {\n            updateUI(detail.statWithoutMeta);\n          }\n        });\n\n        eventEmit(\'era:getCurrentVars\');\n      });\n    <\/script>\n\n    \x3c!-- \n    ================================================================\n    给 AI 的参考代码 (默认注释)\n    \n    AI 你好！当角色卡作者让你修改此文件时，请参考下面的注释代码。\n    \n    ### 宏模式 (简单)\n    - **用法**: 直接在 HTML 中写入 `{{ERA:路径.到.变量}}` 宏。\n    - **优点**: 非常简单，无需编写任何 JavaScript。\n    - **缺点**: 需要在 ERA 设置中开启“强制重载状态栏”，每次变量更新都会导致整个状态栏闪烁刷新。\n    - **示例**: `<div class="era-statusbar-item-value">{{ERA:player.hp}} / {{ERA:player.max_hp}}</div>`\n\n    ---\n\n    ### API 模式 (进阶，推荐)\n    - **用法**: 使用 JavaScript 监听和发送 ERA 框架的事件，来动态地读写变量。\n    - **优点**: 更新平滑无闪烁，性能更好，可以实现复杂的前端交互。\n\n    #### 核心事件与数据结构\n    \n    **1. `era:writeDone` 事件**: 这是响应数据变化的**唯一推荐方式**。当任何变量发生改变后，ERA 都会广播此事件，其回调函数会接收一个包含详细信息的 `detail` 对象。\n    \n    **`writeDone` 事件的 `detail` 对象 (`WriteDonePayload`) 结构如下:**\n    ```typescript\n    {\n      mk: string; // 本次更新的消息密钥\n      message_id: number; // 本次更新的消息 ID\n      actions: {\n        rollback: boolean; // 是否执行了回滚\n        apply: boolean;    // 是否应用了来自AI输出的变量变更\n        resync: boolean;   // 是否因历史记录变化而执行了再同步\n        api: boolean;      // 是否由API直接调用触发\n        apiWrite: boolean; // 是否由API写入操作(如update/insert)触发\n      };\n      selectedMks: (string | null)[]; // 当前聊天的主干消息密钥链\n      editLogs: { [key: string]: any[] }; // 完整的编辑日志\n      stat: any; // 包含 $meta 字段的完整变量状态\n      statWithoutMeta: any; // 不含 $meta 的纯净变量状态 (推荐使用)\n      consecutiveProcessingCount: number; // 对当前消息的连续处理次数\n    }\n    ```\n\n    **2. 核心读取事件**:\n    - **`eventOn(\'era:writeDone\', callback)`**: 监听变量写入完成。\n      `eventOn(\'era:writeDone\', (detail) => { console.log(detail.statWithoutMeta); });`\n    - **`eventEmit(\'era:getCurrentVars\')`**: 主动请求一次最新变量，ERA 会以一个 `era:writeDone` 事件来响应。\n\n    **3. 核心写入事件 (通过 `eventEmit` 发送)**:\n    - **注意**: 所有写入事件最终都会触发一次 `era:writeDone`。为避免无限循环（例如：API写入 -> `writeDone` -> API写入），你可以在 `writeDone` 的监听器中检查 `detail.actions.apiWrite` 字段。\n      `eventOn(\'era:writeDone\', (detail) => { if (detail.actions.apiWrite) return; /* 避免响应由API自身触发的更新 */ });`\n    \n    - **`era:insertByObject`**: 非破坏性地插入一个或多个变量。\n      `eventEmit(\'era:insertByObject\', { player: { score: 0 } });`\n    - **`era:updateByObject`**: 修改一个或多个已存在的变量。\n      `eventEmit(\'era:updateByObject\', { player: { level: 2 } });`\n    - **`era:insertByPath`**: 在指定路径插入一个新变量。\n      `eventEmit(\'era:insertByPath\', { path: \'inventory.item_002\', value: { name: \'新物品\' } });`\n    - **`era:updateByPath`**: 修改指定路径的变量，支持数学运算。\n      `eventEmit(\'era:updateByPath\', { path: \'player.hp\', value: \'-=10\' });`\n    - **`era:deleteByPath`**: 删除指定路径的变量。\n      `eventEmit(\'era:deleteByPath\', { path: \'inventory.item_001\' });`\n    ================================================================\n  --\x3e</body>\n</html>\n\n```',source:{user_input:!1,ai_output:!0,slash_command:!1,world_info:!1},destination:{display:!0,prompt:!1},min_depth:null,max_depth:null};const lt=new y;async function dt(e,n){const t='injectEntryToWorldbook';if(!n.name)return lt.error(t,'注入失败：新条目必须包含 name 字段。'),!1;const a=await async function(e,n){const t='isEntryInWorldbook';try{lt.debug(t,`正在检查世界书「${e}」中是否存在条目「${n}」...`);const a=(await getWorldbook(e)).some(e=>e.name===n);return lt.debug(t,`检查完成，世界书「${e}」中${a?'存在':'不存在'}条目「${n}」。`),a}catch(n){return lt.error(t,`获取世界书「${e}」时发生错误。`,n),!1}}(e,n.name);if(a)return lt.log(t,`条目「${n.name}」已存在于世界书「${e}」中，无需注入。`),!1;try{return lt.log(t,`正在向世界书「${e}」注入新条目「${n.name}」...`),await createWorldbookEntries(e,[n]),lt.log(t,`成功向世界书「${e}」注入新条目「${n.name}」。`),!0}catch(a){return lt.error(t,`向世界书「${e}」注入条目「${n.name}」时发生错误。`,a),!1}}const ct={name:'ERA 变量操作规则',content:'<variable_rule>\n# ERA 变量操作规则\n\n- **无变化则不操作**: 当变量信息与故事发展相比没有变化时，禁止生成任何指令块。\n- **新增则 `Insert`**: 当出现全新的角色、物品、状态或信息时，必须使用 `<VariableInsert>`。\n- **修改则 `Update`**: 当已有的数据需要更新其值时（如等级提升、状态改变），必须使用 `<VariableEdit>`。\n- **移除则 `Delete`**: 当数据被明确地消耗、移除或销毁时，必须使用 `<VariableDelete>`。\n\n## 指令核心规则\n- **`<VariableInsert>`**:\n    - **只增不改**: 用于添加新数据，它绝不会覆盖任何已经存在的数据。\n- **`<VariableEdit>`**:\n    - **只改不增**: 用于修改已存在的数据，它绝不会在不存在的路径上创建新数据。\n- **`<VariableDelete>`**:\n    - **删除节点**: 在指令中，使用一个 **空对象 `{}`** 作为值，表示要删除该键对应的整个节点。\n\n</variable_rule>\n\n<format_request>\n你必须根据有关要求及变量现有状态，补完 `<VariableThink>` 及 `<VariableInsert>`、`<VariableEdit>`、`<VariableDelete>` 等指令块。\n\n**严格遵守以下流程**:\n\n1.  **输出正文**:\n    -   首先，生成本次回复的正文内容。\n\n2.  **输出思考与指令**:\n    -   在正文内容之后，必须立即输出 `<VariableThink>` 块，并在其中进行思考。\n    -   在 `<VariableThink>` 块之后，必须立即输出一个或多个指令块 (`<VariableInsert>`、`<VariableEdit>`、`<VariableDelete>`)。\n\n3.  **格式要求**:\n    -   所有指令块的内容都必须是 **严格合法** 的 JSON 格式。\n    -   所有 JSON 的键（key）都必须使用双引号 `"`。\n    -   严格遵循 `<variable_rule>` 中定义的所有规则。\n\n# ** 回复内容必须仿照格式示例，以该格式回复；必须包含意图分析、变量变更分析和操作计划，以及操作计划计划生成的完整`<VariableInsert>`或`<VariableEdit>`的标签代码块来实现对ERA变量的维护 **\n\n即，必须保证最终输出格式为：\n  {其他内容（如正文）和格式}\n\n  <VariableThink>\n    1.  **意图分析**: {变量更新意图}\n    2.  **操作计划**:\n      - {操作意图}\n  </VariableThink>\n  <VariableInsert>\n  {Insert的JSON格式变量,严格遵守变量路径}\n  </VariableInsert>\n  <VariableEdit>\n  {Edit的JSON格式变量,严格遵守变量路径}\n  </VariableEdit>\n\n### 格式示例\n  {其他内容（如正文）和格式...}\n\n  <VariableThink>\n  1.  **意图分析**: 故事中出现了一个新角色 "Elara"，需要将其添加到 `characters` 对象中。同时，主角 "player" 的 `hp` 从 15 减少到了 10。\n  2.  **操作计划**:\n      -   生成一个 `<VariableInsert>` 块来添加新角色 "Elara"。\n      -   生成一个 `<VariableEdit>` 块来更新 "player" 的 `hp`。\n  </VariableThink>\n  <VariableInsert>\n  {\n    "characters": {\n      "Elara": {\n        "class": "Archer"\n      }\n    }\n  }\n  </VariableInsert>\n  <VariableEdit>\n  {\n    "characters": {\n      "player": {\n        "hp": 10\n      }\n    }\n  }\n  </VariableEdit>\n</format_request>\n',enabled:!0,strategy:{type:'constant',keys:[],keys_secondary:{logic:'and_any',keys:[]},scan_depth:'same_as_global'},position:{type:'at_depth',role:'system',depth:0,order:9999},probability:100,recursion:{prevent_incoming:!1,prevent_outgoing:!1,delay_until:null},effect:{sticky:null,cooldown:null,delay:null}},pt={name:'ERA 变量意图说明',content:'{{//请在这里补充对你设计的变量系统的说明，以便ai理解你的意图并正确的更新变量}}\n',enabled:!0,strategy:{type:'constant',keys:[],keys_secondary:{logic:'and_any',keys:[]},scan_depth:'same_as_global'},position:{type:'at_depth',role:'system',depth:0,order:9998},probability:100,recursion:{prevent_incoming:!1,prevent_outgoing:!1,delay_until:null},effect:{sticky:null,cooldown:null,delay:null}},At=new y;async function gt(){const e='initWorldbook';At.log(e,'开始世界书初始化...');let n=(await getCharWorldbookNames('current')).primary;n?At.log(e,`找到主世界书: 「${n}」`):(At.warn(e,'当前角色卡未绑定主世界书，将创建并绑定一个新的世界书。'),n=await async function(){const e='createAndBindPrimaryWorldbook',n='ERA卡示例世界书';lt.log(e,`正在创建新的世界书「${n}」...`),await createWorldbook(n);const t=await getCharWorldbookNames('current');return t.primary=n,lt.log(e,`正在将新世界书「${n}」绑定为当前角色卡的主世界书...`),await rebindCharWorldbooks('current',t),lt.log(e,'创建并绑定成功。'),n}()),await dt(n,ct),await dt(n,pt),At.log(e,'世界书初始化完成。')}const Ct={class:'action-buttons-card',role:'complementary','aria-label':'ERA 快捷操作'},ut={class:'btns'},bt={class:'btn-group'},mt={class:'btn-group'},ft={class:'btn-group'},vt=(0,Xe.defineComponent)({__name:'ActionButtons',setup(e){const n=new y;async function t(){n.log('onInjectRegex','点击“注入数据隐藏正则”，开始注入...'),async function(){await ot(st),await ot(it)}(),await gt(),n.log('onInjectRegex','注入完成。')}function a(){n.log('onFullSync','点击“完全重算变量”，发送 manual_full_sync 事件。'),eventEmit('manual_full_sync')}function r(){n.log('onLastSync','点击“重算最后一楼变量”，发送 manual_sync 事件。'),eventEmit('manual_sync')}return(e,n)=>((0,Xe.openBlock)(),(0,Xe.createElementBlock)(Xe.Fragment,null,[(0,Xe.createCommentVNode)(' 右侧操作卡：外层自包含，不依赖父组件样式 '),(0,Xe.createElementVNode)('section',Ct,[(0,Xe.createCommentVNode)(' 中文注释：操作卡容器 '),n[8]||(n[8]=(0,Xe.createElementVNode)('h4',{class:'card-title'},'快捷操作',-1)),(0,Xe.createCommentVNode)(' 中文注释：卡片标题 '),(0,Xe.createElementVNode)('div',ut,[(0,Xe.createCommentVNode)(' 中文注释：按钮垂直栈 '),(0,Xe.createElementVNode)('div',bt,[(0,Xe.createElementVNode)('button',{class:'btn primary',title:'重新计算所有变量',onClick:(0,Xe.withModifiers)(a,['stop'])},[(0,Xe.createCommentVNode)(' 中文注释：主按钮 '),n[0]||(n[0]=(0,Xe.createElementVNode)('span',{class:'ico','aria-hidden':'true'},'🔄',-1)),(0,Xe.createCommentVNode)(' 中文注释：图标 '),n[1]||(n[1]=(0,Xe.createElementVNode)('span',{class:'label'},'完全重算变量',-1)),(0,Xe.createCommentVNode)(' 中文注释：文字 ')]),n[2]||(n[2]=(0,Xe.createElementVNode)('p',{class:'btn-desc'},' 当变量与预期不符时，点击此按钮可从**第一条消息**开始重新计算所有消息，以确保数据完全同步。这是一个非常耗时的操作。 ',-1))]),(0,Xe.createElementVNode)('div',mt,[(0,Xe.createElementVNode)('button',{class:'btn subtle',title:'只重算最新一楼的变量',onClick:(0,Xe.withModifiers)(r,['stop'])},[(0,Xe.createCommentVNode)(' 中文注释：次按钮 '),n[3]||(n[3]=(0,Xe.createElementVNode)('span',{class:'ico','aria-hidden':'true'},'♻️',-1)),(0,Xe.createCommentVNode)(' 中文注释：图标 '),n[4]||(n[4]=(0,Xe.createElementVNode)('span',{class:'label'},'重算最后一楼变量',-1)),(0,Xe.createCommentVNode)(' 中文注释：文字 ')]),n[5]||(n[5]=(0,Xe.createElementVNode)('p',{class:'btn-desc'},' 仅根据最新一条消息重新计算变量，速度较快。适用于修复最近一次操作导致的小问题或在手动编辑了最后一条消息后重新写入变量（注意，era会无视所有**用户发送的消息**中的变量更新语句）。 ',-1))]),(0,Xe.createElementVNode)('div',ft,[(0,Xe.createElementVNode)('button',{class:'btn danger',title:'为角色卡注入 ERA 规则',onClick:(0,Xe.withModifiers)(t,['stop'])},[...n[6]||(n[6]=[(0,Xe.createElementVNode)('span',{class:'ico','aria-hidden':'true'},'🥽',-1),(0,Xe.createElementVNode)('span',{class:'label'},'ERA 快速初始化',-1)])]),n[7]||(n[7]=(0,Xe.createElementVNode)('p',{class:'btn-desc'},[(0,Xe.createTextVNode)(' 【角色卡作者专用】点击后，会向当前角色卡注入四条规则：'),(0,Xe.createElementVNode)('br'),(0,Xe.createTextVNode)(' 1. 添加“ERA 数据隐藏正则”以隐藏聊天中的数据标签。'),(0,Xe.createElementVNode)('br'),(0,Xe.createTextVNode)(' 2. 添加“ERA状态栏模板”以将模板状态栏替换至消息。'),(0,Xe.createElementVNode)('br'),(0,Xe.createTextVNode)(' 3. 向角色主世界书中添加“ERA变量操作规则”条目以令ai明白era变量的操作规则。'),(0,Xe.createElementVNode)('br'),(0,Xe.createTextVNode)(' 4. 向角色主世界书中添加“ERA变量意图说明”条目以存放变量意图说明。'),(0,Xe.createElementVNode)('br'),(0,Xe.createTextVNode)(' 注意：作者可以用该功能快速注入使用era的几个基础配置。但你仍旧需要：'),(0,Xe.createElementVNode)('br'),(0,Xe.createTextVNode)(' 1. 自己设计角色卡用到的变量结构并写入角色的开场白。'),(0,Xe.createElementVNode)('br'),(0,Xe.createTextVNode)(' 2. 在角色主世界书中‘ERA变量意图说明’条目中添加向ai说明各个变量的意图的提示词。'),(0,Xe.createElementVNode)('br'),(0,Xe.createTextVNode)(' 3. 修改‘ERA状态栏模板’正则中的状态栏代码，令其与**你设计的变量系统匹配**。 ')],-1))])])])],2112))}});a(266);const ht=(0,on.A)(vt,[['__scopeId','data-v-0e7fe28d']]),xt={class:'settings-card',role:'region','aria-label':'ERA 设置'},yt=['aria-expanded'],Bt={class:'chev','aria-hidden':'true'},wt={class:'content'},Et={class:'toolbar'},kt={class:'vars'},_t=['title'],St={class:'var-editor'},Dt={key:0,class:'switch'},Vt=['onUpdate:modelValue'],Nt=['onUpdate:modelValue','placeholder'],$t=['onUpdate:modelValue','placeholder'],Mt=['onUpdate:modelValue','placeholder','onInput'],jt={class:'type-chip'},Rt=(0,Xe.defineComponent)({__name:'EraSettingsPanel',setup(e){const n=new y,t=(0,Xe.ref)(!1),a=(0,Xe.ref)([]),r=(0,Xe.reactive)({}),o=(0,Xe.reactive)({}),s=(0,Xe.reactive)({});function i(e){try{return JSON.stringify(e,null,2)}catch{return String(e)}}function l(){try{n.debug('loadVars','尝试读取脚本设置...');const e=I();if(n.debug('loadVars','成功读取脚本设置:',e),!e||0===Object.keys(e).length)return n.warn('loadVars','设置对象为空，UI 将不会被填充。'),void(a.value=[]);a.value=[];for(const e of Object.keys(r))delete r[e];for(const e of Object.keys(o))delete o[e];for(const e of Object.keys(s))delete s[e];Object.entries(e).filter(([e])=>'开启悬浮球'!==e).forEach(([e,n])=>{const t='boolean'==typeof(s=n)?'boolean':'number'==typeof s&&Number.isFinite(s)?'number':'string'==typeof s?'string':'json';var s;a.value.push({key:e,value:n,type:t}),'json'===t?o[e]=i(n):r[e]=n})}catch(e){n.error('loadVars','读取脚本变量失败:',e),alert('读取 ERA 设置失败，请检查浏览器控制台获取详细信息。')}}function d(){t.value=!t.value,t.value&&0===a.value.length&&l()}function c(){l()}async function p(){try{await T(e=>{const n={...e};return Object.entries(r).forEach(([e,t])=>{n[e]=t}),Object.entries(o).forEach(([e,t])=>{if(null!=t){if(s[e]?.bad)throw new Error(`键 ${e} 的 JSON 格式不正确`);n[e]=JSON.parse(t)}}),n}),n.log('saveEdits','脚本变量已保存'),window.dispatchEvent(new CustomEvent('era-settings-updated')),l()}catch(e){n.error('saveEdits','保存失败：',e),alert(`保存失败：${e?.message??e}`)}}return(e,n)=>((0,Xe.openBlock)(),(0,Xe.createElementBlock)(Xe.Fragment,null,[(0,Xe.createCommentVNode)(' 外层卡片：与 ActionButtons 保持一致的玻璃卡风格，但默认收起 '),(0,Xe.createElementVNode)('section',xt,[(0,Xe.createCommentVNode)(' 设置卡片容器 '),(0,Xe.createCommentVNode)(' 标题行：可点击折叠/展开 '),(0,Xe.createElementVNode)('button',{class:'card-header','aria-expanded':t.value,onClick:d},[(0,Xe.createCommentVNode)(' 点击切换展开状态 '),n[0]||(n[0]=(0,Xe.createElementVNode)('span',{class:'title'},'ERA 设置',-1)),(0,Xe.createCommentVNode)(' 标题文字 '),(0,Xe.createElementVNode)('span',Bt,(0,Xe.toDisplayString)(t.value?'▾':'▸'),1),(0,Xe.createCommentVNode)(' 展开箭头 ')],8,yt),(0,Xe.createCommentVNode)(' 内容体：默认收起；展开后显示变量列表与操作 '),(0,Xe.withDirectives)((0,Xe.createElementVNode)('div',wt,[(0,Xe.createCommentVNode)(' 展开内容容器 '),(0,Xe.createCommentVNode)(' 顶部操作区：刷新/保存/重置编辑 '),(0,Xe.createElementVNode)('div',Et,[(0,Xe.createCommentVNode)(' 工具条 '),(0,Xe.createElementVNode)('button',{class:'mini-btn',title:'重新读取脚本变量',onClick:(0,Xe.withModifiers)(l,['stop'])},'🔄 重新读取'),(0,Xe.createCommentVNode)(' 读取按钮 '),n[1]||(n[1]=(0,Xe.createElementVNode)('div',{class:'spacer'},null,-1)),(0,Xe.createCommentVNode)(' 占位撑开 '),(0,Xe.createElementVNode)('button',{class:'mini-btn subtle',title:'丢弃未保存的修改',onClick:(0,Xe.withModifiers)(c,['stop'])},'↩︎ 丢弃修改'),(0,Xe.createCommentVNode)(' 丢弃编辑 '),(0,Xe.createElementVNode)('button',{class:'mini-btn primary',title:'保存修改到脚本变量',onClick:(0,Xe.withModifiers)(p,['stop'])},'💾 保存修改'),(0,Xe.createCommentVNode)(' 保存修改 ')]),(0,Xe.createCommentVNode)(' 变量列表：逐项渲染 '),(0,Xe.createElementVNode)('div',kt,[a.value.length>0?((0,Xe.openBlock)(),(0,Xe.createElementBlock)(Xe.Fragment,{key:0},[(0,Xe.createCommentVNode)(' 有变量时渲染列表 '),((0,Xe.openBlock)(!0),(0,Xe.createElementBlock)(Xe.Fragment,null,(0,Xe.renderList)(a.value,e=>{return(0,Xe.openBlock)(),(0,Xe.createElementBlock)('div',{key:e.key,class:'var-row'},[(0,Xe.createCommentVNode)(' 每个变量一行 '),(0,Xe.createElementVNode)('label',{class:'var-key',title:e.key},(0,Xe.toDisplayString)(e.key),9,_t),(0,Xe.createCommentVNode)(' 变量名 '),(0,Xe.createCommentVNode)(' 根据变量类型选择不同的编辑控件 '),(0,Xe.createElementVNode)('div',St,[(0,Xe.createCommentVNode)(' 编辑器容器 '),(0,Xe.createCommentVNode)(' 布尔：勾选框 '),'boolean'===e.type?((0,Xe.openBlock)(),(0,Xe.createElementBlock)('label',Dt,[(0,Xe.createCommentVNode)(' 自定义开关外观 '),(0,Xe.withDirectives)((0,Xe.createElementVNode)('input',{'onUpdate:modelValue':n=>r[e.key]=n,type:'checkbox'},null,8,Vt),[[Xe.vModelCheckbox,r[e.key]]]),(0,Xe.createCommentVNode)(' 勾选值 '),n[2]||(n[2]=(0,Xe.createElementVNode)('span',{class:'track'},null,-1)),(0,Xe.createCommentVNode)(' 轨道 ')])):'number'===e.type?((0,Xe.openBlock)(),(0,Xe.createElementBlock)(Xe.Fragment,{key:1},[(0,Xe.createCommentVNode)(' 数字：number 输入 '),(0,Xe.withDirectives)((0,Xe.createElementVNode)('input',{'onUpdate:modelValue':n=>r[e.key]=n,type:'number',class:'ipt',placeholder:String(e.value)},null,8,Nt),[[Xe.vModelText,r[e.key],void 0,{number:!0}]]),(0,Xe.createCommentVNode)(' 数字输入 ')],64)):'string'===e.type?((0,Xe.openBlock)(),(0,Xe.createElementBlock)(Xe.Fragment,{key:2},[(0,Xe.createCommentVNode)(' 字符串：text 输入 '),(0,Xe.withDirectives)((0,Xe.createElementVNode)('input',{'onUpdate:modelValue':n=>r[e.key]=n,type:'text',class:'ipt',placeholder:String(e.value)},null,8,$t),[[Xe.vModelText,r[e.key]]]),(0,Xe.createCommentVNode)(' 文本输入 ')],64)):((0,Xe.openBlock)(),(0,Xe.createElementBlock)(Xe.Fragment,{key:3},[(0,Xe.createCommentVNode)(' 其他（对象/数组/null/未知）：JSON 文本域 '),(0,Xe.withDirectives)((0,Xe.createElementVNode)('textarea',{'onUpdate:modelValue':n=>o[e.key]=n,class:'ipt ta',placeholder:i(e.value),onInput:n=>function(e){const n=o[e]??'';if(''!==n.trim())try{JSON.parse(n),s[e]={ok:!0,bad:!1,msg:'JSON 格式有效'}}catch(n){s[e]={bad:!0,ok:!1,msg:`JSON 格式错误：${n?.message??''}`}}else s[e]={bad:!0,ok:!1,msg:'不能为空（若要设为 null 请写 null）'}}(e.key)},null,40,Mt),[[Xe.vModelText,o[e.key]]]),(0,Xe.createCommentVNode)(' JSON 文本域 '),(0,Xe.createElementVNode)('span',{class:(0,Xe.normalizeClass)(['hint',{ok:s[e.key]?.ok,bad:s[e.key]?.bad}])},(0,Xe.toDisplayString)(s[e.key]?.msg??'以 JSON 格式编辑此值'),3),(0,Xe.createCommentVNode)(' JSON 校验提示 ')],64))]),(0,Xe.createCommentVNode)(' 类型徽标 '),(0,Xe.createElementVNode)('span',jt,(0,Xe.toDisplayString)((t=e.type,'boolean'===t?'布尔':'number'===t?'数字':'string'===t?'字符串':'JSON')),1),(0,Xe.createCommentVNode)(' 类型展示 ')]);var t}),128))],64)):((0,Xe.openBlock)(),(0,Xe.createElementBlock)(Xe.Fragment,{key:1},[(0,Xe.createCommentVNode)(' 没有变量时的占位 '),n[3]||(n[3]=(0,Xe.createElementVNode)('div',{class:'placeholder'},[(0,Xe.createElementVNode)('p',null,'未读取到任何脚本变量。'),(0,Xe.createCommentVNode)(' 文本提示 '),(0,Xe.createElementVNode)('p',{class:'dim'},[(0,Xe.createTextVNode)(' 请先确保在 '),(0,Xe.createElementVNode)('code',null,'app_ready'),(0,Xe.createTextVNode)(' 或初始化阶段通过 '),(0,Xe.createElementVNode)('code',null,'initializeExternalSettings()'),(0,Xe.createTextVNode)(' 写入默认变量。 ')]),(0,Xe.createCommentVNode)(' 辅助说明 ')],-1))],64))])],512),[[Xe.vShow,t.value]])])],2112))}});a(101);const Ot=(0,on.A)(Rt,[['__scopeId','data-v-63750456']]),Ft={class:'right-rail'},It={class:'right-rail-content-wrapper'},Tt=(0,Xe.defineComponent)({__name:'RightRail',setup:e=>(e,n)=>((0,Xe.openBlock)(),(0,Xe.createElementBlock)('aside',Ft,[(0,Xe.createElementVNode)('div',It,[(0,Xe.createVNode)(ht),(0,Xe.createVNode)(Ot),(0,Xe.createVNode)(at)])]))});a(892);const Pt=(0,on.A)(Tt,[['__scopeId','data-v-61d00544']]),Lt=(0,Xe.defineComponent)({__name:'ThemeManager',setup:(e,{expose:n})=>(n({isDarkMode:(0,Xe.ref)(!1)}),()=>{})});a(6);const zt=Lt,Gt={class:'era-expanded-layer'},Jt={class:'era-shell'},Yt=(0,Xe.defineComponent)({__name:'App',props:{initialView:{type:String,required:!0,default:'FloatingBall'},eventData:{type:Object,default:()=>null}},setup(e){const n=new y,t=(0,Xe.ref)(null),a=(0,Xe.ref)(!1),r=()=>{try{const e=I(),r=e?.['开启黑夜模式']??!1;a.value=r,t.value&&(t.value.isDarkMode=r),n.log('loadThemeSetting','主题已更新为: '+(r?'Dark':'Light'))}catch(e){n.error('loadThemeSetting','加载主题设置失败',e),a.value=!1}};(0,Xe.onMounted)(()=>{r(),window.addEventListener('era-settings-updated',r)}),(0,Xe.onBeforeUnmount)(()=>{window.removeEventListener('era-settings-updated',r)});const o=e,s=(0,Xe.ref)(o.initialView),i=(0,Xe.computed)(()=>o.eventData||null);return(0,Xe.watch)(()=>o.eventData,(e,t)=>{n.debug('watch:eventData','eventData prop 发生变化',{newData:e,oldData:t})},{deep:!0}),(0,Xe.watch)(()=>o.initialView,e=>{n.debug('watch:initialView',`initialView prop 发生变化，新视图: ${e}`),s.value=e}),(e,r)=>((0,Xe.openBlock)(),(0,Xe.createElementBlock)('div',{class:(0,Xe.normalizeClass)(['era-app-container',{'dark-theme':a.value}])},[(0,Xe.createVNode)(zt,{ref_key:'themeManager',ref:t},null,512),(0,Xe.withDirectives)((0,Xe.createVNode)(et,{onClick:r[0]||(r[0]=e=>{return t='ExpandedView',n.debug('requestSwitchView',`请求切换视图到: ${t}`),void(window.eraUiSwitchView?window.eraUiSwitchView(t):n.warn('requestSwitchView','全局切换函数 eraUiSwitchView 未找到'));var t})},null,512),[[Xe.vShow,'FloatingBall'===s.value]]),(0,Xe.withDirectives)((0,Xe.createElementVNode)('div',Gt,[(0,Xe.createCommentVNode)(' 视口级展开层：悬浮模态容器 '),(0,Xe.createElementVNode)('div',Jt,[(0,Xe.createCommentVNode)(' 新增横向壳容器：左面板 + 右侧栏 '),(0,Xe.createVNode)(Xn,{data:i.value},null,8,['data']),(0,Xe.createVNode)(Pt)])],512),[[Xe.vShow,'ExpandedView'===s.value]])],2))}});a(55),a(377);const qt=(0,on.A)(Yt,[['__scopeId','data-v-3a37be2a']]);const Ut=new y;let Wt=null,Ht=null,Kt='FloatingBall',Qt=null;function Xt(n,t){Ut.debug('renderApp',`开始渲染 App，视图: ${n}`,{dataToPass:t}),Ht?(Zt(),Wt=(0,Xe.createApp)(qt,{initialView:n,eventData:t}),Wt.use(e()),Wt.mount(Ht[0]),function(){const e=getScriptId();$(`head > div[script_id="${e}"]`).remove();const n=$('<div>').attr('script_id',e).append($('head > style',document).clone());$('head').append(n)}(),Ut.debug('renderApp','渲染完成')):Ut.warn('renderApp','挂载点不存在，渲染中止')}function Zt(){Wt&&(Ut.debug('unmountVueApp','卸载 Vue 实例'),Wt.unmount(),Wt=null)}function ea(){Ut.log('unloadUI','UI 脚本开始卸载'),Zt(),$(`head > div[script_id="${getScriptId()}"]`).remove(),Ht&&(Ut.debug('unloadUI','销毁挂载点'),$(`div#era-ui-mount-point-${getScriptId()}`).remove(),Ht=null),Ut.log('unloadUI','UI 脚本卸载完成')}window.eraUiSwitchView=function(e){Ut.debug('switchView',`请求切换视图到: ${e}`),Kt!==e?(Kt=e,Ut.log('switchView','视图已切换，重新渲染 App'),Xt(e,Qt)):Ut.debug('switchView',`视图已经是 ${e}，无需切换`)},$(()=>{if(!1===I()['开启悬浮球'])return Ut.log('initialize','UI ahow ball disabled, attempting to unload...'),void ea();Ut.log('initialize','UI 脚本开始初始化'),Ht=$('<div>').attr('id',`era-ui-mount-point-${getScriptId()}`).css({position:'fixed',bottom:'20px',left:'20px','z-index':1e4}),Ut.debug('$(document).ready','创建挂载点',Ht),$('body').append(Ht),Ut.debug('$(document).ready','挂载点已添加到 body'),Xt(Kt,Qt),eventOn('era:writeDone',e=>{Ut.log('era:writeDone','接收到 era:writeDone 事件，准备刷新 UI',e),Qt=e,Xt(Kt,Qt)}),Ut.debug('$(document).ready','已设置 era:writeDone 事件监听器')}),$(window).on('pagehide',ea);[...w.INIT,...w.SYNC,...w.API,...w.UPDATE_MK_ONLY,...w.COLLISION_DETECTORS,...w.COMBO_STARTERS].forEach(e=>{eventOn(e,n=>Ke(e,n))}),eventOn(getButtonEvent('写入变量修改'),()=>Ke('manual_write')),eventOn(getButtonEvent('手动同步状态'),()=>Ke('manual_sync')),eventOn(getButtonEvent('强制完全重算'),()=>Ke('manual_full_sync'));
//# sourceMappingURL=index.js.map