var __webpack_modules__ = {
  "./src/debug-dom-update/index.ts": 
  /*!***************************************!*\
  !*** ./src/debug-dom-update/index.ts ***!
  \***************************************/ () => {
    eval("{\n// src/debug-dom-update/index.ts\nconsole.log('[Debug DOM Update] Script file loaded. Waiting for DOM ready.');\n$(() => {\n    console.log('[Debug DOM Update] DOM ready. Initializing script.');\n    // --- Data and rendering function ---\n    const complexData = {\n        level1: {\n            level2: {\n                level3: { message: \"Hello, nested world!\", value: 12345 }\n            },\n            status: \"OK\"\n        }\n    };\n    function recursiveRender(data) {\n        if (typeof data !== 'object' || data === null)\n            return String(data);\n        let html = '<ul style=\"padding-left: 15px; margin: 0; list-style-type: circle;\">';\n        for (const key in data) {\n            html += `<li><strong>${key}:</strong> ${recursiveRender(data[key])}</li>`;\n        }\n        html += '</ul>';\n        return html;\n    }\n    // --- UI creation helper ---\n    function createDemoInstance(id, top, title) {\n        console.log(`[Debug DOM Update] Creating instance: ${id}`);\n        const $container = $('<div>')\n            .attr('id', `container-${id}`)\n            .css({\n            position: 'fixed', top, right: '80px', width: '250px',\n            border: '1px solid white', padding: '10px',\n            background: 'rgba(0,0,0,0.8)', color: 'white', 'z-index': 9998\n        })\n            .hide();\n        const $button = $('<div>')\n            .attr('id', `button-${id}`)\n            .text(title)\n            .css({\n            position: 'fixed', top, right: '20px', width: '50px', height: '50px',\n            borderRadius: '50%', background: 'rgba(0,100,255,0.7)', color: 'white',\n            display: 'flex', alignItems: 'center', justifyContent: 'center',\n            cursor: 'pointer', 'z-index': 9999, textAlign: 'center'\n        });\n        console.log(`[Debug DOM Update] Appending elements for ${id} to parent document body.`);\n        // Use the explicit `parent.document.body` which is safer.\n        $(parent.document.body).append($container, $button);\n        // Verify if the element was actually added to the main document\n        if ($(parent.document.body).find(`#button-${id}`).length > 0) {\n            console.log(`[Debug DOM Update] SUCCESS: Button for ${id} found in parent document.`);\n        }\n        else {\n            console.error(`[Debug DOM Update] FAILED: Button for ${id} not found in parent document after append.`);\n        }\n        return { $container, $button };\n    }\n    // --- Instance 1: Problematic ---\n    console.log('[Debug DOM Update] Setting up \"problem\" instance.');\n    const problem = createDemoInstance('problem', '20px', '问题');\n    const problemHtml = recursiveRender(complexData);\n    problem.$container.html(problemHtml);\n    problem.$button.on('click', () => {\n        console.log('[Debug DOM Update] \"problem\" button clicked.');\n        problem.$container.toggle();\n    });\n    // --- Instance 2: Fixed ---\n    console.log('[Debug DOM Update] Setting up \"fixed\" instance.');\n    const fixed = createDemoInstance('fixed', '90px', '修复');\n    const cachedHtml = recursiveRender(complexData);\n    let isRendered = false;\n    fixed.$button.on('click', () => {\n        console.log('[Debug DOM Update] \"fixed\" button clicked.');\n        if (!isRendered && !fixed.$container.is(':visible')) {\n            console.log('[Debug DOM Update] Rendering content for \"fixed\" instance on first click.');\n            fixed.$container.html(cachedHtml);\n            isRendered = true;\n        }\n        fixed.$container.toggle();\n    });\n    // --- Cleanup logic ---\n    $(window).on('pagehide', () => {\n        console.log('[Debug DOM Update] \"pagehide\" event triggered. Cleaning up UI elements.');\n        // Use `parent.document.body` to ensure we're removing from the main page.\n        $(parent.document.body).find('#container-problem, #button-problem, #container-fixed, #button-fixed').remove();\n        console.log('[Debug DOM Update] Cleanup complete.');\n    });\n    console.log('[Debug DOM Update] Script initialization finished. UI should be visible.');\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/debug-dom-update/index.ts\n\n}");
  }
};

var __webpack_exports__ = {};

__webpack_modules__["./src/debug-dom-update/index.ts"]();